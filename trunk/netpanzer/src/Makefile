# Makefile.in generated by automake 1.7.2 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/netpanzer
pkglibdir = $(libdir)/netpanzer
pkgincludedir = $(includedir)/netpanzer
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/matze/netpanzer/mk/autoconf/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/matze/netpanzer/mk/autoconf/missing --run tar
AUTOCONF = ${SHELL} /home/matze/netpanzer/mk/autoconf/missing --run autoconf
AUTOHEADER = ${SHELL} /home/matze/netpanzer/mk/autoconf/missing --run autoheader
AUTOMAKE = ${SHELL} /home/matze/netpanzer/mk/autoconf/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEDEPEND = 
MAKEINFO = ${SHELL} /home/matze/netpanzer/mk/autoconf/missing --run makeinfo
OBJEXT = o
PACKAGE = netpanzer
PACKAGE_BUGREPORT = netpanzer-devel@nongnu.org
PACKAGE_NAME = netpanzer
PACKAGE_STRING = netpanzer 0.1
PACKAGE_TARNAME = netpanzer
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
PHYSFS_AVAILABLE = yes
PHYSFS_CFLAGS = 
PHYSFS_LIBS = -lphysfs
PKG_CONFIG = /usr/bin/pkg-config
SDLIMAGE_AVAILABLE = yes
SDLIMAGE_CFLAGS = 
SDLIMAGE_LIBS = -lSDL_image
SDLMIXER_AVAILABLE = yes
SDLMIXER_CFLAGS = 
SDLMIXER_LIBS = -lSDL_mixer
SDLNET_AVAILABLE = yes
SDLNET_CFLAGS = 
SDLNET_LIBS = -lSDL_net
SDL_CFLAGS = -I/usr/include/SDL -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -Wl,-rpath,/usr/lib -lSDL -lpthread
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.1
XML_CFLAGS = -I/usr/include/libxml2  
XML_LIBS = -lxml2 -lz -lm  
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/matze/netpanzer/mk/autoconf/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
AUTOMAKE_OPTIONS = subdir-objects

bin_PROGRAMS = netpanzer

netpanzer_CPPFLAGS = -ILib/2D \
    -ILib/View \
    -ILib \
    -ILib/Interfaces \
    -ILib/PObject/Classes \
    -ILib/PObject/Templates \
    -ILib/Particles \
    -ILib/Types \
    -ILib/optionmm \
    -ILib/Xml \
    -INetPanzer/Classes/AI \
    -INetPanzer/Classes \
    -INetPanzer/Classes/Network \
    -INetPanzer/Classes/Units \
    -INetPanzer/Classes/Weapons \
    -INetPanzer/Core \
    -INetPanzer/Interfaces/unix \
    -INetPanzer/Interfaces \
    -INetPanzer/Port \
    -INetPanzer/Structs \
    -INetPanzer/Views/Game \
    -INetPanzer/Views \
    -INetPanzer/Views/MainMenu/Multi \
    -INetPanzer/Views/MainMenu \
    -INetPanzer/Views/MainMenu/Options \
    -IUILib/Network \
    -IUILib \
    -IUILib/SDL

netpanzer_CXXFLAGS = $(XML_CFLAGS) $(SDL_CFLAGS) $(SDLNET_CFLAGS) \
		     $(SDLMIXER_CFLAGS) $(SDLIMAGE_CFLAGS) $(PHYSFS_CFLAGS)

netpanzer_LDFLAGS = $(XML_LIBS) $(SDL_LIBS) $(SDLNET_LIBS) $(SDLMIXER_LIBS) \
		  $(SDLIMAGE_LIBS) $(PHYSFS_LIBS)

netpanzer_SOURCES = \
    Lib/2D/Color.cpp \
    Lib/2D/Color.hpp \
    Lib/2D/ColorTable.cpp \
    Lib/2D/ColorTable.hpp \
    Lib/2D/DigitText.cpp \
    Lib/2D/DigitText.hpp \
    Lib/2D/FontSystem2D.cpp \
    Lib/2D/FontSystem2D.hpp \
    Lib/2D/PackedSurface.cpp \
    Lib/2D/PackedSurface.hpp \
    Lib/2D/Palette.cpp \
    Lib/2D/Palette.hpp \
    Lib/2D/RGBColor.cpp \
    Lib/2D/RGBColor.hpp \
    Lib/2D/Span.cpp \
    Lib/2D/Span.hpp \
    Lib/2D/Surface.cpp \
    Lib/2D/Surface.hpp \
    Lib/View/AbstractButton.cpp \
    Lib/View/AbstractButton.hpp \
    Lib/View/Button.cpp \
    Lib/View/Button.hpp \
    Lib/View/CheckBox.cpp \
    Lib/View/CheckBox.hpp \
    Lib/View/Choice.cpp \
    Lib/View/Choice.hpp \
    Lib/View/Component.cpp \
    Lib/View/Component.hpp \
    Lib/View/Desktop.cpp \
    Lib/View/Desktop.hpp \
    Lib/View/Icon.cpp \
    Lib/View/Icon.hpp \
    Lib/View/InputEvent.hpp \
    Lib/View/Label.cpp \
    Lib/View/Label.hpp \
    Lib/View/MouseEvent.hpp \
    Lib/View/ScrollBar.cpp \
    Lib/View/ScrollBar.hpp \
    Lib/View/StateChangedCallback.hpp \
    Lib/View/String.cpp \
    Lib/View/String.hpp \
    Lib/View/TextArea.cpp \
    Lib/View/TextArea.hpp \
    Lib/View/TextComponent.cpp \
    Lib/View/TextComponent.hpp \
    Lib/View/TextField.cpp \
    Lib/View/TextField.hpp \
    Lib/View/View.cpp \
    Lib/View/View.hpp \
    Lib/View/ViewGlobals.cpp \
    Lib/View/ViewGlobals.hpp \
    Lib/View/cButton.cpp \
    Lib/View/cButton.hpp \
    Lib/View/cInputField.cpp \
    Lib/View/cInputField.hpp \
    Lib/Exception.cpp \
    Lib/Exception.hpp \
    Lib/FileSystem.cpp \
    Lib/FileSystem.hpp \
    Lib/FileUtil.cpp \
    Lib/FileUtil.hpp \
    Lib/FindFirst.cpp \
    Lib/FindFirst.hpp \
    Lib/LibView.cpp \
    Lib/LibView.hpp \
    Lib/Log.cpp \
    Lib/Log.hpp \
    Lib/Math.cpp \
    Lib/Math.hpp \
    Lib/NoCopy.hpp \
    Lib/Physics.cpp \
    Lib/Physics.hpp \
    Lib/SplitPath.cpp \
    Lib/SplitPath.hpp \
    Lib/cGrowList.hpp \
    Lib/cMouse.cpp \
    Lib/cMouse.hpp \
    Lib/cTimeStamp.cpp \
    Lib/cTimeStamp.hpp \
    Lib/codewiz.hpp \
    Lib/Interfaces/TimerInterface.cpp \
    Lib/Interfaces/TimerInterface.hpp \
    Lib/Interfaces/UtilInterface.cpp \
    Lib/Interfaces/UtilInterface.hpp \
    Lib/PObject/Classes/Angle.cpp \
    Lib/PObject/Classes/Angle.hpp \
    Lib/PObject/Classes/BitArray.cpp \
    Lib/PObject/Classes/BitArray.hpp \
    Lib/PObject/Classes/BoundBox.cpp \
    Lib/PObject/Classes/BoundBox.hpp \
    Lib/PObject/Classes/BresenhamLine.cpp \
    Lib/PObject/Classes/BresenhamLine.hpp \
    Lib/PObject/Classes/FileList.cpp \
    Lib/PObject/Classes/FileList.hpp \
    Lib/PObject/Classes/PArray.cpp \
    Lib/PObject/Classes/PArray.hpp \
    Lib/PObject/Classes/Timer.cpp \
    Lib/PObject/Classes/Timer.hpp \
    Lib/PObject/Templates/ArrayGrowableTemplate.hpp \
    Lib/PObject/Templates/ArrayTemplate.hpp \
    Lib/PObject/Templates/BucketArrayTemplate.hpp \
    Lib/PObject/Templates/LinkListDoubleTemplate.hpp \
    Lib/PObject/Templates/LinkListSingleTemplate.hpp \
    Lib/PObject/Templates/QueueTemplate.hpp \
    Lib/Particles/ChunkTrajectoryParticle2D.cpp \
    Lib/Particles/ChunkTrajectoryParticle2D.hpp \
    Lib/Particles/CloudParticle2D.cpp \
    Lib/Particles/CloudParticle2D.hpp \
    Lib/Particles/CraterParticle2D.cpp \
    Lib/Particles/CraterParticle2D.hpp \
    Lib/Particles/DirtKickParticle2D.cpp \
    Lib/Particles/DirtKickParticle2D.hpp \
    Lib/Particles/ExplosionFlashParticle2D.hpp \
    Lib/Particles/FireParticle2D.cpp \
    Lib/Particles/FireParticle2D.hpp \
    Lib/Particles/FireParticleSystem2D.cpp \
    Lib/Particles/FireParticleSystem2D.hpp \
    Lib/Particles/FlameParticle2D.cpp \
    Lib/Particles/FlameParticle2D.hpp \
    Lib/Particles/FlashParticle2D.cpp \
    Lib/Particles/FlashParticle2D.hpp \
    Lib/Particles/GroundExplosionParticle2D.cpp \
    Lib/Particles/GroundExplosionParticle2D.hpp \
    Lib/Particles/GroundExplosionParticleSystem2D.cpp \
    Lib/Particles/GroundExplosionParticleSystem2D.hpp \
    Lib/Particles/MovementDirtPuffParticle2D.hpp \
    Lib/Particles/Particle2D.cpp \
    Lib/Particles/Particle2D.hpp \
    Lib/Particles/ParticleInterface.cpp \
    Lib/Particles/ParticleInterface.hpp \
    Lib/Particles/ParticleSystem2D.cpp \
    Lib/Particles/ParticleSystem2D.hpp \
    Lib/Particles/ParticleSystemGlobals.cpp \
    Lib/Particles/ParticleSystemGlobals.hpp \
    Lib/Particles/ParticleTweakView.cpp \
    Lib/Particles/ParticleTweakView.hpp \
    Lib/Particles/PuffParticle2D.cpp \
    Lib/Particles/PuffParticle2D.hpp \
    Lib/Particles/RadarPingParticle2D.cpp \
    Lib/Particles/RadarPingParticle2D.hpp \
    Lib/Particles/SmokingTrajectoryParticle2D.cpp \
    Lib/Particles/SmokingTrajectoryParticle2D.hpp \
    Lib/Particles/SmolderParticleSystem2D.cpp \
    Lib/Particles/SmolderParticleSystem2D.hpp \
    Lib/Particles/SnowParticle2D.cpp \
    Lib/Particles/SnowParticle2D.hpp \
    Lib/Particles/SnowParticleSystem2D.cpp \
    Lib/Particles/SnowParticleSystem2D.hpp \
    Lib/Particles/SparkParticle2D.cpp \
    Lib/Particles/SparkParticle2D.hpp \
    Lib/Particles/TemplateExplosionSystem.cpp \
    Lib/Particles/TemplateExplosionSystem.hpp \
    Lib/Particles/TemplateMuzzleSystem.cpp \
    Lib/Particles/TemplateMuzzleSystem.hpp \
    Lib/Particles/TrajectoryParticle2D.cpp \
    Lib/Particles/TrajectoryParticle2D.hpp \
    Lib/Particles/VectorPuffParticle2D.cpp \
    Lib/Particles/VectorPuffParticle2D.hpp \
    Lib/Particles/WindParticle2D.cpp \
    Lib/Particles/WindParticle2D.hpp \
    Lib/Types/LibTypes.hpp \
    Lib/Types/fRect.cpp \
    Lib/Types/fRect.hpp \
    Lib/Types/fXY.hpp \
    Lib/Types/fXYZ.cpp \
    Lib/Types/fXYZ.hpp \
    Lib/Types/iRect.cpp \
    Lib/Types/iRect.hpp \
    Lib/Types/iXY.cpp \
    Lib/Types/iXY.hpp \
    Lib/optionmm/option.cpp \
    Lib/optionmm/command_line.cpp \
    Lib/optionmm/command_line.hpp \
    Lib/optionmm/option.hpp \
    Lib/Xml/XmlConfig.cpp \
    Lib/Xml/XmlConfig.hpp \
    Lib/Xml/XmlParser.hpp \
    Lib/Xml/XmlParser.cpp \
    Lib/Xml/XmlStore.cpp \
    Lib/Xml/XmlStore.hpp \
    NetPanzer/Classes/AI/Astar.cpp \
    NetPanzer/Classes/AI/Astar.hpp \
    NetPanzer/Classes/AI/PathList.cpp \
    NetPanzer/Classes/AI/PathList.hpp \
    NetPanzer/Classes/AI/PathingState.cpp \
    NetPanzer/Classes/AI/PathingState.hpp \
    NetPanzer/Classes/BonusUnitPowerUp.cpp \
    NetPanzer/Classes/BonusUnitPowerUp.hpp \
    NetPanzer/Classes/DDHardSurface.cpp \
    NetPanzer/Classes/DDHardSurface.hpp \
    NetPanzer/Classes/EnemyRadarPowerUp.cpp \
    NetPanzer/Classes/EnemyRadarPowerUp.hpp \
    NetPanzer/Classes/InternalLink.hpp \
    NetPanzer/Classes/Objective.cpp \
    NetPanzer/Classes/Objective.hpp \
    NetPanzer/Classes/ObjectiveMessageTypes.hpp \
    NetPanzer/Classes/Outpost.cpp \
    NetPanzer/Classes/Outpost.hpp \
    NetPanzer/Classes/PlacementMatrix.cpp \
    NetPanzer/Classes/PlacementMatrix.hpp \
    NetPanzer/Classes/PlayerID.cpp \
    NetPanzer/Classes/PlayerID.hpp \
    NetPanzer/Classes/PlayerState.cpp \
    NetPanzer/Classes/PlayerState.hpp \
    NetPanzer/Classes/PlayerUnitConfig.cpp \
    NetPanzer/Classes/PlayerUnitConfig.hpp \
    NetPanzer/Classes/PowerUp.cpp \
    NetPanzer/Classes/PowerUp.hpp \
    NetPanzer/Classes/Projectile.cpp \
    NetPanzer/Classes/Projectile.hpp \
    NetPanzer/Classes/SelectionBoxSprite.cpp \
    NetPanzer/Classes/SelectionBoxSprite.hpp \
    NetPanzer/Classes/SelectionList.cpp \
    NetPanzer/Classes/SelectionList.hpp \
    NetPanzer/Classes/SpawnList.cpp \
    NetPanzer/Classes/SpawnList.hpp \
    NetPanzer/Classes/Sprite.cpp \
    NetPanzer/Classes/Sprite.hpp \
    NetPanzer/Classes/SpriteSorter.cpp \
    NetPanzer/Classes/SpriteSorter.hpp \
    NetPanzer/Classes/SurfaceDesc.hpp \
    NetPanzer/Classes/TileEngine.cpp \
    NetPanzer/Classes/TileEngine.hpp \
    NetPanzer/Classes/TileSet.cpp \
    NetPanzer/Classes/TileSet.hpp \
    NetPanzer/Classes/Unit.cpp \
    NetPanzer/Classes/Unit.hpp \
    NetPanzer/Classes/UnitBase.hpp \
    NetPanzer/Classes/UnitBlackBoard.cpp \
    NetPanzer/Classes/UnitBlackBoard.hpp \
    NetPanzer/Classes/UnitBucketArray.cpp \
    NetPanzer/Classes/UnitBucketArray.hpp \
    NetPanzer/Classes/UnitID.hpp \
    NetPanzer/Classes/UnitIDList.hpp \
    NetPanzer/Classes/UnitLifecycles.hpp \
    NetPanzer/Classes/UnitList.cpp \
    NetPanzer/Classes/UnitList.hpp \
    NetPanzer/Classes/UnitMessage.cpp \
    NetPanzer/Classes/UnitMessage.hpp \
    NetPanzer/Classes/UnitMessageTypes.hpp \
    NetPanzer/Classes/UnitOpcodeEncoder.cpp \
    NetPanzer/Classes/UnitOpcodeEncoder.hpp \
    NetPanzer/Classes/UnitOpcodes.hpp \
    NetPanzer/Classes/UnitPowerUp.cpp \
    NetPanzer/Classes/UnitPowerUp.hpp \
    NetPanzer/Classes/UnitState.cpp \
    NetPanzer/Classes/UnitState.hpp \
    NetPanzer/Classes/ViewCamera.cpp \
    NetPanzer/Classes/ViewCamera.hpp \
    NetPanzer/Classes/WadMapTable.hpp \
    NetPanzer/Classes/WorldInputCmdProcessor.cpp \
    NetPanzer/Classes/WorldInputCmdProcessor.hpp \
    NetPanzer/Classes/WorldMap.cpp \
    NetPanzer/Classes/WorldMap.hpp \
    NetPanzer/Classes/Network/ClientConnectDaemon.cpp \
    NetPanzer/Classes/Network/ClientConnectDaemon.hpp \
    NetPanzer/Classes/Network/ClientMessageRouter.cpp \
    NetPanzer/Classes/Network/ClientMessageRouter.hpp \
    NetPanzer/Classes/Network/ClientServerNetMessage.hpp \
    NetPanzer/Classes/Network/ConnectNetMessage.hpp \
    NetPanzer/Classes/Network/GameControlNetMessage.hpp \
    NetPanzer/Classes/Network/NetMessageEncoder.cpp \
    NetPanzer/Classes/Network/NetMessageEncoder.hpp \
    NetPanzer/Classes/Network/NetMessageEnums.hpp \
    NetPanzer/Classes/Network/NetPacket.hpp \
    NetPanzer/Classes/Network/NetPacketQueues.cpp \
    NetPanzer/Classes/Network/NetPacketQueues.hpp \
    NetPanzer/Classes/Network/NetworkClient.cpp \
    NetPanzer/Classes/Network/NetworkClient.hpp \
    NetPanzer/Classes/Network/NetworkInterface.cpp \
    NetPanzer/Classes/Network/NetworkInterface.hpp \
    NetPanzer/Classes/Network/NetworkReturnCodes.hpp \
    NetPanzer/Classes/Network/NetworkServer.cpp \
    NetPanzer/Classes/Network/NetworkServer.hpp \
    NetPanzer/Classes/Network/NetworkState.cpp \
    NetPanzer/Classes/Network/NetworkState.hpp \
    NetPanzer/Classes/Network/ObjectiveNetMessage.hpp \
    NetPanzer/Classes/Network/PlayerNetMessage.hpp \
    NetPanzer/Classes/Network/PowerUpNetMessage.hpp \
    NetPanzer/Classes/Network/ServerConnectDaemon.cpp \
    NetPanzer/Classes/Network/ServerConnectDaemon.hpp \
    NetPanzer/Classes/Network/ServerMessageRouter.cpp \
    NetPanzer/Classes/Network/ServerMessageRouter.hpp \
    NetPanzer/Classes/Network/SystemNetMessage.hpp \
    NetPanzer/Classes/Network/TerminalNetMesg.hpp \
    NetPanzer/Classes/Network/UnitNetMessage.cpp \
    NetPanzer/Classes/Network/UnitNetMessage.hpp \
    NetPanzer/Classes/Units/Abrams.cpp \
    NetPanzer/Classes/Units/Abrams.hpp \
    NetPanzer/Classes/Units/Archer.cpp \
    NetPanzer/Classes/Units/Archer.hpp \
    NetPanzer/Classes/Units/Hammerhead.cpp \
    NetPanzer/Classes/Units/Hammerhead.hpp \
    NetPanzer/Classes/Units/Humvee.cpp \
    NetPanzer/Classes/Units/Humvee.hpp \
    NetPanzer/Classes/Units/Leopard.cpp \
    NetPanzer/Classes/Units/Leopard.hpp \
    NetPanzer/Classes/Units/Lynx.cpp \
    NetPanzer/Classes/Units/Lynx.hpp \
    NetPanzer/Classes/Units/M109.cpp \
    NetPanzer/Classes/Units/M109.hpp \
    NetPanzer/Classes/Units/Scorpion.cpp \
    NetPanzer/Classes/Units/Scorpion.hpp \
    NetPanzer/Classes/Units/SpahPanzer.cpp \
    NetPanzer/Classes/Units/SpahPanzer.hpp \
    NetPanzer/Classes/Units/UnitGlobals.cpp \
    NetPanzer/Classes/Units/UnitGlobals.hpp \
    NetPanzer/Classes/Units/Valentine.cpp \
    NetPanzer/Classes/Units/Valentine.hpp \
    NetPanzer/Classes/Units/Vehicle.cpp \
    NetPanzer/Classes/Units/Vehicle.hpp \
    NetPanzer/Classes/Weapons/BulletWeapon.cpp \
    NetPanzer/Classes/Weapons/BulletWeapon.hpp \
    NetPanzer/Classes/Weapons/MissleWeapon.cpp \
    NetPanzer/Classes/Weapons/MissleWeapon.hpp \
    NetPanzer/Classes/Weapons/ShellWeapon.cpp \
    NetPanzer/Classes/Weapons/ShellWeapon.hpp \
    NetPanzer/Classes/Weapons/Weapon.cpp \
    NetPanzer/Classes/Weapons/Weapon.hpp \
    NetPanzer/Classes/Weapons/WeaponGlobals.cpp \
    NetPanzer/Classes/Weapons/WeaponGlobals.hpp \
    NetPanzer/Core/NetworkGlobals.cpp \
    NetPanzer/Core/NetworkGlobals.hpp \
    NetPanzer/Core/loadPics.cpp \
    NetPanzer/Core/loadPics.hpp \
    NetPanzer/Core/main.cpp \
    NetPanzer/Interfaces/unix/NetworkClientUnix.cpp \
    NetPanzer/Interfaces/unix/NetworkClientUnix.hpp \
    NetPanzer/Interfaces/unix/NetworkServerUnix.cpp \
    NetPanzer/Interfaces/unix/NetworkServerUnix.hpp \
    NetPanzer/Interfaces/ChatInterface.cpp \
    NetPanzer/Interfaces/ChatInterface.hpp \
    NetPanzer/Interfaces/Client.cpp \
    NetPanzer/Interfaces/Client.hpp \
    NetPanzer/Interfaces/ConsoleInterface.cpp \
    NetPanzer/Interfaces/ConsoleInterface.hpp \
    NetPanzer/Interfaces/GameConfig.cpp \
    NetPanzer/Interfaces/GameConfig.hpp \
    NetPanzer/Interfaces/GameControlRulesDaemon.cpp \
    NetPanzer/Interfaces/GameControlRulesDaemon.hpp \
    NetPanzer/Interfaces/GameManager.cpp \
    NetPanzer/Interfaces/GameManager.hpp \
    NetPanzer/Interfaces/KeyboardInterface.cpp \
    NetPanzer/Interfaces/KeyboardInterface.hpp \
    NetPanzer/Interfaces/MapInterface.cpp \
    NetPanzer/Interfaces/MapInterface.hpp \
    NetPanzer/Interfaces/MapsManager.cpp \
    NetPanzer/Interfaces/MapsManager.hpp \
    NetPanzer/Interfaces/MiniMapInterface.cpp \
    NetPanzer/Interfaces/MiniMapInterface.hpp \
    NetPanzer/Interfaces/MouseInterface.cpp \
    NetPanzer/Interfaces/MouseInterface.hpp \
    NetPanzer/Interfaces/ObjectiveInterface.cpp \
    NetPanzer/Interfaces/ObjectiveInterface.hpp \
    NetPanzer/Interfaces/PathScheduler.cpp \
    NetPanzer/Interfaces/PathScheduler.hpp \
    NetPanzer/Interfaces/PlayerInterface.cpp \
    NetPanzer/Interfaces/PlayerInterface.hpp \
    NetPanzer/Interfaces/PowerUpInterface.cpp \
    NetPanzer/Interfaces/PowerUpInterface.hpp \
    NetPanzer/Interfaces/ProjectileInterface.cpp \
    NetPanzer/Interfaces/ProjectileInterface.hpp \
    NetPanzer/Interfaces/Server.cpp \
    NetPanzer/Interfaces/Server.hpp \
    NetPanzer/Interfaces/Stats.cpp \
    NetPanzer/Interfaces/Stats.hpp \
    NetPanzer/Interfaces/TileInterface.cpp \
    NetPanzer/Interfaces/TileInterface.hpp \
    NetPanzer/Interfaces/UnitInterface.cpp \
    NetPanzer/Interfaces/UnitInterface.hpp \
    NetPanzer/Interfaces/UnitProfileInterface.cpp \
    NetPanzer/Interfaces/UnitProfileInterface.hpp \
    NetPanzer/Interfaces/WorldViewInterface.cpp \
    NetPanzer/Interfaces/WorldViewInterface.hpp \
    NetPanzer/Port/Gdatstct.cpp \
    NetPanzer/Port/Gdatstct.hpp \
    NetPanzer/Port/MapData.hpp \
    NetPanzer/Port/blitters.cpp \
    NetPanzer/Structs/KeyActionEnum.hpp \
    NetPanzer/Structs/MapFileStruct.hpp \
    NetPanzer/Structs/TileSetStruct.hpp \
    NetPanzer/Structs/UnitTypes.hpp \
    NetPanzer/Views/Game/AreYouSureExitView.cpp \
    NetPanzer/Views/Game/AreYouSureExitView.hpp \
    NetPanzer/Views/Game/AreYouSureResignView.cpp \
    NetPanzer/Views/Game/AreYouSureResignView.hpp \
    NetPanzer/Views/Game/ChatView.cpp \
    NetPanzer/Views/Game/ChatView.hpp \
    NetPanzer/Views/Game/CodeStatsView.cpp \
    NetPanzer/Views/Game/CodeStatsView.hpp \
    NetPanzer/Views/Game/ControlPaletteView.cpp \
    NetPanzer/Views/Game/ControlPaletteView.hpp \
    NetPanzer/Views/Game/ControlView.cpp \
    NetPanzer/Views/Game/ControlView.hpp \
    NetPanzer/Views/Game/GameInfoView.cpp \
    NetPanzer/Views/Game/GameInfoView.hpp \
    NetPanzer/Views/Game/GameTemplateView.cpp \
    NetPanzer/Views/Game/GameTemplateView.hpp \
    NetPanzer/Views/Game/GameToolbarView.cpp \
    NetPanzer/Views/Game/GameToolbarView.hpp \
    NetPanzer/Views/Game/GameView.cpp \
    NetPanzer/Views/Game/GameView.hpp \
    NetPanzer/Views/Game/HelpScrollView.cpp \
    NetPanzer/Views/Game/HelpScrollView.hpp \
    NetPanzer/Views/Game/LobbyView.cpp \
    NetPanzer/Views/Game/LobbyView.hpp \
    NetPanzer/Views/Game/MiniMapOptionsView.cpp \
    NetPanzer/Views/Game/MiniMapOptionsView.hpp \
    NetPanzer/Views/Game/MiniMapView.cpp \
    NetPanzer/Views/Game/MiniMapView.hpp \
    NetPanzer/Views/Game/MiniRankView.cpp \
    NetPanzer/Views/Game/MiniRankView.hpp \
    NetPanzer/Views/Game/ProgressView.cpp \
    NetPanzer/Views/Game/ProgressView.hpp \
    NetPanzer/Views/Game/RankView.cpp \
    NetPanzer/Views/Game/RankView.hpp \
    NetPanzer/Views/Game/ResignView.cpp \
    NetPanzer/Views/Game/ResignView.hpp \
    NetPanzer/Views/Game/VehicleSelectionView.cpp \
    NetPanzer/Views/Game/VehicleSelectionView.hpp \
    NetPanzer/Views/Game/WinnerMesgView.cpp \
    NetPanzer/Views/Game/WinnerMesgView.hpp \
    NetPanzer/Views/Game/oldCodeStatsView.cpp \
    NetPanzer/Views/Game/oldCodeStatsView.hpp \
    NetPanzer/Views/GameViewGlobals.cpp \
    NetPanzer/Views/GameViewGlobals.hpp \
    NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp \
    NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.hpp \
    NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp \
    NetPanzer/Views/MainMenu/Multi/FlagSelectionView.hpp \
    NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp \
    NetPanzer/Views/MainMenu/Multi/GetSessionHostView.hpp \
    NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp \
    NetPanzer/Views/MainMenu/Multi/GetSessionView.hpp \
    NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp \
    NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.hpp \
    NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp \
    NetPanzer/Views/MainMenu/Multi/HostOptionsView.hpp \
    NetPanzer/Views/MainMenu/Multi/HostView.cpp \
    NetPanzer/Views/MainMenu/Multi/HostView.hpp \
    NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp \
    NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp \
    NetPanzer/Views/MainMenu/Multi/ImageSelectorView.hpp \
    NetPanzer/Views/MainMenu/Multi/JoinView.cpp \
    NetPanzer/Views/MainMenu/Multi/JoinView.hpp \
    NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp \
    NetPanzer/Views/MainMenu/Multi/MapSelectionView.hpp \
    NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp \
    NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.hpp \
    NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp \
    NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.hpp \
    NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp \
    NetPanzer/Views/MainMenu/Multi/PlayerNameView.hpp \
    NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp \
    NetPanzer/Views/MainMenu/Multi/UnitColorView.hpp \
    NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp \
    NetPanzer/Views/MainMenu/Multi/UnitSelectionView.hpp \
    NetPanzer/Views/MainMenu/HelpView.cpp \
    NetPanzer/Views/MainMenu/HelpView.hpp \
    NetPanzer/Views/MainMenu/MainMenuView.cpp \
    NetPanzer/Views/MainMenu/MainMenuView.hpp \
    NetPanzer/Views/MainMenu/MenuTemplateView.cpp \
    NetPanzer/Views/MainMenu/MenuTemplateView.hpp \
    NetPanzer/Views/MainMenu/OptionsTemplateView.cpp \
    NetPanzer/Views/MainMenu/OptionsTemplateView.hpp \
    NetPanzer/Views/MainMenu/OrderingView.cpp \
    NetPanzer/Views/MainMenu/OrderingView.hpp \
    NetPanzer/Views/MainMenu/RMouseHackView.cpp \
    NetPanzer/Views/MainMenu/RMouseHackView.hpp \
    NetPanzer/Views/MainMenu/SkirmishView.cpp \
    NetPanzer/Views/MainMenu/SkirmishView.hpp \
    NetPanzer/Views/MainMenu/SpecialButtonView.cpp \
    NetPanzer/Views/MainMenu/SpecialButtonView.hpp \
    NetPanzer/Views/MainMenu/Options/ControlsView.cpp \
    NetPanzer/Views/MainMenu/Options/ControlsView.hpp \
    NetPanzer/Views/MainMenu/Options/InterfaceView.cpp \
    NetPanzer/Views/MainMenu/Options/InterfaceView.hpp \
    NetPanzer/Views/MainMenu/Options/SoundView.cpp \
    NetPanzer/Views/MainMenu/Options/SoundView.hpp \
    NetPanzer/Views/MainMenu/Options/VisualsView.cpp \
    NetPanzer/Views/MainMenu/Options/VisualsView.hpp \
    UILib/Network/Client.cpp \
    UILib/Network/Client.hpp \
    UILib/Network/ClientList.cpp \
    UILib/Network/ClientList.hpp \
    UILib/Network/ClientSocket.cpp \
    UILib/Network/ClientSocket.hpp \
    UILib/Network/ServerSocket.cpp \
    UILib/Network/ServerSocket.hpp \
    UILib/Network/SocketMessage.cpp \
    UILib/Network/SocketMessage.hpp \
    UILib/Network/SDLNet.cpp \
    UILib/Network/SDLNet.hpp \
    UILib/DummySound.cpp \
    UILib/DummySound.hpp \
    UILib/Sound.cpp \
    UILib/Sound.hpp \
    UILib/UIDraw.cpp \
    UILib/UIDraw.hpp \
    UILib/SDL/SDLDraw.cpp \
    UILib/SDL/SDLDraw.hpp \
    UILib/SDL/SDLSound.cpp \
    UILib/SDL/SDLSound.hpp 

subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mk/autoconf/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = netpanzer$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_netpanzer_OBJECTS = Lib/2D/netpanzer-Color.$(OBJEXT) \
	Lib/2D/netpanzer-ColorTable.$(OBJEXT) \
	Lib/2D/netpanzer-DigitText.$(OBJEXT) \
	Lib/2D/netpanzer-FontSystem2D.$(OBJEXT) \
	Lib/2D/netpanzer-PackedSurface.$(OBJEXT) \
	Lib/2D/netpanzer-Palette.$(OBJEXT) \
	Lib/2D/netpanzer-RGBColor.$(OBJEXT) \
	Lib/2D/netpanzer-Span.$(OBJEXT) \
	Lib/2D/netpanzer-Surface.$(OBJEXT) \
	Lib/View/netpanzer-AbstractButton.$(OBJEXT) \
	Lib/View/netpanzer-Button.$(OBJEXT) \
	Lib/View/netpanzer-CheckBox.$(OBJEXT) \
	Lib/View/netpanzer-Choice.$(OBJEXT) \
	Lib/View/netpanzer-Component.$(OBJEXT) \
	Lib/View/netpanzer-Desktop.$(OBJEXT) \
	Lib/View/netpanzer-Icon.$(OBJEXT) \
	Lib/View/netpanzer-Label.$(OBJEXT) \
	Lib/View/netpanzer-ScrollBar.$(OBJEXT) \
	Lib/View/netpanzer-String.$(OBJEXT) \
	Lib/View/netpanzer-TextArea.$(OBJEXT) \
	Lib/View/netpanzer-TextComponent.$(OBJEXT) \
	Lib/View/netpanzer-TextField.$(OBJEXT) \
	Lib/View/netpanzer-View.$(OBJEXT) \
	Lib/View/netpanzer-ViewGlobals.$(OBJEXT) \
	Lib/View/netpanzer-cButton.$(OBJEXT) \
	Lib/View/netpanzer-cInputField.$(OBJEXT) \
	Lib/netpanzer-Exception.$(OBJEXT) \
	Lib/netpanzer-FileSystem.$(OBJEXT) \
	Lib/netpanzer-FileUtil.$(OBJEXT) \
	Lib/netpanzer-FindFirst.$(OBJEXT) \
	Lib/netpanzer-LibView.$(OBJEXT) Lib/netpanzer-Log.$(OBJEXT) \
	Lib/netpanzer-Math.$(OBJEXT) Lib/netpanzer-Physics.$(OBJEXT) \
	Lib/netpanzer-SplitPath.$(OBJEXT) \
	Lib/netpanzer-cMouse.$(OBJEXT) \
	Lib/netpanzer-cTimeStamp.$(OBJEXT) \
	Lib/Interfaces/netpanzer-TimerInterface.$(OBJEXT) \
	Lib/Interfaces/netpanzer-UtilInterface.$(OBJEXT) \
	Lib/PObject/Classes/netpanzer-Angle.$(OBJEXT) \
	Lib/PObject/Classes/netpanzer-BitArray.$(OBJEXT) \
	Lib/PObject/Classes/netpanzer-BoundBox.$(OBJEXT) \
	Lib/PObject/Classes/netpanzer-BresenhamLine.$(OBJEXT) \
	Lib/PObject/Classes/netpanzer-FileList.$(OBJEXT) \
	Lib/PObject/Classes/netpanzer-PArray.$(OBJEXT) \
	Lib/PObject/Classes/netpanzer-Timer.$(OBJEXT) \
	Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-CloudParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-CraterParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-DirtKickParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-FireParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-FireParticleSystem2D.$(OBJEXT) \
	Lib/Particles/netpanzer-FlameParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-FlashParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-GroundExplosionParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.$(OBJEXT) \
	Lib/Particles/netpanzer-Particle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-ParticleInterface.$(OBJEXT) \
	Lib/Particles/netpanzer-ParticleSystem2D.$(OBJEXT) \
	Lib/Particles/netpanzer-ParticleSystemGlobals.$(OBJEXT) \
	Lib/Particles/netpanzer-ParticleTweakView.$(OBJEXT) \
	Lib/Particles/netpanzer-PuffParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-RadarPingParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-SmolderParticleSystem2D.$(OBJEXT) \
	Lib/Particles/netpanzer-SnowParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-SnowParticleSystem2D.$(OBJEXT) \
	Lib/Particles/netpanzer-SparkParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-TemplateExplosionSystem.$(OBJEXT) \
	Lib/Particles/netpanzer-TemplateMuzzleSystem.$(OBJEXT) \
	Lib/Particles/netpanzer-TrajectoryParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-VectorPuffParticle2D.$(OBJEXT) \
	Lib/Particles/netpanzer-WindParticle2D.$(OBJEXT) \
	Lib/Types/netpanzer-fRect.$(OBJEXT) \
	Lib/Types/netpanzer-fXYZ.$(OBJEXT) \
	Lib/Types/netpanzer-iRect.$(OBJEXT) \
	Lib/Types/netpanzer-iXY.$(OBJEXT) \
	Lib/optionmm/netpanzer-option.$(OBJEXT) \
	Lib/optionmm/netpanzer-command_line.$(OBJEXT) \
	Lib/Xml/netpanzer-XmlConfig.$(OBJEXT) \
	Lib/Xml/netpanzer-XmlParser.$(OBJEXT) \
	Lib/Xml/netpanzer-XmlStore.$(OBJEXT) \
	NetPanzer/Classes/AI/netpanzer-Astar.$(OBJEXT) \
	NetPanzer/Classes/AI/netpanzer-PathList.$(OBJEXT) \
	NetPanzer/Classes/AI/netpanzer-PathingState.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-BonusUnitPowerUp.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-DDHardSurface.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-Objective.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-Outpost.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-PlacementMatrix.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-PlayerID.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-PlayerState.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-PlayerUnitConfig.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-PowerUp.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-Projectile.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-SelectionBoxSprite.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-SelectionList.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-SpawnList.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-Sprite.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-SpriteSorter.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-TileEngine.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-TileSet.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-Unit.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-UnitBlackBoard.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-UnitBucketArray.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-UnitList.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-UnitMessage.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-UnitPowerUp.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-UnitState.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-ViewCamera.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.$(OBJEXT) \
	NetPanzer/Classes/netpanzer-WorldMap.$(OBJEXT) \
	NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.$(OBJEXT) \
	NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.$(OBJEXT) \
	NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.$(OBJEXT) \
	NetPanzer/Classes/Network/netpanzer-NetPacketQueues.$(OBJEXT) \
	NetPanzer/Classes/Network/netpanzer-NetworkClient.$(OBJEXT) \
	NetPanzer/Classes/Network/netpanzer-NetworkInterface.$(OBJEXT) \
	NetPanzer/Classes/Network/netpanzer-NetworkServer.$(OBJEXT) \
	NetPanzer/Classes/Network/netpanzer-NetworkState.$(OBJEXT) \
	NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.$(OBJEXT) \
	NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.$(OBJEXT) \
	NetPanzer/Classes/Network/netpanzer-UnitNetMessage.$(OBJEXT) \
	NetPanzer/Classes/Units/netpanzer-Abrams.$(OBJEXT) \
	NetPanzer/Classes/Units/netpanzer-Archer.$(OBJEXT) \
	NetPanzer/Classes/Units/netpanzer-Hammerhead.$(OBJEXT) \
	NetPanzer/Classes/Units/netpanzer-Humvee.$(OBJEXT) \
	NetPanzer/Classes/Units/netpanzer-Leopard.$(OBJEXT) \
	NetPanzer/Classes/Units/netpanzer-Lynx.$(OBJEXT) \
	NetPanzer/Classes/Units/netpanzer-M109.$(OBJEXT) \
	NetPanzer/Classes/Units/netpanzer-Scorpion.$(OBJEXT) \
	NetPanzer/Classes/Units/netpanzer-SpahPanzer.$(OBJEXT) \
	NetPanzer/Classes/Units/netpanzer-UnitGlobals.$(OBJEXT) \
	NetPanzer/Classes/Units/netpanzer-Valentine.$(OBJEXT) \
	NetPanzer/Classes/Units/netpanzer-Vehicle.$(OBJEXT) \
	NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.$(OBJEXT) \
	NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.$(OBJEXT) \
	NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.$(OBJEXT) \
	NetPanzer/Classes/Weapons/netpanzer-Weapon.$(OBJEXT) \
	NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.$(OBJEXT) \
	NetPanzer/Core/netpanzer-NetworkGlobals.$(OBJEXT) \
	NetPanzer/Core/netpanzer-loadPics.$(OBJEXT) \
	NetPanzer/Core/netpanzer-main.$(OBJEXT) \
	NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.$(OBJEXT) \
	NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-ChatInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-Client.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-ConsoleInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-GameConfig.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-GameManager.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-KeyboardInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-MapInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-MapsManager.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-MiniMapInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-MouseInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-ObjectiveInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-PathScheduler.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-PlayerInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-PowerUpInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-ProjectileInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-Server.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-Stats.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-TileInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-UnitInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-UnitProfileInterface.$(OBJEXT) \
	NetPanzer/Interfaces/netpanzer-WorldViewInterface.$(OBJEXT) \
	NetPanzer/Port/netpanzer-Gdatstct.$(OBJEXT) \
	NetPanzer/Port/netpanzer-blitters.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-AreYouSureExitView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-AreYouSureResignView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-ChatView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-CodeStatsView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-ControlPaletteView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-ControlView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-GameInfoView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-GameTemplateView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-GameToolbarView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-GameView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-HelpScrollView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-LobbyView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-MiniMapView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-MiniRankView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-ProgressView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-RankView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-ResignView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-VehicleSelectionView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-WinnerMesgView.$(OBJEXT) \
	NetPanzer/Views/Game/netpanzer-oldCodeStatsView.$(OBJEXT) \
	NetPanzer/Views/netpanzer-GameViewGlobals.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/netpanzer-HelpView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/netpanzer-MainMenuView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/netpanzer-OrderingView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/netpanzer-SkirmishView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.$(OBJEXT) \
	NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.$(OBJEXT) \
	UILib/Network/netpanzer-Client.$(OBJEXT) \
	UILib/Network/netpanzer-ClientList.$(OBJEXT) \
	UILib/Network/netpanzer-ClientSocket.$(OBJEXT) \
	UILib/Network/netpanzer-ServerSocket.$(OBJEXT) \
	UILib/Network/netpanzer-SocketMessage.$(OBJEXT) \
	UILib/Network/netpanzer-SDLNet.$(OBJEXT) \
	UILib/netpanzer-DummySound.$(OBJEXT) \
	UILib/netpanzer-Sound.$(OBJEXT) \
	UILib/netpanzer-UIDraw.$(OBJEXT) \
	UILib/SDL/netpanzer-SDLDraw.$(OBJEXT) \
	UILib/SDL/netpanzer-SDLSound.$(OBJEXT)
netpanzer_OBJECTS = $(am_netpanzer_OBJECTS)
netpanzer_LDADD = $(LDADD)
netpanzer_DEPENDENCIES =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/mk/autoconf/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = Lib/$(DEPDIR)/netpanzer-Exception.Po \
	Lib/$(DEPDIR)/netpanzer-FileSystem.Po \
	Lib/$(DEPDIR)/netpanzer-FileUtil.Po \
	Lib/$(DEPDIR)/netpanzer-FindFirst.Po \
	Lib/$(DEPDIR)/netpanzer-LibView.Po \
	Lib/$(DEPDIR)/netpanzer-Log.Po \
	Lib/$(DEPDIR)/netpanzer-Math.Po \
	Lib/$(DEPDIR)/netpanzer-Physics.Po \
	Lib/$(DEPDIR)/netpanzer-SplitPath.Po \
	Lib/$(DEPDIR)/netpanzer-cMouse.Po \
	Lib/$(DEPDIR)/netpanzer-cTimeStamp.Po \
	Lib/2D/$(DEPDIR)/netpanzer-Color.Po \
	Lib/2D/$(DEPDIR)/netpanzer-ColorTable.Po \
	Lib/2D/$(DEPDIR)/netpanzer-DigitText.Po \
	Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.Po \
	Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.Po \
	Lib/2D/$(DEPDIR)/netpanzer-Palette.Po \
	Lib/2D/$(DEPDIR)/netpanzer-RGBColor.Po \
	Lib/2D/$(DEPDIR)/netpanzer-Span.Po \
	Lib/2D/$(DEPDIR)/netpanzer-Surface.Po \
	Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.Po \
	Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.Po \
	Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.Po \
	Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.Po \
	Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.Po \
	Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.Po \
	Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.Po \
	Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.Po \
	Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.Po \
	Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.Po \
	Lib/Types/$(DEPDIR)/netpanzer-fRect.Po \
	Lib/Types/$(DEPDIR)/netpanzer-fXYZ.Po \
	Lib/Types/$(DEPDIR)/netpanzer-iRect.Po \
	Lib/Types/$(DEPDIR)/netpanzer-iXY.Po \
	Lib/View/$(DEPDIR)/netpanzer-AbstractButton.Po \
	Lib/View/$(DEPDIR)/netpanzer-Button.Po \
	Lib/View/$(DEPDIR)/netpanzer-CheckBox.Po \
	Lib/View/$(DEPDIR)/netpanzer-Choice.Po \
	Lib/View/$(DEPDIR)/netpanzer-Component.Po \
	Lib/View/$(DEPDIR)/netpanzer-Desktop.Po \
	Lib/View/$(DEPDIR)/netpanzer-Icon.Po \
	Lib/View/$(DEPDIR)/netpanzer-Label.Po \
	Lib/View/$(DEPDIR)/netpanzer-ScrollBar.Po \
	Lib/View/$(DEPDIR)/netpanzer-String.Po \
	Lib/View/$(DEPDIR)/netpanzer-TextArea.Po \
	Lib/View/$(DEPDIR)/netpanzer-TextComponent.Po \
	Lib/View/$(DEPDIR)/netpanzer-TextField.Po \
	Lib/View/$(DEPDIR)/netpanzer-View.Po \
	Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.Po \
	Lib/View/$(DEPDIR)/netpanzer-cButton.Po \
	Lib/View/$(DEPDIR)/netpanzer-cInputField.Po \
	Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.Po \
	Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.Po \
	Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.Po \
	Lib/optionmm/$(DEPDIR)/netpanzer-command_line.Po \
	Lib/optionmm/$(DEPDIR)/netpanzer-option.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.Po \
	NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.Po \
	NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.Po \
	NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.Po \
	NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.Po \
	NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.Po \
	NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.Po \
	NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.Po \
	NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.Po \
	NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.Po \
	NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.Po \
	NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.Po \
	NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.Po \
	NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.Po \
	NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.Po \
	NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.Po \
	NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.Po \
	NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.Po \
	NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.Po \
	NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.Po \
	NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.Po \
	NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.Po \
	NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.Po \
	NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.Po \
	NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.Po \
	NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.Po \
	NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.Po \
	NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.Po \
	NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.Po \
	NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.Po \
	NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.Po \
	NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.Po \
	NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.Po \
	NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.Po \
	NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.Po \
	NetPanzer/Core/$(DEPDIR)/netpanzer-main.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.Po \
	NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.Po \
	NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.Po \
	NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.Po \
	NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.Po \
	NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.Po \
	NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.Po \
	NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.Po \
	NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.Po \
	NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.Po \
	NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.Po \
	NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.Po \
	NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.Po \
	NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.Po \
	NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.Po \
	NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.Po \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.Po \
	NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.Po \
	NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.Po \
	NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.Po \
	NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.Po \
	UILib/$(DEPDIR)/netpanzer-DummySound.Po \
	UILib/$(DEPDIR)/netpanzer-Sound.Po \
	UILib/$(DEPDIR)/netpanzer-UIDraw.Po \
	UILib/Network/$(DEPDIR)/netpanzer-Client.Po \
	UILib/Network/$(DEPDIR)/netpanzer-ClientList.Po \
	UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.Po \
	UILib/Network/$(DEPDIR)/netpanzer-SDLNet.Po \
	UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.Po \
	UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.Po \
	UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.Po \
	UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(netpanzer_SOURCES)
DIST_COMMON = Makefile.am Makefile.in configure
SOURCES = $(netpanzer_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
Lib/2D/.dirstamp:
	@$(mkinstalldirs) Lib/2D
	@: > Lib/2D/.dirstamp
Lib/2D/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) Lib/2D/$(DEPDIR)
	@: > Lib/2D/$(DEPDIR)/.dirstamp
Lib/2D/netpanzer-Color.$(OBJEXT): Lib/2D/.dirstamp \
	Lib/2D/$(DEPDIR)/.dirstamp
Lib/2D/netpanzer-ColorTable.$(OBJEXT): Lib/2D/.dirstamp \
	Lib/2D/$(DEPDIR)/.dirstamp
Lib/2D/netpanzer-DigitText.$(OBJEXT): Lib/2D/.dirstamp \
	Lib/2D/$(DEPDIR)/.dirstamp
Lib/2D/netpanzer-FontSystem2D.$(OBJEXT): Lib/2D/.dirstamp \
	Lib/2D/$(DEPDIR)/.dirstamp
Lib/2D/netpanzer-PackedSurface.$(OBJEXT): Lib/2D/.dirstamp \
	Lib/2D/$(DEPDIR)/.dirstamp
Lib/2D/netpanzer-Palette.$(OBJEXT): Lib/2D/.dirstamp \
	Lib/2D/$(DEPDIR)/.dirstamp
Lib/2D/netpanzer-RGBColor.$(OBJEXT): Lib/2D/.dirstamp \
	Lib/2D/$(DEPDIR)/.dirstamp
Lib/2D/netpanzer-Span.$(OBJEXT): Lib/2D/.dirstamp \
	Lib/2D/$(DEPDIR)/.dirstamp
Lib/2D/netpanzer-Surface.$(OBJEXT): Lib/2D/.dirstamp \
	Lib/2D/$(DEPDIR)/.dirstamp
Lib/View/.dirstamp:
	@$(mkinstalldirs) Lib/View
	@: > Lib/View/.dirstamp
Lib/View/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) Lib/View/$(DEPDIR)
	@: > Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-AbstractButton.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-Button.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-CheckBox.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-Choice.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-Component.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-Desktop.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-Icon.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-Label.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-ScrollBar.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-String.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-TextArea.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-TextComponent.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-TextField.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-View.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-ViewGlobals.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-cButton.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/View/netpanzer-cInputField.$(OBJEXT): Lib/View/.dirstamp \
	Lib/View/$(DEPDIR)/.dirstamp
Lib/.dirstamp:
	@$(mkinstalldirs) Lib
	@: > Lib/.dirstamp
Lib/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) Lib/$(DEPDIR)
	@: > Lib/$(DEPDIR)/.dirstamp
Lib/netpanzer-Exception.$(OBJEXT): Lib/.dirstamp Lib/$(DEPDIR)/.dirstamp
Lib/netpanzer-FileSystem.$(OBJEXT): Lib/.dirstamp \
	Lib/$(DEPDIR)/.dirstamp
Lib/netpanzer-FileUtil.$(OBJEXT): Lib/.dirstamp Lib/$(DEPDIR)/.dirstamp
Lib/netpanzer-FindFirst.$(OBJEXT): Lib/.dirstamp Lib/$(DEPDIR)/.dirstamp
Lib/netpanzer-LibView.$(OBJEXT): Lib/.dirstamp Lib/$(DEPDIR)/.dirstamp
Lib/netpanzer-Log.$(OBJEXT): Lib/.dirstamp Lib/$(DEPDIR)/.dirstamp
Lib/netpanzer-Math.$(OBJEXT): Lib/.dirstamp Lib/$(DEPDIR)/.dirstamp
Lib/netpanzer-Physics.$(OBJEXT): Lib/.dirstamp Lib/$(DEPDIR)/.dirstamp
Lib/netpanzer-SplitPath.$(OBJEXT): Lib/.dirstamp Lib/$(DEPDIR)/.dirstamp
Lib/netpanzer-cMouse.$(OBJEXT): Lib/.dirstamp Lib/$(DEPDIR)/.dirstamp
Lib/netpanzer-cTimeStamp.$(OBJEXT): Lib/.dirstamp \
	Lib/$(DEPDIR)/.dirstamp
Lib/Interfaces/.dirstamp:
	@$(mkinstalldirs) Lib/Interfaces
	@: > Lib/Interfaces/.dirstamp
Lib/Interfaces/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) Lib/Interfaces/$(DEPDIR)
	@: > Lib/Interfaces/$(DEPDIR)/.dirstamp
Lib/Interfaces/netpanzer-TimerInterface.$(OBJEXT): \
	Lib/Interfaces/.dirstamp Lib/Interfaces/$(DEPDIR)/.dirstamp
Lib/Interfaces/netpanzer-UtilInterface.$(OBJEXT): \
	Lib/Interfaces/.dirstamp Lib/Interfaces/$(DEPDIR)/.dirstamp
Lib/PObject/Classes/.dirstamp:
	@$(mkinstalldirs) Lib/PObject/Classes
	@: > Lib/PObject/Classes/.dirstamp
Lib/PObject/Classes/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) Lib/PObject/Classes/$(DEPDIR)
	@: > Lib/PObject/Classes/$(DEPDIR)/.dirstamp
Lib/PObject/Classes/netpanzer-Angle.$(OBJEXT): \
	Lib/PObject/Classes/.dirstamp \
	Lib/PObject/Classes/$(DEPDIR)/.dirstamp
Lib/PObject/Classes/netpanzer-BitArray.$(OBJEXT): \
	Lib/PObject/Classes/.dirstamp \
	Lib/PObject/Classes/$(DEPDIR)/.dirstamp
Lib/PObject/Classes/netpanzer-BoundBox.$(OBJEXT): \
	Lib/PObject/Classes/.dirstamp \
	Lib/PObject/Classes/$(DEPDIR)/.dirstamp
Lib/PObject/Classes/netpanzer-BresenhamLine.$(OBJEXT): \
	Lib/PObject/Classes/.dirstamp \
	Lib/PObject/Classes/$(DEPDIR)/.dirstamp
Lib/PObject/Classes/netpanzer-FileList.$(OBJEXT): \
	Lib/PObject/Classes/.dirstamp \
	Lib/PObject/Classes/$(DEPDIR)/.dirstamp
Lib/PObject/Classes/netpanzer-PArray.$(OBJEXT): \
	Lib/PObject/Classes/.dirstamp \
	Lib/PObject/Classes/$(DEPDIR)/.dirstamp
Lib/PObject/Classes/netpanzer-Timer.$(OBJEXT): \
	Lib/PObject/Classes/.dirstamp \
	Lib/PObject/Classes/$(DEPDIR)/.dirstamp
Lib/Particles/.dirstamp:
	@$(mkinstalldirs) Lib/Particles
	@: > Lib/Particles/.dirstamp
Lib/Particles/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) Lib/Particles/$(DEPDIR)
	@: > Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-CloudParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-CraterParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-DirtKickParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-FireParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-FireParticleSystem2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-FlameParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-FlashParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-GroundExplosionParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-Particle2D.$(OBJEXT): Lib/Particles/.dirstamp \
	Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-ParticleInterface.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-ParticleSystem2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-ParticleSystemGlobals.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-ParticleTweakView.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-PuffParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-RadarPingParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-SmolderParticleSystem2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-SnowParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-SnowParticleSystem2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-SparkParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-TemplateExplosionSystem.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-TemplateMuzzleSystem.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-TrajectoryParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-VectorPuffParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Particles/netpanzer-WindParticle2D.$(OBJEXT): \
	Lib/Particles/.dirstamp Lib/Particles/$(DEPDIR)/.dirstamp
Lib/Types/.dirstamp:
	@$(mkinstalldirs) Lib/Types
	@: > Lib/Types/.dirstamp
Lib/Types/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) Lib/Types/$(DEPDIR)
	@: > Lib/Types/$(DEPDIR)/.dirstamp
Lib/Types/netpanzer-fRect.$(OBJEXT): Lib/Types/.dirstamp \
	Lib/Types/$(DEPDIR)/.dirstamp
Lib/Types/netpanzer-fXYZ.$(OBJEXT): Lib/Types/.dirstamp \
	Lib/Types/$(DEPDIR)/.dirstamp
Lib/Types/netpanzer-iRect.$(OBJEXT): Lib/Types/.dirstamp \
	Lib/Types/$(DEPDIR)/.dirstamp
Lib/Types/netpanzer-iXY.$(OBJEXT): Lib/Types/.dirstamp \
	Lib/Types/$(DEPDIR)/.dirstamp
Lib/optionmm/.dirstamp:
	@$(mkinstalldirs) Lib/optionmm
	@: > Lib/optionmm/.dirstamp
Lib/optionmm/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) Lib/optionmm/$(DEPDIR)
	@: > Lib/optionmm/$(DEPDIR)/.dirstamp
Lib/optionmm/netpanzer-option.$(OBJEXT): Lib/optionmm/.dirstamp \
	Lib/optionmm/$(DEPDIR)/.dirstamp
Lib/optionmm/netpanzer-command_line.$(OBJEXT): Lib/optionmm/.dirstamp \
	Lib/optionmm/$(DEPDIR)/.dirstamp
Lib/Xml/.dirstamp:
	@$(mkinstalldirs) Lib/Xml
	@: > Lib/Xml/.dirstamp
Lib/Xml/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) Lib/Xml/$(DEPDIR)
	@: > Lib/Xml/$(DEPDIR)/.dirstamp
Lib/Xml/netpanzer-XmlConfig.$(OBJEXT): Lib/Xml/.dirstamp \
	Lib/Xml/$(DEPDIR)/.dirstamp
Lib/Xml/netpanzer-XmlParser.$(OBJEXT): Lib/Xml/.dirstamp \
	Lib/Xml/$(DEPDIR)/.dirstamp
Lib/Xml/netpanzer-XmlStore.$(OBJEXT): Lib/Xml/.dirstamp \
	Lib/Xml/$(DEPDIR)/.dirstamp
NetPanzer/Classes/AI/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Classes/AI
	@: > NetPanzer/Classes/AI/.dirstamp
NetPanzer/Classes/AI/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Classes/AI/$(DEPDIR)
	@: > NetPanzer/Classes/AI/$(DEPDIR)/.dirstamp
NetPanzer/Classes/AI/netpanzer-Astar.$(OBJEXT): \
	NetPanzer/Classes/AI/.dirstamp \
	NetPanzer/Classes/AI/$(DEPDIR)/.dirstamp
NetPanzer/Classes/AI/netpanzer-PathList.$(OBJEXT): \
	NetPanzer/Classes/AI/.dirstamp \
	NetPanzer/Classes/AI/$(DEPDIR)/.dirstamp
NetPanzer/Classes/AI/netpanzer-PathingState.$(OBJEXT): \
	NetPanzer/Classes/AI/.dirstamp \
	NetPanzer/Classes/AI/$(DEPDIR)/.dirstamp
NetPanzer/Classes/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Classes
	@: > NetPanzer/Classes/.dirstamp
NetPanzer/Classes/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Classes/$(DEPDIR)
	@: > NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-BonusUnitPowerUp.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-DDHardSurface.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-Objective.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-Outpost.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-PlacementMatrix.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-PlayerID.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-PlayerState.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-PlayerUnitConfig.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-PowerUp.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-Projectile.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-SelectionBoxSprite.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-SelectionList.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-SpawnList.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-Sprite.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-SpriteSorter.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-TileEngine.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-TileSet.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-Unit.$(OBJEXT): NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-UnitBlackBoard.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-UnitBucketArray.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-UnitList.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-UnitMessage.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-UnitPowerUp.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-UnitState.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-ViewCamera.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/netpanzer-WorldMap.$(OBJEXT): \
	NetPanzer/Classes/.dirstamp \
	NetPanzer/Classes/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Network/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Classes/Network
	@: > NetPanzer/Classes/Network/.dirstamp
NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Classes/Network/$(DEPDIR)
	@: > NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.$(OBJEXT): \
	NetPanzer/Classes/Network/.dirstamp \
	NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.$(OBJEXT): \
	NetPanzer/Classes/Network/.dirstamp \
	NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.$(OBJEXT): \
	NetPanzer/Classes/Network/.dirstamp \
	NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Network/netpanzer-NetPacketQueues.$(OBJEXT): \
	NetPanzer/Classes/Network/.dirstamp \
	NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Network/netpanzer-NetworkClient.$(OBJEXT): \
	NetPanzer/Classes/Network/.dirstamp \
	NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Network/netpanzer-NetworkInterface.$(OBJEXT): \
	NetPanzer/Classes/Network/.dirstamp \
	NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Network/netpanzer-NetworkServer.$(OBJEXT): \
	NetPanzer/Classes/Network/.dirstamp \
	NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Network/netpanzer-NetworkState.$(OBJEXT): \
	NetPanzer/Classes/Network/.dirstamp \
	NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.$(OBJEXT): \
	NetPanzer/Classes/Network/.dirstamp \
	NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.$(OBJEXT): \
	NetPanzer/Classes/Network/.dirstamp \
	NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Network/netpanzer-UnitNetMessage.$(OBJEXT): \
	NetPanzer/Classes/Network/.dirstamp \
	NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Classes/Units
	@: > NetPanzer/Classes/Units/.dirstamp
NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Classes/Units/$(DEPDIR)
	@: > NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/netpanzer-Abrams.$(OBJEXT): \
	NetPanzer/Classes/Units/.dirstamp \
	NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/netpanzer-Archer.$(OBJEXT): \
	NetPanzer/Classes/Units/.dirstamp \
	NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/netpanzer-Hammerhead.$(OBJEXT): \
	NetPanzer/Classes/Units/.dirstamp \
	NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/netpanzer-Humvee.$(OBJEXT): \
	NetPanzer/Classes/Units/.dirstamp \
	NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/netpanzer-Leopard.$(OBJEXT): \
	NetPanzer/Classes/Units/.dirstamp \
	NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/netpanzer-Lynx.$(OBJEXT): \
	NetPanzer/Classes/Units/.dirstamp \
	NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/netpanzer-M109.$(OBJEXT): \
	NetPanzer/Classes/Units/.dirstamp \
	NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/netpanzer-Scorpion.$(OBJEXT): \
	NetPanzer/Classes/Units/.dirstamp \
	NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/netpanzer-SpahPanzer.$(OBJEXT): \
	NetPanzer/Classes/Units/.dirstamp \
	NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/netpanzer-UnitGlobals.$(OBJEXT): \
	NetPanzer/Classes/Units/.dirstamp \
	NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/netpanzer-Valentine.$(OBJEXT): \
	NetPanzer/Classes/Units/.dirstamp \
	NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Units/netpanzer-Vehicle.$(OBJEXT): \
	NetPanzer/Classes/Units/.dirstamp \
	NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Weapons/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Classes/Weapons
	@: > NetPanzer/Classes/Weapons/.dirstamp
NetPanzer/Classes/Weapons/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Classes/Weapons/$(DEPDIR)
	@: > NetPanzer/Classes/Weapons/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.$(OBJEXT): \
	NetPanzer/Classes/Weapons/.dirstamp \
	NetPanzer/Classes/Weapons/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.$(OBJEXT): \
	NetPanzer/Classes/Weapons/.dirstamp \
	NetPanzer/Classes/Weapons/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.$(OBJEXT): \
	NetPanzer/Classes/Weapons/.dirstamp \
	NetPanzer/Classes/Weapons/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Weapons/netpanzer-Weapon.$(OBJEXT): \
	NetPanzer/Classes/Weapons/.dirstamp \
	NetPanzer/Classes/Weapons/$(DEPDIR)/.dirstamp
NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.$(OBJEXT): \
	NetPanzer/Classes/Weapons/.dirstamp \
	NetPanzer/Classes/Weapons/$(DEPDIR)/.dirstamp
NetPanzer/Core/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Core
	@: > NetPanzer/Core/.dirstamp
NetPanzer/Core/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Core/$(DEPDIR)
	@: > NetPanzer/Core/$(DEPDIR)/.dirstamp
NetPanzer/Core/netpanzer-NetworkGlobals.$(OBJEXT): \
	NetPanzer/Core/.dirstamp NetPanzer/Core/$(DEPDIR)/.dirstamp
NetPanzer/Core/netpanzer-loadPics.$(OBJEXT): NetPanzer/Core/.dirstamp \
	NetPanzer/Core/$(DEPDIR)/.dirstamp
NetPanzer/Core/netpanzer-main.$(OBJEXT): NetPanzer/Core/.dirstamp \
	NetPanzer/Core/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/unix/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Interfaces/unix
	@: > NetPanzer/Interfaces/unix/.dirstamp
NetPanzer/Interfaces/unix/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Interfaces/unix/$(DEPDIR)
	@: > NetPanzer/Interfaces/unix/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.$(OBJEXT): \
	NetPanzer/Interfaces/unix/.dirstamp \
	NetPanzer/Interfaces/unix/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.$(OBJEXT): \
	NetPanzer/Interfaces/unix/.dirstamp \
	NetPanzer/Interfaces/unix/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Interfaces
	@: > NetPanzer/Interfaces/.dirstamp
NetPanzer/Interfaces/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Interfaces/$(DEPDIR)
	@: > NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-ChatInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-Client.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-ConsoleInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-GameConfig.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-GameManager.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-KeyboardInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-MapInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-MapsManager.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-MiniMapInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-MouseInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-ObjectiveInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-PathScheduler.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-PlayerInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-PowerUpInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-ProjectileInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-Server.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-Stats.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-TileInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-UnitInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-UnitProfileInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Interfaces/netpanzer-WorldViewInterface.$(OBJEXT): \
	NetPanzer/Interfaces/.dirstamp \
	NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
NetPanzer/Port/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Port
	@: > NetPanzer/Port/.dirstamp
NetPanzer/Port/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Port/$(DEPDIR)
	@: > NetPanzer/Port/$(DEPDIR)/.dirstamp
NetPanzer/Port/netpanzer-Gdatstct.$(OBJEXT): NetPanzer/Port/.dirstamp \
	NetPanzer/Port/$(DEPDIR)/.dirstamp
NetPanzer/Port/netpanzer-blitters.$(OBJEXT): NetPanzer/Port/.dirstamp \
	NetPanzer/Port/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Views/Game
	@: > NetPanzer/Views/Game/.dirstamp
NetPanzer/Views/Game/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Views/Game/$(DEPDIR)
	@: > NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-AreYouSureExitView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-AreYouSureResignView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-ChatView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-CodeStatsView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-ControlPaletteView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-ControlView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-GameInfoView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-GameTemplateView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-GameToolbarView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-GameView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-HelpScrollView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-LobbyView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-MiniMapView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-MiniRankView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-ProgressView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-RankView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-ResignView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-VehicleSelectionView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-WinnerMesgView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/Game/netpanzer-oldCodeStatsView.$(OBJEXT): \
	NetPanzer/Views/Game/.dirstamp \
	NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
NetPanzer/Views/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Views
	@: > NetPanzer/Views/.dirstamp
NetPanzer/Views/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Views/$(DEPDIR)
	@: > NetPanzer/Views/$(DEPDIR)/.dirstamp
NetPanzer/Views/netpanzer-GameViewGlobals.$(OBJEXT): \
	NetPanzer/Views/.dirstamp NetPanzer/Views/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Views/MainMenu/Multi
	@: > NetPanzer/Views/MainMenu/Multi/.dirstamp
NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Views/MainMenu/Multi/$(DEPDIR)
	@: > NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Multi/.dirstamp \
	NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Views/MainMenu
	@: > NetPanzer/Views/MainMenu/.dirstamp
NetPanzer/Views/MainMenu/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Views/MainMenu/$(DEPDIR)
	@: > NetPanzer/Views/MainMenu/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/netpanzer-HelpView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/.dirstamp \
	NetPanzer/Views/MainMenu/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/netpanzer-MainMenuView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/.dirstamp \
	NetPanzer/Views/MainMenu/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/.dirstamp \
	NetPanzer/Views/MainMenu/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/.dirstamp \
	NetPanzer/Views/MainMenu/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/netpanzer-OrderingView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/.dirstamp \
	NetPanzer/Views/MainMenu/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/.dirstamp \
	NetPanzer/Views/MainMenu/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/netpanzer-SkirmishView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/.dirstamp \
	NetPanzer/Views/MainMenu/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/.dirstamp \
	NetPanzer/Views/MainMenu/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Options/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Views/MainMenu/Options
	@: > NetPanzer/Views/MainMenu/Options/.dirstamp
NetPanzer/Views/MainMenu/Options/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) NetPanzer/Views/MainMenu/Options/$(DEPDIR)
	@: > NetPanzer/Views/MainMenu/Options/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Options/.dirstamp \
	NetPanzer/Views/MainMenu/Options/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Options/.dirstamp \
	NetPanzer/Views/MainMenu/Options/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Options/.dirstamp \
	NetPanzer/Views/MainMenu/Options/$(DEPDIR)/.dirstamp
NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.$(OBJEXT): \
	NetPanzer/Views/MainMenu/Options/.dirstamp \
	NetPanzer/Views/MainMenu/Options/$(DEPDIR)/.dirstamp
UILib/Network/.dirstamp:
	@$(mkinstalldirs) UILib/Network
	@: > UILib/Network/.dirstamp
UILib/Network/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) UILib/Network/$(DEPDIR)
	@: > UILib/Network/$(DEPDIR)/.dirstamp
UILib/Network/netpanzer-Client.$(OBJEXT): UILib/Network/.dirstamp \
	UILib/Network/$(DEPDIR)/.dirstamp
UILib/Network/netpanzer-ClientList.$(OBJEXT): UILib/Network/.dirstamp \
	UILib/Network/$(DEPDIR)/.dirstamp
UILib/Network/netpanzer-ClientSocket.$(OBJEXT): UILib/Network/.dirstamp \
	UILib/Network/$(DEPDIR)/.dirstamp
UILib/Network/netpanzer-ServerSocket.$(OBJEXT): UILib/Network/.dirstamp \
	UILib/Network/$(DEPDIR)/.dirstamp
UILib/Network/netpanzer-SocketMessage.$(OBJEXT): UILib/Network/.dirstamp \
	UILib/Network/$(DEPDIR)/.dirstamp
UILib/Network/netpanzer-SDLNet.$(OBJEXT): UILib/Network/.dirstamp \
	UILib/Network/$(DEPDIR)/.dirstamp
UILib/.dirstamp:
	@$(mkinstalldirs) UILib
	@: > UILib/.dirstamp
UILib/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) UILib/$(DEPDIR)
	@: > UILib/$(DEPDIR)/.dirstamp
UILib/netpanzer-DummySound.$(OBJEXT): UILib/.dirstamp \
	UILib/$(DEPDIR)/.dirstamp
UILib/netpanzer-Sound.$(OBJEXT): UILib/.dirstamp \
	UILib/$(DEPDIR)/.dirstamp
UILib/netpanzer-UIDraw.$(OBJEXT): UILib/.dirstamp \
	UILib/$(DEPDIR)/.dirstamp
UILib/SDL/.dirstamp:
	@$(mkinstalldirs) UILib/SDL
	@: > UILib/SDL/.dirstamp
UILib/SDL/$(DEPDIR)/.dirstamp:
	@$(mkinstalldirs) UILib/SDL/$(DEPDIR)
	@: > UILib/SDL/$(DEPDIR)/.dirstamp
UILib/SDL/netpanzer-SDLDraw.$(OBJEXT): UILib/SDL/.dirstamp \
	UILib/SDL/$(DEPDIR)/.dirstamp
UILib/SDL/netpanzer-SDLSound.$(OBJEXT): UILib/SDL/.dirstamp \
	UILib/SDL/$(DEPDIR)/.dirstamp
netpanzer$(EXEEXT): $(netpanzer_OBJECTS) $(netpanzer_DEPENDENCIES) 
	@rm -f netpanzer$(EXEEXT)
	$(CXXLINK) $(netpanzer_LDFLAGS) $(netpanzer_OBJECTS) $(netpanzer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core
	-rm -f Lib/2D/netpanzer-Color.$(OBJEXT)
	-rm -f Lib/2D/netpanzer-ColorTable.$(OBJEXT)
	-rm -f Lib/2D/netpanzer-DigitText.$(OBJEXT)
	-rm -f Lib/2D/netpanzer-FontSystem2D.$(OBJEXT)
	-rm -f Lib/2D/netpanzer-PackedSurface.$(OBJEXT)
	-rm -f Lib/2D/netpanzer-Palette.$(OBJEXT)
	-rm -f Lib/2D/netpanzer-RGBColor.$(OBJEXT)
	-rm -f Lib/2D/netpanzer-Span.$(OBJEXT)
	-rm -f Lib/2D/netpanzer-Surface.$(OBJEXT)
	-rm -f Lib/Interfaces/netpanzer-TimerInterface.$(OBJEXT)
	-rm -f Lib/Interfaces/netpanzer-UtilInterface.$(OBJEXT)
	-rm -f Lib/PObject/Classes/netpanzer-Angle.$(OBJEXT)
	-rm -f Lib/PObject/Classes/netpanzer-BitArray.$(OBJEXT)
	-rm -f Lib/PObject/Classes/netpanzer-BoundBox.$(OBJEXT)
	-rm -f Lib/PObject/Classes/netpanzer-BresenhamLine.$(OBJEXT)
	-rm -f Lib/PObject/Classes/netpanzer-FileList.$(OBJEXT)
	-rm -f Lib/PObject/Classes/netpanzer-PArray.$(OBJEXT)
	-rm -f Lib/PObject/Classes/netpanzer-Timer.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-CloudParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-CraterParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-DirtKickParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-FireParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-FireParticleSystem2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-FlameParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-FlashParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-GroundExplosionParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-Particle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-ParticleInterface.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-ParticleSystem2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-ParticleSystemGlobals.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-ParticleTweakView.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-PuffParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-RadarPingParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-SmolderParticleSystem2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-SnowParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-SnowParticleSystem2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-SparkParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-TemplateExplosionSystem.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-TemplateMuzzleSystem.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-TrajectoryParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-VectorPuffParticle2D.$(OBJEXT)
	-rm -f Lib/Particles/netpanzer-WindParticle2D.$(OBJEXT)
	-rm -f Lib/Types/netpanzer-fRect.$(OBJEXT)
	-rm -f Lib/Types/netpanzer-fXYZ.$(OBJEXT)
	-rm -f Lib/Types/netpanzer-iRect.$(OBJEXT)
	-rm -f Lib/Types/netpanzer-iXY.$(OBJEXT)
	-rm -f Lib/View/netpanzer-AbstractButton.$(OBJEXT)
	-rm -f Lib/View/netpanzer-Button.$(OBJEXT)
	-rm -f Lib/View/netpanzer-CheckBox.$(OBJEXT)
	-rm -f Lib/View/netpanzer-Choice.$(OBJEXT)
	-rm -f Lib/View/netpanzer-Component.$(OBJEXT)
	-rm -f Lib/View/netpanzer-Desktop.$(OBJEXT)
	-rm -f Lib/View/netpanzer-Icon.$(OBJEXT)
	-rm -f Lib/View/netpanzer-Label.$(OBJEXT)
	-rm -f Lib/View/netpanzer-ScrollBar.$(OBJEXT)
	-rm -f Lib/View/netpanzer-String.$(OBJEXT)
	-rm -f Lib/View/netpanzer-TextArea.$(OBJEXT)
	-rm -f Lib/View/netpanzer-TextComponent.$(OBJEXT)
	-rm -f Lib/View/netpanzer-TextField.$(OBJEXT)
	-rm -f Lib/View/netpanzer-View.$(OBJEXT)
	-rm -f Lib/View/netpanzer-ViewGlobals.$(OBJEXT)
	-rm -f Lib/View/netpanzer-cButton.$(OBJEXT)
	-rm -f Lib/View/netpanzer-cInputField.$(OBJEXT)
	-rm -f Lib/Xml/netpanzer-XmlConfig.$(OBJEXT)
	-rm -f Lib/Xml/netpanzer-XmlParser.$(OBJEXT)
	-rm -f Lib/Xml/netpanzer-XmlStore.$(OBJEXT)
	-rm -f Lib/netpanzer-Exception.$(OBJEXT)
	-rm -f Lib/netpanzer-FileSystem.$(OBJEXT)
	-rm -f Lib/netpanzer-FileUtil.$(OBJEXT)
	-rm -f Lib/netpanzer-FindFirst.$(OBJEXT)
	-rm -f Lib/netpanzer-LibView.$(OBJEXT)
	-rm -f Lib/netpanzer-Log.$(OBJEXT)
	-rm -f Lib/netpanzer-Math.$(OBJEXT)
	-rm -f Lib/netpanzer-Physics.$(OBJEXT)
	-rm -f Lib/netpanzer-SplitPath.$(OBJEXT)
	-rm -f Lib/netpanzer-cMouse.$(OBJEXT)
	-rm -f Lib/netpanzer-cTimeStamp.$(OBJEXT)
	-rm -f Lib/optionmm/netpanzer-command_line.$(OBJEXT)
	-rm -f Lib/optionmm/netpanzer-option.$(OBJEXT)
	-rm -f NetPanzer/Classes/AI/netpanzer-Astar.$(OBJEXT)
	-rm -f NetPanzer/Classes/AI/netpanzer-PathList.$(OBJEXT)
	-rm -f NetPanzer/Classes/AI/netpanzer-PathingState.$(OBJEXT)
	-rm -f NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.$(OBJEXT)
	-rm -f NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.$(OBJEXT)
	-rm -f NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.$(OBJEXT)
	-rm -f NetPanzer/Classes/Network/netpanzer-NetPacketQueues.$(OBJEXT)
	-rm -f NetPanzer/Classes/Network/netpanzer-NetworkClient.$(OBJEXT)
	-rm -f NetPanzer/Classes/Network/netpanzer-NetworkInterface.$(OBJEXT)
	-rm -f NetPanzer/Classes/Network/netpanzer-NetworkServer.$(OBJEXT)
	-rm -f NetPanzer/Classes/Network/netpanzer-NetworkState.$(OBJEXT)
	-rm -f NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.$(OBJEXT)
	-rm -f NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.$(OBJEXT)
	-rm -f NetPanzer/Classes/Network/netpanzer-UnitNetMessage.$(OBJEXT)
	-rm -f NetPanzer/Classes/Units/netpanzer-Abrams.$(OBJEXT)
	-rm -f NetPanzer/Classes/Units/netpanzer-Archer.$(OBJEXT)
	-rm -f NetPanzer/Classes/Units/netpanzer-Hammerhead.$(OBJEXT)
	-rm -f NetPanzer/Classes/Units/netpanzer-Humvee.$(OBJEXT)
	-rm -f NetPanzer/Classes/Units/netpanzer-Leopard.$(OBJEXT)
	-rm -f NetPanzer/Classes/Units/netpanzer-Lynx.$(OBJEXT)
	-rm -f NetPanzer/Classes/Units/netpanzer-M109.$(OBJEXT)
	-rm -f NetPanzer/Classes/Units/netpanzer-Scorpion.$(OBJEXT)
	-rm -f NetPanzer/Classes/Units/netpanzer-SpahPanzer.$(OBJEXT)
	-rm -f NetPanzer/Classes/Units/netpanzer-UnitGlobals.$(OBJEXT)
	-rm -f NetPanzer/Classes/Units/netpanzer-Valentine.$(OBJEXT)
	-rm -f NetPanzer/Classes/Units/netpanzer-Vehicle.$(OBJEXT)
	-rm -f NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.$(OBJEXT)
	-rm -f NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.$(OBJEXT)
	-rm -f NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.$(OBJEXT)
	-rm -f NetPanzer/Classes/Weapons/netpanzer-Weapon.$(OBJEXT)
	-rm -f NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-BonusUnitPowerUp.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-DDHardSurface.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-Objective.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-Outpost.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-PlacementMatrix.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-PlayerID.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-PlayerState.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-PlayerUnitConfig.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-PowerUp.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-Projectile.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-SelectionBoxSprite.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-SelectionList.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-SpawnList.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-Sprite.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-SpriteSorter.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-TileEngine.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-TileSet.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-Unit.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-UnitBlackBoard.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-UnitBucketArray.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-UnitList.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-UnitMessage.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-UnitPowerUp.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-UnitState.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-ViewCamera.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.$(OBJEXT)
	-rm -f NetPanzer/Classes/netpanzer-WorldMap.$(OBJEXT)
	-rm -f NetPanzer/Core/netpanzer-NetworkGlobals.$(OBJEXT)
	-rm -f NetPanzer/Core/netpanzer-loadPics.$(OBJEXT)
	-rm -f NetPanzer/Core/netpanzer-main.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-ChatInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-Client.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-ConsoleInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-GameConfig.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-GameManager.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-KeyboardInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-MapInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-MapsManager.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-MiniMapInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-MouseInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-ObjectiveInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-PathScheduler.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-PlayerInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-PowerUpInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-ProjectileInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-Server.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-Stats.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-TileInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-UnitInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-UnitProfileInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/netpanzer-WorldViewInterface.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.$(OBJEXT)
	-rm -f NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.$(OBJEXT)
	-rm -f NetPanzer/Port/netpanzer-Gdatstct.$(OBJEXT)
	-rm -f NetPanzer/Port/netpanzer-blitters.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-AreYouSureExitView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-AreYouSureResignView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-ChatView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-CodeStatsView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-ControlPaletteView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-ControlView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-GameInfoView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-GameTemplateView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-GameToolbarView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-GameView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-HelpScrollView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-LobbyView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-MiniMapView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-MiniRankView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-ProgressView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-RankView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-ResignView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-VehicleSelectionView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-WinnerMesgView.$(OBJEXT)
	-rm -f NetPanzer/Views/Game/netpanzer-oldCodeStatsView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/netpanzer-HelpView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/netpanzer-MainMenuView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/netpanzer-OrderingView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/netpanzer-SkirmishView.$(OBJEXT)
	-rm -f NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.$(OBJEXT)
	-rm -f NetPanzer/Views/netpanzer-GameViewGlobals.$(OBJEXT)
	-rm -f UILib/Network/netpanzer-Client.$(OBJEXT)
	-rm -f UILib/Network/netpanzer-ClientList.$(OBJEXT)
	-rm -f UILib/Network/netpanzer-ClientSocket.$(OBJEXT)
	-rm -f UILib/Network/netpanzer-SDLNet.$(OBJEXT)
	-rm -f UILib/Network/netpanzer-ServerSocket.$(OBJEXT)
	-rm -f UILib/Network/netpanzer-SocketMessage.$(OBJEXT)
	-rm -f UILib/SDL/netpanzer-SDLDraw.$(OBJEXT)
	-rm -f UILib/SDL/netpanzer-SDLSound.$(OBJEXT)
	-rm -f UILib/netpanzer-DummySound.$(OBJEXT)
	-rm -f UILib/netpanzer-Sound.$(OBJEXT)
	-rm -f UILib/netpanzer-UIDraw.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include Lib/$(DEPDIR)/netpanzer-Exception.Po
include Lib/$(DEPDIR)/netpanzer-FileSystem.Po
include Lib/$(DEPDIR)/netpanzer-FileUtil.Po
include Lib/$(DEPDIR)/netpanzer-FindFirst.Po
include Lib/$(DEPDIR)/netpanzer-LibView.Po
include Lib/$(DEPDIR)/netpanzer-Log.Po
include Lib/$(DEPDIR)/netpanzer-Math.Po
include Lib/$(DEPDIR)/netpanzer-Physics.Po
include Lib/$(DEPDIR)/netpanzer-SplitPath.Po
include Lib/$(DEPDIR)/netpanzer-cMouse.Po
include Lib/$(DEPDIR)/netpanzer-cTimeStamp.Po
include Lib/2D/$(DEPDIR)/netpanzer-Color.Po
include Lib/2D/$(DEPDIR)/netpanzer-ColorTable.Po
include Lib/2D/$(DEPDIR)/netpanzer-DigitText.Po
include Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.Po
include Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.Po
include Lib/2D/$(DEPDIR)/netpanzer-Palette.Po
include Lib/2D/$(DEPDIR)/netpanzer-RGBColor.Po
include Lib/2D/$(DEPDIR)/netpanzer-Span.Po
include Lib/2D/$(DEPDIR)/netpanzer-Surface.Po
include Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.Po
include Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.Po
include Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.Po
include Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.Po
include Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.Po
include Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.Po
include Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.Po
include Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.Po
include Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.Po
include Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.Po
include Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.Po
include Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.Po
include Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.Po
include Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.Po
include Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.Po
include Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.Po
include Lib/Types/$(DEPDIR)/netpanzer-fRect.Po
include Lib/Types/$(DEPDIR)/netpanzer-fXYZ.Po
include Lib/Types/$(DEPDIR)/netpanzer-iRect.Po
include Lib/Types/$(DEPDIR)/netpanzer-iXY.Po
include Lib/View/$(DEPDIR)/netpanzer-AbstractButton.Po
include Lib/View/$(DEPDIR)/netpanzer-Button.Po
include Lib/View/$(DEPDIR)/netpanzer-CheckBox.Po
include Lib/View/$(DEPDIR)/netpanzer-Choice.Po
include Lib/View/$(DEPDIR)/netpanzer-Component.Po
include Lib/View/$(DEPDIR)/netpanzer-Desktop.Po
include Lib/View/$(DEPDIR)/netpanzer-Icon.Po
include Lib/View/$(DEPDIR)/netpanzer-Label.Po
include Lib/View/$(DEPDIR)/netpanzer-ScrollBar.Po
include Lib/View/$(DEPDIR)/netpanzer-String.Po
include Lib/View/$(DEPDIR)/netpanzer-TextArea.Po
include Lib/View/$(DEPDIR)/netpanzer-TextComponent.Po
include Lib/View/$(DEPDIR)/netpanzer-TextField.Po
include Lib/View/$(DEPDIR)/netpanzer-View.Po
include Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.Po
include Lib/View/$(DEPDIR)/netpanzer-cButton.Po
include Lib/View/$(DEPDIR)/netpanzer-cInputField.Po
include Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.Po
include Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.Po
include Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.Po
include Lib/optionmm/$(DEPDIR)/netpanzer-command_line.Po
include Lib/optionmm/$(DEPDIR)/netpanzer-option.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.Po
include NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.Po
include NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.Po
include NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.Po
include NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.Po
include NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.Po
include NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.Po
include NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.Po
include NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.Po
include NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.Po
include NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.Po
include NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.Po
include NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.Po
include NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.Po
include NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.Po
include NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.Po
include NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.Po
include NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.Po
include NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.Po
include NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.Po
include NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.Po
include NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.Po
include NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.Po
include NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.Po
include NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.Po
include NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.Po
include NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.Po
include NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.Po
include NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.Po
include NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.Po
include NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.Po
include NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.Po
include NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.Po
include NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.Po
include NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.Po
include NetPanzer/Core/$(DEPDIR)/netpanzer-main.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.Po
include NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.Po
include NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.Po
include NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.Po
include NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.Po
include NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.Po
include NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.Po
include NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.Po
include NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.Po
include NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.Po
include NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.Po
include NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.Po
include NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.Po
include NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.Po
include NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.Po
include NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.Po
include NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.Po
include NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.Po
include NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.Po
include NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.Po
include NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.Po
include UILib/$(DEPDIR)/netpanzer-DummySound.Po
include UILib/$(DEPDIR)/netpanzer-Sound.Po
include UILib/$(DEPDIR)/netpanzer-UIDraw.Po
include UILib/Network/$(DEPDIR)/netpanzer-Client.Po
include UILib/Network/$(DEPDIR)/netpanzer-ClientList.Po
include UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.Po
include UILib/Network/$(DEPDIR)/netpanzer-SDLNet.Po
include UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.Po
include UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.Po
include UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.Po
include UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.Po

distclean-depend:
	-rm -rf Lib/$(DEPDIR) Lib/2D/$(DEPDIR) Lib/Interfaces/$(DEPDIR) Lib/PObject/Classes/$(DEPDIR) Lib/Particles/$(DEPDIR) Lib/Types/$(DEPDIR) Lib/View/$(DEPDIR) Lib/Xml/$(DEPDIR) Lib/optionmm/$(DEPDIR) NetPanzer/Classes/$(DEPDIR) NetPanzer/Classes/AI/$(DEPDIR) NetPanzer/Classes/Network/$(DEPDIR) NetPanzer/Classes/Units/$(DEPDIR) NetPanzer/Classes/Weapons/$(DEPDIR) NetPanzer/Core/$(DEPDIR) NetPanzer/Interfaces/$(DEPDIR) NetPanzer/Interfaces/unix/$(DEPDIR) NetPanzer/Port/$(DEPDIR) NetPanzer/Views/$(DEPDIR) NetPanzer/Views/Game/$(DEPDIR) NetPanzer/Views/MainMenu/$(DEPDIR) NetPanzer/Views/MainMenu/Multi/$(DEPDIR) NetPanzer/Views/MainMenu/Options/$(DEPDIR) UILib/$(DEPDIR) UILib/Network/$(DEPDIR) UILib/SDL/$(DEPDIR)

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

Lib/2D/netpanzer-Color.o: Lib/2D/Color.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-Color.o -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-Color.Tpo" \
	  -c -o Lib/2D/netpanzer-Color.o `test -f 'Lib/2D/Color.cpp' || echo '$(srcdir)/'`Lib/2D/Color.cpp; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-Color.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-Color.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-Color.Tpo"; exit 1; \
	fi
#	source='Lib/2D/Color.cpp' object='Lib/2D/netpanzer-Color.o' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-Color.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-Color.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-Color.o `test -f 'Lib/2D/Color.cpp' || echo '$(srcdir)/'`Lib/2D/Color.cpp

Lib/2D/netpanzer-Color.obj: Lib/2D/Color.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-Color.obj -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-Color.Tpo" \
	  -c -o Lib/2D/netpanzer-Color.obj `if test -f 'Lib/2D/Color.cpp'; then $(CYGPATH_W) 'Lib/2D/Color.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/Color.cpp'; fi`; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-Color.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-Color.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-Color.Tpo"; exit 1; \
	fi
#	source='Lib/2D/Color.cpp' object='Lib/2D/netpanzer-Color.obj' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-Color.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-Color.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-Color.obj `if test -f 'Lib/2D/Color.cpp'; then $(CYGPATH_W) 'Lib/2D/Color.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/Color.cpp'; fi`

Lib/2D/netpanzer-ColorTable.o: Lib/2D/ColorTable.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-ColorTable.o -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-ColorTable.Tpo" \
	  -c -o Lib/2D/netpanzer-ColorTable.o `test -f 'Lib/2D/ColorTable.cpp' || echo '$(srcdir)/'`Lib/2D/ColorTable.cpp; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-ColorTable.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-ColorTable.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-ColorTable.Tpo"; exit 1; \
	fi
#	source='Lib/2D/ColorTable.cpp' object='Lib/2D/netpanzer-ColorTable.o' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-ColorTable.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-ColorTable.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-ColorTable.o `test -f 'Lib/2D/ColorTable.cpp' || echo '$(srcdir)/'`Lib/2D/ColorTable.cpp

Lib/2D/netpanzer-ColorTable.obj: Lib/2D/ColorTable.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-ColorTable.obj -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-ColorTable.Tpo" \
	  -c -o Lib/2D/netpanzer-ColorTable.obj `if test -f 'Lib/2D/ColorTable.cpp'; then $(CYGPATH_W) 'Lib/2D/ColorTable.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/ColorTable.cpp'; fi`; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-ColorTable.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-ColorTable.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-ColorTable.Tpo"; exit 1; \
	fi
#	source='Lib/2D/ColorTable.cpp' object='Lib/2D/netpanzer-ColorTable.obj' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-ColorTable.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-ColorTable.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-ColorTable.obj `if test -f 'Lib/2D/ColorTable.cpp'; then $(CYGPATH_W) 'Lib/2D/ColorTable.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/ColorTable.cpp'; fi`

Lib/2D/netpanzer-DigitText.o: Lib/2D/DigitText.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-DigitText.o -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-DigitText.Tpo" \
	  -c -o Lib/2D/netpanzer-DigitText.o `test -f 'Lib/2D/DigitText.cpp' || echo '$(srcdir)/'`Lib/2D/DigitText.cpp; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-DigitText.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-DigitText.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-DigitText.Tpo"; exit 1; \
	fi
#	source='Lib/2D/DigitText.cpp' object='Lib/2D/netpanzer-DigitText.o' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-DigitText.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-DigitText.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-DigitText.o `test -f 'Lib/2D/DigitText.cpp' || echo '$(srcdir)/'`Lib/2D/DigitText.cpp

Lib/2D/netpanzer-DigitText.obj: Lib/2D/DigitText.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-DigitText.obj -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-DigitText.Tpo" \
	  -c -o Lib/2D/netpanzer-DigitText.obj `if test -f 'Lib/2D/DigitText.cpp'; then $(CYGPATH_W) 'Lib/2D/DigitText.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/DigitText.cpp'; fi`; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-DigitText.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-DigitText.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-DigitText.Tpo"; exit 1; \
	fi
#	source='Lib/2D/DigitText.cpp' object='Lib/2D/netpanzer-DigitText.obj' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-DigitText.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-DigitText.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-DigitText.obj `if test -f 'Lib/2D/DigitText.cpp'; then $(CYGPATH_W) 'Lib/2D/DigitText.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/DigitText.cpp'; fi`

Lib/2D/netpanzer-FontSystem2D.o: Lib/2D/FontSystem2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-FontSystem2D.o -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.Tpo" \
	  -c -o Lib/2D/netpanzer-FontSystem2D.o `test -f 'Lib/2D/FontSystem2D.cpp' || echo '$(srcdir)/'`Lib/2D/FontSystem2D.cpp; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.Tpo"; exit 1; \
	fi
#	source='Lib/2D/FontSystem2D.cpp' object='Lib/2D/netpanzer-FontSystem2D.o' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-FontSystem2D.o `test -f 'Lib/2D/FontSystem2D.cpp' || echo '$(srcdir)/'`Lib/2D/FontSystem2D.cpp

Lib/2D/netpanzer-FontSystem2D.obj: Lib/2D/FontSystem2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-FontSystem2D.obj -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.Tpo" \
	  -c -o Lib/2D/netpanzer-FontSystem2D.obj `if test -f 'Lib/2D/FontSystem2D.cpp'; then $(CYGPATH_W) 'Lib/2D/FontSystem2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/FontSystem2D.cpp'; fi`; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.Tpo"; exit 1; \
	fi
#	source='Lib/2D/FontSystem2D.cpp' object='Lib/2D/netpanzer-FontSystem2D.obj' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-FontSystem2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-FontSystem2D.obj `if test -f 'Lib/2D/FontSystem2D.cpp'; then $(CYGPATH_W) 'Lib/2D/FontSystem2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/FontSystem2D.cpp'; fi`

Lib/2D/netpanzer-PackedSurface.o: Lib/2D/PackedSurface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-PackedSurface.o -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.Tpo" \
	  -c -o Lib/2D/netpanzer-PackedSurface.o `test -f 'Lib/2D/PackedSurface.cpp' || echo '$(srcdir)/'`Lib/2D/PackedSurface.cpp; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.Tpo"; exit 1; \
	fi
#	source='Lib/2D/PackedSurface.cpp' object='Lib/2D/netpanzer-PackedSurface.o' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-PackedSurface.o `test -f 'Lib/2D/PackedSurface.cpp' || echo '$(srcdir)/'`Lib/2D/PackedSurface.cpp

Lib/2D/netpanzer-PackedSurface.obj: Lib/2D/PackedSurface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-PackedSurface.obj -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.Tpo" \
	  -c -o Lib/2D/netpanzer-PackedSurface.obj `if test -f 'Lib/2D/PackedSurface.cpp'; then $(CYGPATH_W) 'Lib/2D/PackedSurface.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/PackedSurface.cpp'; fi`; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.Tpo"; exit 1; \
	fi
#	source='Lib/2D/PackedSurface.cpp' object='Lib/2D/netpanzer-PackedSurface.obj' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-PackedSurface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-PackedSurface.obj `if test -f 'Lib/2D/PackedSurface.cpp'; then $(CYGPATH_W) 'Lib/2D/PackedSurface.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/PackedSurface.cpp'; fi`

Lib/2D/netpanzer-Palette.o: Lib/2D/Palette.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-Palette.o -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-Palette.Tpo" \
	  -c -o Lib/2D/netpanzer-Palette.o `test -f 'Lib/2D/Palette.cpp' || echo '$(srcdir)/'`Lib/2D/Palette.cpp; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-Palette.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-Palette.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-Palette.Tpo"; exit 1; \
	fi
#	source='Lib/2D/Palette.cpp' object='Lib/2D/netpanzer-Palette.o' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-Palette.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-Palette.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-Palette.o `test -f 'Lib/2D/Palette.cpp' || echo '$(srcdir)/'`Lib/2D/Palette.cpp

Lib/2D/netpanzer-Palette.obj: Lib/2D/Palette.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-Palette.obj -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-Palette.Tpo" \
	  -c -o Lib/2D/netpanzer-Palette.obj `if test -f 'Lib/2D/Palette.cpp'; then $(CYGPATH_W) 'Lib/2D/Palette.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/Palette.cpp'; fi`; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-Palette.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-Palette.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-Palette.Tpo"; exit 1; \
	fi
#	source='Lib/2D/Palette.cpp' object='Lib/2D/netpanzer-Palette.obj' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-Palette.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-Palette.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-Palette.obj `if test -f 'Lib/2D/Palette.cpp'; then $(CYGPATH_W) 'Lib/2D/Palette.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/Palette.cpp'; fi`

Lib/2D/netpanzer-RGBColor.o: Lib/2D/RGBColor.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-RGBColor.o -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-RGBColor.Tpo" \
	  -c -o Lib/2D/netpanzer-RGBColor.o `test -f 'Lib/2D/RGBColor.cpp' || echo '$(srcdir)/'`Lib/2D/RGBColor.cpp; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-RGBColor.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-RGBColor.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-RGBColor.Tpo"; exit 1; \
	fi
#	source='Lib/2D/RGBColor.cpp' object='Lib/2D/netpanzer-RGBColor.o' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-RGBColor.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-RGBColor.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-RGBColor.o `test -f 'Lib/2D/RGBColor.cpp' || echo '$(srcdir)/'`Lib/2D/RGBColor.cpp

Lib/2D/netpanzer-RGBColor.obj: Lib/2D/RGBColor.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-RGBColor.obj -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-RGBColor.Tpo" \
	  -c -o Lib/2D/netpanzer-RGBColor.obj `if test -f 'Lib/2D/RGBColor.cpp'; then $(CYGPATH_W) 'Lib/2D/RGBColor.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/RGBColor.cpp'; fi`; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-RGBColor.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-RGBColor.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-RGBColor.Tpo"; exit 1; \
	fi
#	source='Lib/2D/RGBColor.cpp' object='Lib/2D/netpanzer-RGBColor.obj' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-RGBColor.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-RGBColor.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-RGBColor.obj `if test -f 'Lib/2D/RGBColor.cpp'; then $(CYGPATH_W) 'Lib/2D/RGBColor.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/RGBColor.cpp'; fi`

Lib/2D/netpanzer-Span.o: Lib/2D/Span.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-Span.o -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-Span.Tpo" \
	  -c -o Lib/2D/netpanzer-Span.o `test -f 'Lib/2D/Span.cpp' || echo '$(srcdir)/'`Lib/2D/Span.cpp; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-Span.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-Span.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-Span.Tpo"; exit 1; \
	fi
#	source='Lib/2D/Span.cpp' object='Lib/2D/netpanzer-Span.o' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-Span.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-Span.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-Span.o `test -f 'Lib/2D/Span.cpp' || echo '$(srcdir)/'`Lib/2D/Span.cpp

Lib/2D/netpanzer-Span.obj: Lib/2D/Span.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-Span.obj -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-Span.Tpo" \
	  -c -o Lib/2D/netpanzer-Span.obj `if test -f 'Lib/2D/Span.cpp'; then $(CYGPATH_W) 'Lib/2D/Span.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/Span.cpp'; fi`; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-Span.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-Span.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-Span.Tpo"; exit 1; \
	fi
#	source='Lib/2D/Span.cpp' object='Lib/2D/netpanzer-Span.obj' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-Span.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-Span.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-Span.obj `if test -f 'Lib/2D/Span.cpp'; then $(CYGPATH_W) 'Lib/2D/Span.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/Span.cpp'; fi`

Lib/2D/netpanzer-Surface.o: Lib/2D/Surface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-Surface.o -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-Surface.Tpo" \
	  -c -o Lib/2D/netpanzer-Surface.o `test -f 'Lib/2D/Surface.cpp' || echo '$(srcdir)/'`Lib/2D/Surface.cpp; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-Surface.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-Surface.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-Surface.Tpo"; exit 1; \
	fi
#	source='Lib/2D/Surface.cpp' object='Lib/2D/netpanzer-Surface.o' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-Surface.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-Surface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-Surface.o `test -f 'Lib/2D/Surface.cpp' || echo '$(srcdir)/'`Lib/2D/Surface.cpp

Lib/2D/netpanzer-Surface.obj: Lib/2D/Surface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/2D/netpanzer-Surface.obj -MD -MP -MF "Lib/2D/$(DEPDIR)/netpanzer-Surface.Tpo" \
	  -c -o Lib/2D/netpanzer-Surface.obj `if test -f 'Lib/2D/Surface.cpp'; then $(CYGPATH_W) 'Lib/2D/Surface.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/Surface.cpp'; fi`; \
	then mv "Lib/2D/$(DEPDIR)/netpanzer-Surface.Tpo" "Lib/2D/$(DEPDIR)/netpanzer-Surface.Po"; \
	else rm -f "Lib/2D/$(DEPDIR)/netpanzer-Surface.Tpo"; exit 1; \
	fi
#	source='Lib/2D/Surface.cpp' object='Lib/2D/netpanzer-Surface.obj' libtool=no \
#	depfile='Lib/2D/$(DEPDIR)/netpanzer-Surface.Po' tmpdepfile='Lib/2D/$(DEPDIR)/netpanzer-Surface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/2D/netpanzer-Surface.obj `if test -f 'Lib/2D/Surface.cpp'; then $(CYGPATH_W) 'Lib/2D/Surface.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/2D/Surface.cpp'; fi`

Lib/View/netpanzer-AbstractButton.o: Lib/View/AbstractButton.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-AbstractButton.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-AbstractButton.Tpo" \
	  -c -o Lib/View/netpanzer-AbstractButton.o `test -f 'Lib/View/AbstractButton.cpp' || echo '$(srcdir)/'`Lib/View/AbstractButton.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-AbstractButton.Tpo" "Lib/View/$(DEPDIR)/netpanzer-AbstractButton.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-AbstractButton.Tpo"; exit 1; \
	fi
#	source='Lib/View/AbstractButton.cpp' object='Lib/View/netpanzer-AbstractButton.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-AbstractButton.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-AbstractButton.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-AbstractButton.o `test -f 'Lib/View/AbstractButton.cpp' || echo '$(srcdir)/'`Lib/View/AbstractButton.cpp

Lib/View/netpanzer-AbstractButton.obj: Lib/View/AbstractButton.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-AbstractButton.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-AbstractButton.Tpo" \
	  -c -o Lib/View/netpanzer-AbstractButton.obj `if test -f 'Lib/View/AbstractButton.cpp'; then $(CYGPATH_W) 'Lib/View/AbstractButton.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/AbstractButton.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-AbstractButton.Tpo" "Lib/View/$(DEPDIR)/netpanzer-AbstractButton.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-AbstractButton.Tpo"; exit 1; \
	fi
#	source='Lib/View/AbstractButton.cpp' object='Lib/View/netpanzer-AbstractButton.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-AbstractButton.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-AbstractButton.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-AbstractButton.obj `if test -f 'Lib/View/AbstractButton.cpp'; then $(CYGPATH_W) 'Lib/View/AbstractButton.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/AbstractButton.cpp'; fi`

Lib/View/netpanzer-Button.o: Lib/View/Button.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-Button.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-Button.Tpo" \
	  -c -o Lib/View/netpanzer-Button.o `test -f 'Lib/View/Button.cpp' || echo '$(srcdir)/'`Lib/View/Button.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-Button.Tpo" "Lib/View/$(DEPDIR)/netpanzer-Button.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-Button.Tpo"; exit 1; \
	fi
#	source='Lib/View/Button.cpp' object='Lib/View/netpanzer-Button.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-Button.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-Button.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-Button.o `test -f 'Lib/View/Button.cpp' || echo '$(srcdir)/'`Lib/View/Button.cpp

Lib/View/netpanzer-Button.obj: Lib/View/Button.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-Button.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-Button.Tpo" \
	  -c -o Lib/View/netpanzer-Button.obj `if test -f 'Lib/View/Button.cpp'; then $(CYGPATH_W) 'Lib/View/Button.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/Button.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-Button.Tpo" "Lib/View/$(DEPDIR)/netpanzer-Button.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-Button.Tpo"; exit 1; \
	fi
#	source='Lib/View/Button.cpp' object='Lib/View/netpanzer-Button.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-Button.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-Button.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-Button.obj `if test -f 'Lib/View/Button.cpp'; then $(CYGPATH_W) 'Lib/View/Button.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/Button.cpp'; fi`

Lib/View/netpanzer-CheckBox.o: Lib/View/CheckBox.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-CheckBox.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-CheckBox.Tpo" \
	  -c -o Lib/View/netpanzer-CheckBox.o `test -f 'Lib/View/CheckBox.cpp' || echo '$(srcdir)/'`Lib/View/CheckBox.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-CheckBox.Tpo" "Lib/View/$(DEPDIR)/netpanzer-CheckBox.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-CheckBox.Tpo"; exit 1; \
	fi
#	source='Lib/View/CheckBox.cpp' object='Lib/View/netpanzer-CheckBox.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-CheckBox.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-CheckBox.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-CheckBox.o `test -f 'Lib/View/CheckBox.cpp' || echo '$(srcdir)/'`Lib/View/CheckBox.cpp

Lib/View/netpanzer-CheckBox.obj: Lib/View/CheckBox.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-CheckBox.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-CheckBox.Tpo" \
	  -c -o Lib/View/netpanzer-CheckBox.obj `if test -f 'Lib/View/CheckBox.cpp'; then $(CYGPATH_W) 'Lib/View/CheckBox.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/CheckBox.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-CheckBox.Tpo" "Lib/View/$(DEPDIR)/netpanzer-CheckBox.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-CheckBox.Tpo"; exit 1; \
	fi
#	source='Lib/View/CheckBox.cpp' object='Lib/View/netpanzer-CheckBox.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-CheckBox.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-CheckBox.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-CheckBox.obj `if test -f 'Lib/View/CheckBox.cpp'; then $(CYGPATH_W) 'Lib/View/CheckBox.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/CheckBox.cpp'; fi`

Lib/View/netpanzer-Choice.o: Lib/View/Choice.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-Choice.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-Choice.Tpo" \
	  -c -o Lib/View/netpanzer-Choice.o `test -f 'Lib/View/Choice.cpp' || echo '$(srcdir)/'`Lib/View/Choice.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-Choice.Tpo" "Lib/View/$(DEPDIR)/netpanzer-Choice.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-Choice.Tpo"; exit 1; \
	fi
#	source='Lib/View/Choice.cpp' object='Lib/View/netpanzer-Choice.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-Choice.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-Choice.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-Choice.o `test -f 'Lib/View/Choice.cpp' || echo '$(srcdir)/'`Lib/View/Choice.cpp

Lib/View/netpanzer-Choice.obj: Lib/View/Choice.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-Choice.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-Choice.Tpo" \
	  -c -o Lib/View/netpanzer-Choice.obj `if test -f 'Lib/View/Choice.cpp'; then $(CYGPATH_W) 'Lib/View/Choice.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/Choice.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-Choice.Tpo" "Lib/View/$(DEPDIR)/netpanzer-Choice.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-Choice.Tpo"; exit 1; \
	fi
#	source='Lib/View/Choice.cpp' object='Lib/View/netpanzer-Choice.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-Choice.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-Choice.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-Choice.obj `if test -f 'Lib/View/Choice.cpp'; then $(CYGPATH_W) 'Lib/View/Choice.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/Choice.cpp'; fi`

Lib/View/netpanzer-Component.o: Lib/View/Component.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-Component.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-Component.Tpo" \
	  -c -o Lib/View/netpanzer-Component.o `test -f 'Lib/View/Component.cpp' || echo '$(srcdir)/'`Lib/View/Component.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-Component.Tpo" "Lib/View/$(DEPDIR)/netpanzer-Component.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-Component.Tpo"; exit 1; \
	fi
#	source='Lib/View/Component.cpp' object='Lib/View/netpanzer-Component.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-Component.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-Component.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-Component.o `test -f 'Lib/View/Component.cpp' || echo '$(srcdir)/'`Lib/View/Component.cpp

Lib/View/netpanzer-Component.obj: Lib/View/Component.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-Component.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-Component.Tpo" \
	  -c -o Lib/View/netpanzer-Component.obj `if test -f 'Lib/View/Component.cpp'; then $(CYGPATH_W) 'Lib/View/Component.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/Component.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-Component.Tpo" "Lib/View/$(DEPDIR)/netpanzer-Component.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-Component.Tpo"; exit 1; \
	fi
#	source='Lib/View/Component.cpp' object='Lib/View/netpanzer-Component.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-Component.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-Component.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-Component.obj `if test -f 'Lib/View/Component.cpp'; then $(CYGPATH_W) 'Lib/View/Component.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/Component.cpp'; fi`

Lib/View/netpanzer-Desktop.o: Lib/View/Desktop.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-Desktop.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-Desktop.Tpo" \
	  -c -o Lib/View/netpanzer-Desktop.o `test -f 'Lib/View/Desktop.cpp' || echo '$(srcdir)/'`Lib/View/Desktop.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-Desktop.Tpo" "Lib/View/$(DEPDIR)/netpanzer-Desktop.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-Desktop.Tpo"; exit 1; \
	fi
#	source='Lib/View/Desktop.cpp' object='Lib/View/netpanzer-Desktop.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-Desktop.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-Desktop.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-Desktop.o `test -f 'Lib/View/Desktop.cpp' || echo '$(srcdir)/'`Lib/View/Desktop.cpp

Lib/View/netpanzer-Desktop.obj: Lib/View/Desktop.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-Desktop.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-Desktop.Tpo" \
	  -c -o Lib/View/netpanzer-Desktop.obj `if test -f 'Lib/View/Desktop.cpp'; then $(CYGPATH_W) 'Lib/View/Desktop.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/Desktop.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-Desktop.Tpo" "Lib/View/$(DEPDIR)/netpanzer-Desktop.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-Desktop.Tpo"; exit 1; \
	fi
#	source='Lib/View/Desktop.cpp' object='Lib/View/netpanzer-Desktop.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-Desktop.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-Desktop.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-Desktop.obj `if test -f 'Lib/View/Desktop.cpp'; then $(CYGPATH_W) 'Lib/View/Desktop.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/Desktop.cpp'; fi`

Lib/View/netpanzer-Icon.o: Lib/View/Icon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-Icon.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-Icon.Tpo" \
	  -c -o Lib/View/netpanzer-Icon.o `test -f 'Lib/View/Icon.cpp' || echo '$(srcdir)/'`Lib/View/Icon.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-Icon.Tpo" "Lib/View/$(DEPDIR)/netpanzer-Icon.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-Icon.Tpo"; exit 1; \
	fi
#	source='Lib/View/Icon.cpp' object='Lib/View/netpanzer-Icon.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-Icon.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-Icon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-Icon.o `test -f 'Lib/View/Icon.cpp' || echo '$(srcdir)/'`Lib/View/Icon.cpp

Lib/View/netpanzer-Icon.obj: Lib/View/Icon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-Icon.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-Icon.Tpo" \
	  -c -o Lib/View/netpanzer-Icon.obj `if test -f 'Lib/View/Icon.cpp'; then $(CYGPATH_W) 'Lib/View/Icon.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/Icon.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-Icon.Tpo" "Lib/View/$(DEPDIR)/netpanzer-Icon.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-Icon.Tpo"; exit 1; \
	fi
#	source='Lib/View/Icon.cpp' object='Lib/View/netpanzer-Icon.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-Icon.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-Icon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-Icon.obj `if test -f 'Lib/View/Icon.cpp'; then $(CYGPATH_W) 'Lib/View/Icon.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/Icon.cpp'; fi`

Lib/View/netpanzer-Label.o: Lib/View/Label.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-Label.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-Label.Tpo" \
	  -c -o Lib/View/netpanzer-Label.o `test -f 'Lib/View/Label.cpp' || echo '$(srcdir)/'`Lib/View/Label.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-Label.Tpo" "Lib/View/$(DEPDIR)/netpanzer-Label.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-Label.Tpo"; exit 1; \
	fi
#	source='Lib/View/Label.cpp' object='Lib/View/netpanzer-Label.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-Label.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-Label.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-Label.o `test -f 'Lib/View/Label.cpp' || echo '$(srcdir)/'`Lib/View/Label.cpp

Lib/View/netpanzer-Label.obj: Lib/View/Label.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-Label.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-Label.Tpo" \
	  -c -o Lib/View/netpanzer-Label.obj `if test -f 'Lib/View/Label.cpp'; then $(CYGPATH_W) 'Lib/View/Label.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/Label.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-Label.Tpo" "Lib/View/$(DEPDIR)/netpanzer-Label.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-Label.Tpo"; exit 1; \
	fi
#	source='Lib/View/Label.cpp' object='Lib/View/netpanzer-Label.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-Label.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-Label.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-Label.obj `if test -f 'Lib/View/Label.cpp'; then $(CYGPATH_W) 'Lib/View/Label.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/Label.cpp'; fi`

Lib/View/netpanzer-ScrollBar.o: Lib/View/ScrollBar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-ScrollBar.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-ScrollBar.Tpo" \
	  -c -o Lib/View/netpanzer-ScrollBar.o `test -f 'Lib/View/ScrollBar.cpp' || echo '$(srcdir)/'`Lib/View/ScrollBar.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-ScrollBar.Tpo" "Lib/View/$(DEPDIR)/netpanzer-ScrollBar.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-ScrollBar.Tpo"; exit 1; \
	fi
#	source='Lib/View/ScrollBar.cpp' object='Lib/View/netpanzer-ScrollBar.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-ScrollBar.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-ScrollBar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-ScrollBar.o `test -f 'Lib/View/ScrollBar.cpp' || echo '$(srcdir)/'`Lib/View/ScrollBar.cpp

Lib/View/netpanzer-ScrollBar.obj: Lib/View/ScrollBar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-ScrollBar.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-ScrollBar.Tpo" \
	  -c -o Lib/View/netpanzer-ScrollBar.obj `if test -f 'Lib/View/ScrollBar.cpp'; then $(CYGPATH_W) 'Lib/View/ScrollBar.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/ScrollBar.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-ScrollBar.Tpo" "Lib/View/$(DEPDIR)/netpanzer-ScrollBar.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-ScrollBar.Tpo"; exit 1; \
	fi
#	source='Lib/View/ScrollBar.cpp' object='Lib/View/netpanzer-ScrollBar.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-ScrollBar.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-ScrollBar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-ScrollBar.obj `if test -f 'Lib/View/ScrollBar.cpp'; then $(CYGPATH_W) 'Lib/View/ScrollBar.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/ScrollBar.cpp'; fi`

Lib/View/netpanzer-String.o: Lib/View/String.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-String.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-String.Tpo" \
	  -c -o Lib/View/netpanzer-String.o `test -f 'Lib/View/String.cpp' || echo '$(srcdir)/'`Lib/View/String.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-String.Tpo" "Lib/View/$(DEPDIR)/netpanzer-String.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-String.Tpo"; exit 1; \
	fi
#	source='Lib/View/String.cpp' object='Lib/View/netpanzer-String.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-String.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-String.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-String.o `test -f 'Lib/View/String.cpp' || echo '$(srcdir)/'`Lib/View/String.cpp

Lib/View/netpanzer-String.obj: Lib/View/String.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-String.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-String.Tpo" \
	  -c -o Lib/View/netpanzer-String.obj `if test -f 'Lib/View/String.cpp'; then $(CYGPATH_W) 'Lib/View/String.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/String.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-String.Tpo" "Lib/View/$(DEPDIR)/netpanzer-String.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-String.Tpo"; exit 1; \
	fi
#	source='Lib/View/String.cpp' object='Lib/View/netpanzer-String.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-String.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-String.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-String.obj `if test -f 'Lib/View/String.cpp'; then $(CYGPATH_W) 'Lib/View/String.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/String.cpp'; fi`

Lib/View/netpanzer-TextArea.o: Lib/View/TextArea.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-TextArea.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-TextArea.Tpo" \
	  -c -o Lib/View/netpanzer-TextArea.o `test -f 'Lib/View/TextArea.cpp' || echo '$(srcdir)/'`Lib/View/TextArea.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-TextArea.Tpo" "Lib/View/$(DEPDIR)/netpanzer-TextArea.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-TextArea.Tpo"; exit 1; \
	fi
#	source='Lib/View/TextArea.cpp' object='Lib/View/netpanzer-TextArea.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-TextArea.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-TextArea.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-TextArea.o `test -f 'Lib/View/TextArea.cpp' || echo '$(srcdir)/'`Lib/View/TextArea.cpp

Lib/View/netpanzer-TextArea.obj: Lib/View/TextArea.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-TextArea.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-TextArea.Tpo" \
	  -c -o Lib/View/netpanzer-TextArea.obj `if test -f 'Lib/View/TextArea.cpp'; then $(CYGPATH_W) 'Lib/View/TextArea.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/TextArea.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-TextArea.Tpo" "Lib/View/$(DEPDIR)/netpanzer-TextArea.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-TextArea.Tpo"; exit 1; \
	fi
#	source='Lib/View/TextArea.cpp' object='Lib/View/netpanzer-TextArea.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-TextArea.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-TextArea.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-TextArea.obj `if test -f 'Lib/View/TextArea.cpp'; then $(CYGPATH_W) 'Lib/View/TextArea.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/TextArea.cpp'; fi`

Lib/View/netpanzer-TextComponent.o: Lib/View/TextComponent.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-TextComponent.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-TextComponent.Tpo" \
	  -c -o Lib/View/netpanzer-TextComponent.o `test -f 'Lib/View/TextComponent.cpp' || echo '$(srcdir)/'`Lib/View/TextComponent.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-TextComponent.Tpo" "Lib/View/$(DEPDIR)/netpanzer-TextComponent.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-TextComponent.Tpo"; exit 1; \
	fi
#	source='Lib/View/TextComponent.cpp' object='Lib/View/netpanzer-TextComponent.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-TextComponent.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-TextComponent.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-TextComponent.o `test -f 'Lib/View/TextComponent.cpp' || echo '$(srcdir)/'`Lib/View/TextComponent.cpp

Lib/View/netpanzer-TextComponent.obj: Lib/View/TextComponent.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-TextComponent.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-TextComponent.Tpo" \
	  -c -o Lib/View/netpanzer-TextComponent.obj `if test -f 'Lib/View/TextComponent.cpp'; then $(CYGPATH_W) 'Lib/View/TextComponent.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/TextComponent.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-TextComponent.Tpo" "Lib/View/$(DEPDIR)/netpanzer-TextComponent.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-TextComponent.Tpo"; exit 1; \
	fi
#	source='Lib/View/TextComponent.cpp' object='Lib/View/netpanzer-TextComponent.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-TextComponent.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-TextComponent.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-TextComponent.obj `if test -f 'Lib/View/TextComponent.cpp'; then $(CYGPATH_W) 'Lib/View/TextComponent.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/TextComponent.cpp'; fi`

Lib/View/netpanzer-TextField.o: Lib/View/TextField.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-TextField.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-TextField.Tpo" \
	  -c -o Lib/View/netpanzer-TextField.o `test -f 'Lib/View/TextField.cpp' || echo '$(srcdir)/'`Lib/View/TextField.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-TextField.Tpo" "Lib/View/$(DEPDIR)/netpanzer-TextField.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-TextField.Tpo"; exit 1; \
	fi
#	source='Lib/View/TextField.cpp' object='Lib/View/netpanzer-TextField.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-TextField.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-TextField.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-TextField.o `test -f 'Lib/View/TextField.cpp' || echo '$(srcdir)/'`Lib/View/TextField.cpp

Lib/View/netpanzer-TextField.obj: Lib/View/TextField.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-TextField.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-TextField.Tpo" \
	  -c -o Lib/View/netpanzer-TextField.obj `if test -f 'Lib/View/TextField.cpp'; then $(CYGPATH_W) 'Lib/View/TextField.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/TextField.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-TextField.Tpo" "Lib/View/$(DEPDIR)/netpanzer-TextField.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-TextField.Tpo"; exit 1; \
	fi
#	source='Lib/View/TextField.cpp' object='Lib/View/netpanzer-TextField.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-TextField.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-TextField.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-TextField.obj `if test -f 'Lib/View/TextField.cpp'; then $(CYGPATH_W) 'Lib/View/TextField.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/TextField.cpp'; fi`

Lib/View/netpanzer-View.o: Lib/View/View.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-View.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-View.Tpo" \
	  -c -o Lib/View/netpanzer-View.o `test -f 'Lib/View/View.cpp' || echo '$(srcdir)/'`Lib/View/View.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-View.Tpo" "Lib/View/$(DEPDIR)/netpanzer-View.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-View.Tpo"; exit 1; \
	fi
#	source='Lib/View/View.cpp' object='Lib/View/netpanzer-View.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-View.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-View.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-View.o `test -f 'Lib/View/View.cpp' || echo '$(srcdir)/'`Lib/View/View.cpp

Lib/View/netpanzer-View.obj: Lib/View/View.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-View.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-View.Tpo" \
	  -c -o Lib/View/netpanzer-View.obj `if test -f 'Lib/View/View.cpp'; then $(CYGPATH_W) 'Lib/View/View.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/View.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-View.Tpo" "Lib/View/$(DEPDIR)/netpanzer-View.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-View.Tpo"; exit 1; \
	fi
#	source='Lib/View/View.cpp' object='Lib/View/netpanzer-View.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-View.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-View.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-View.obj `if test -f 'Lib/View/View.cpp'; then $(CYGPATH_W) 'Lib/View/View.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/View.cpp'; fi`

Lib/View/netpanzer-ViewGlobals.o: Lib/View/ViewGlobals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-ViewGlobals.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.Tpo" \
	  -c -o Lib/View/netpanzer-ViewGlobals.o `test -f 'Lib/View/ViewGlobals.cpp' || echo '$(srcdir)/'`Lib/View/ViewGlobals.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.Tpo" "Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.Tpo"; exit 1; \
	fi
#	source='Lib/View/ViewGlobals.cpp' object='Lib/View/netpanzer-ViewGlobals.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-ViewGlobals.o `test -f 'Lib/View/ViewGlobals.cpp' || echo '$(srcdir)/'`Lib/View/ViewGlobals.cpp

Lib/View/netpanzer-ViewGlobals.obj: Lib/View/ViewGlobals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-ViewGlobals.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.Tpo" \
	  -c -o Lib/View/netpanzer-ViewGlobals.obj `if test -f 'Lib/View/ViewGlobals.cpp'; then $(CYGPATH_W) 'Lib/View/ViewGlobals.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/ViewGlobals.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.Tpo" "Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.Tpo"; exit 1; \
	fi
#	source='Lib/View/ViewGlobals.cpp' object='Lib/View/netpanzer-ViewGlobals.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-ViewGlobals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-ViewGlobals.obj `if test -f 'Lib/View/ViewGlobals.cpp'; then $(CYGPATH_W) 'Lib/View/ViewGlobals.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/ViewGlobals.cpp'; fi`

Lib/View/netpanzer-cButton.o: Lib/View/cButton.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-cButton.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-cButton.Tpo" \
	  -c -o Lib/View/netpanzer-cButton.o `test -f 'Lib/View/cButton.cpp' || echo '$(srcdir)/'`Lib/View/cButton.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-cButton.Tpo" "Lib/View/$(DEPDIR)/netpanzer-cButton.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-cButton.Tpo"; exit 1; \
	fi
#	source='Lib/View/cButton.cpp' object='Lib/View/netpanzer-cButton.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-cButton.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-cButton.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-cButton.o `test -f 'Lib/View/cButton.cpp' || echo '$(srcdir)/'`Lib/View/cButton.cpp

Lib/View/netpanzer-cButton.obj: Lib/View/cButton.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-cButton.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-cButton.Tpo" \
	  -c -o Lib/View/netpanzer-cButton.obj `if test -f 'Lib/View/cButton.cpp'; then $(CYGPATH_W) 'Lib/View/cButton.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/cButton.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-cButton.Tpo" "Lib/View/$(DEPDIR)/netpanzer-cButton.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-cButton.Tpo"; exit 1; \
	fi
#	source='Lib/View/cButton.cpp' object='Lib/View/netpanzer-cButton.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-cButton.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-cButton.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-cButton.obj `if test -f 'Lib/View/cButton.cpp'; then $(CYGPATH_W) 'Lib/View/cButton.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/cButton.cpp'; fi`

Lib/View/netpanzer-cInputField.o: Lib/View/cInputField.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-cInputField.o -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-cInputField.Tpo" \
	  -c -o Lib/View/netpanzer-cInputField.o `test -f 'Lib/View/cInputField.cpp' || echo '$(srcdir)/'`Lib/View/cInputField.cpp; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-cInputField.Tpo" "Lib/View/$(DEPDIR)/netpanzer-cInputField.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-cInputField.Tpo"; exit 1; \
	fi
#	source='Lib/View/cInputField.cpp' object='Lib/View/netpanzer-cInputField.o' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-cInputField.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-cInputField.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-cInputField.o `test -f 'Lib/View/cInputField.cpp' || echo '$(srcdir)/'`Lib/View/cInputField.cpp

Lib/View/netpanzer-cInputField.obj: Lib/View/cInputField.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/View/netpanzer-cInputField.obj -MD -MP -MF "Lib/View/$(DEPDIR)/netpanzer-cInputField.Tpo" \
	  -c -o Lib/View/netpanzer-cInputField.obj `if test -f 'Lib/View/cInputField.cpp'; then $(CYGPATH_W) 'Lib/View/cInputField.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/cInputField.cpp'; fi`; \
	then mv "Lib/View/$(DEPDIR)/netpanzer-cInputField.Tpo" "Lib/View/$(DEPDIR)/netpanzer-cInputField.Po"; \
	else rm -f "Lib/View/$(DEPDIR)/netpanzer-cInputField.Tpo"; exit 1; \
	fi
#	source='Lib/View/cInputField.cpp' object='Lib/View/netpanzer-cInputField.obj' libtool=no \
#	depfile='Lib/View/$(DEPDIR)/netpanzer-cInputField.Po' tmpdepfile='Lib/View/$(DEPDIR)/netpanzer-cInputField.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/View/netpanzer-cInputField.obj `if test -f 'Lib/View/cInputField.cpp'; then $(CYGPATH_W) 'Lib/View/cInputField.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/View/cInputField.cpp'; fi`

Lib/netpanzer-Exception.o: Lib/Exception.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-Exception.o -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-Exception.Tpo" \
	  -c -o Lib/netpanzer-Exception.o `test -f 'Lib/Exception.cpp' || echo '$(srcdir)/'`Lib/Exception.cpp; \
	then mv "Lib/$(DEPDIR)/netpanzer-Exception.Tpo" "Lib/$(DEPDIR)/netpanzer-Exception.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-Exception.Tpo"; exit 1; \
	fi
#	source='Lib/Exception.cpp' object='Lib/netpanzer-Exception.o' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-Exception.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-Exception.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-Exception.o `test -f 'Lib/Exception.cpp' || echo '$(srcdir)/'`Lib/Exception.cpp

Lib/netpanzer-Exception.obj: Lib/Exception.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-Exception.obj -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-Exception.Tpo" \
	  -c -o Lib/netpanzer-Exception.obj `if test -f 'Lib/Exception.cpp'; then $(CYGPATH_W) 'Lib/Exception.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Exception.cpp'; fi`; \
	then mv "Lib/$(DEPDIR)/netpanzer-Exception.Tpo" "Lib/$(DEPDIR)/netpanzer-Exception.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-Exception.Tpo"; exit 1; \
	fi
#	source='Lib/Exception.cpp' object='Lib/netpanzer-Exception.obj' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-Exception.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-Exception.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-Exception.obj `if test -f 'Lib/Exception.cpp'; then $(CYGPATH_W) 'Lib/Exception.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Exception.cpp'; fi`

Lib/netpanzer-FileSystem.o: Lib/FileSystem.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-FileSystem.o -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-FileSystem.Tpo" \
	  -c -o Lib/netpanzer-FileSystem.o `test -f 'Lib/FileSystem.cpp' || echo '$(srcdir)/'`Lib/FileSystem.cpp; \
	then mv "Lib/$(DEPDIR)/netpanzer-FileSystem.Tpo" "Lib/$(DEPDIR)/netpanzer-FileSystem.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-FileSystem.Tpo"; exit 1; \
	fi
#	source='Lib/FileSystem.cpp' object='Lib/netpanzer-FileSystem.o' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-FileSystem.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-FileSystem.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-FileSystem.o `test -f 'Lib/FileSystem.cpp' || echo '$(srcdir)/'`Lib/FileSystem.cpp

Lib/netpanzer-FileSystem.obj: Lib/FileSystem.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-FileSystem.obj -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-FileSystem.Tpo" \
	  -c -o Lib/netpanzer-FileSystem.obj `if test -f 'Lib/FileSystem.cpp'; then $(CYGPATH_W) 'Lib/FileSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/FileSystem.cpp'; fi`; \
	then mv "Lib/$(DEPDIR)/netpanzer-FileSystem.Tpo" "Lib/$(DEPDIR)/netpanzer-FileSystem.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-FileSystem.Tpo"; exit 1; \
	fi
#	source='Lib/FileSystem.cpp' object='Lib/netpanzer-FileSystem.obj' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-FileSystem.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-FileSystem.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-FileSystem.obj `if test -f 'Lib/FileSystem.cpp'; then $(CYGPATH_W) 'Lib/FileSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/FileSystem.cpp'; fi`

Lib/netpanzer-FileUtil.o: Lib/FileUtil.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-FileUtil.o -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-FileUtil.Tpo" \
	  -c -o Lib/netpanzer-FileUtil.o `test -f 'Lib/FileUtil.cpp' || echo '$(srcdir)/'`Lib/FileUtil.cpp; \
	then mv "Lib/$(DEPDIR)/netpanzer-FileUtil.Tpo" "Lib/$(DEPDIR)/netpanzer-FileUtil.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-FileUtil.Tpo"; exit 1; \
	fi
#	source='Lib/FileUtil.cpp' object='Lib/netpanzer-FileUtil.o' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-FileUtil.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-FileUtil.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-FileUtil.o `test -f 'Lib/FileUtil.cpp' || echo '$(srcdir)/'`Lib/FileUtil.cpp

Lib/netpanzer-FileUtil.obj: Lib/FileUtil.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-FileUtil.obj -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-FileUtil.Tpo" \
	  -c -o Lib/netpanzer-FileUtil.obj `if test -f 'Lib/FileUtil.cpp'; then $(CYGPATH_W) 'Lib/FileUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/FileUtil.cpp'; fi`; \
	then mv "Lib/$(DEPDIR)/netpanzer-FileUtil.Tpo" "Lib/$(DEPDIR)/netpanzer-FileUtil.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-FileUtil.Tpo"; exit 1; \
	fi
#	source='Lib/FileUtil.cpp' object='Lib/netpanzer-FileUtil.obj' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-FileUtil.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-FileUtil.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-FileUtil.obj `if test -f 'Lib/FileUtil.cpp'; then $(CYGPATH_W) 'Lib/FileUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/FileUtil.cpp'; fi`

Lib/netpanzer-FindFirst.o: Lib/FindFirst.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-FindFirst.o -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-FindFirst.Tpo" \
	  -c -o Lib/netpanzer-FindFirst.o `test -f 'Lib/FindFirst.cpp' || echo '$(srcdir)/'`Lib/FindFirst.cpp; \
	then mv "Lib/$(DEPDIR)/netpanzer-FindFirst.Tpo" "Lib/$(DEPDIR)/netpanzer-FindFirst.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-FindFirst.Tpo"; exit 1; \
	fi
#	source='Lib/FindFirst.cpp' object='Lib/netpanzer-FindFirst.o' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-FindFirst.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-FindFirst.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-FindFirst.o `test -f 'Lib/FindFirst.cpp' || echo '$(srcdir)/'`Lib/FindFirst.cpp

Lib/netpanzer-FindFirst.obj: Lib/FindFirst.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-FindFirst.obj -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-FindFirst.Tpo" \
	  -c -o Lib/netpanzer-FindFirst.obj `if test -f 'Lib/FindFirst.cpp'; then $(CYGPATH_W) 'Lib/FindFirst.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/FindFirst.cpp'; fi`; \
	then mv "Lib/$(DEPDIR)/netpanzer-FindFirst.Tpo" "Lib/$(DEPDIR)/netpanzer-FindFirst.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-FindFirst.Tpo"; exit 1; \
	fi
#	source='Lib/FindFirst.cpp' object='Lib/netpanzer-FindFirst.obj' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-FindFirst.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-FindFirst.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-FindFirst.obj `if test -f 'Lib/FindFirst.cpp'; then $(CYGPATH_W) 'Lib/FindFirst.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/FindFirst.cpp'; fi`

Lib/netpanzer-LibView.o: Lib/LibView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-LibView.o -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-LibView.Tpo" \
	  -c -o Lib/netpanzer-LibView.o `test -f 'Lib/LibView.cpp' || echo '$(srcdir)/'`Lib/LibView.cpp; \
	then mv "Lib/$(DEPDIR)/netpanzer-LibView.Tpo" "Lib/$(DEPDIR)/netpanzer-LibView.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-LibView.Tpo"; exit 1; \
	fi
#	source='Lib/LibView.cpp' object='Lib/netpanzer-LibView.o' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-LibView.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-LibView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-LibView.o `test -f 'Lib/LibView.cpp' || echo '$(srcdir)/'`Lib/LibView.cpp

Lib/netpanzer-LibView.obj: Lib/LibView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-LibView.obj -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-LibView.Tpo" \
	  -c -o Lib/netpanzer-LibView.obj `if test -f 'Lib/LibView.cpp'; then $(CYGPATH_W) 'Lib/LibView.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/LibView.cpp'; fi`; \
	then mv "Lib/$(DEPDIR)/netpanzer-LibView.Tpo" "Lib/$(DEPDIR)/netpanzer-LibView.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-LibView.Tpo"; exit 1; \
	fi
#	source='Lib/LibView.cpp' object='Lib/netpanzer-LibView.obj' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-LibView.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-LibView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-LibView.obj `if test -f 'Lib/LibView.cpp'; then $(CYGPATH_W) 'Lib/LibView.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/LibView.cpp'; fi`

Lib/netpanzer-Log.o: Lib/Log.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-Log.o -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-Log.Tpo" \
	  -c -o Lib/netpanzer-Log.o `test -f 'Lib/Log.cpp' || echo '$(srcdir)/'`Lib/Log.cpp; \
	then mv "Lib/$(DEPDIR)/netpanzer-Log.Tpo" "Lib/$(DEPDIR)/netpanzer-Log.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-Log.Tpo"; exit 1; \
	fi
#	source='Lib/Log.cpp' object='Lib/netpanzer-Log.o' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-Log.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-Log.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-Log.o `test -f 'Lib/Log.cpp' || echo '$(srcdir)/'`Lib/Log.cpp

Lib/netpanzer-Log.obj: Lib/Log.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-Log.obj -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-Log.Tpo" \
	  -c -o Lib/netpanzer-Log.obj `if test -f 'Lib/Log.cpp'; then $(CYGPATH_W) 'Lib/Log.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Log.cpp'; fi`; \
	then mv "Lib/$(DEPDIR)/netpanzer-Log.Tpo" "Lib/$(DEPDIR)/netpanzer-Log.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-Log.Tpo"; exit 1; \
	fi
#	source='Lib/Log.cpp' object='Lib/netpanzer-Log.obj' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-Log.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-Log.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-Log.obj `if test -f 'Lib/Log.cpp'; then $(CYGPATH_W) 'Lib/Log.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Log.cpp'; fi`

Lib/netpanzer-Math.o: Lib/Math.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-Math.o -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-Math.Tpo" \
	  -c -o Lib/netpanzer-Math.o `test -f 'Lib/Math.cpp' || echo '$(srcdir)/'`Lib/Math.cpp; \
	then mv "Lib/$(DEPDIR)/netpanzer-Math.Tpo" "Lib/$(DEPDIR)/netpanzer-Math.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-Math.Tpo"; exit 1; \
	fi
#	source='Lib/Math.cpp' object='Lib/netpanzer-Math.o' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-Math.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-Math.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-Math.o `test -f 'Lib/Math.cpp' || echo '$(srcdir)/'`Lib/Math.cpp

Lib/netpanzer-Math.obj: Lib/Math.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-Math.obj -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-Math.Tpo" \
	  -c -o Lib/netpanzer-Math.obj `if test -f 'Lib/Math.cpp'; then $(CYGPATH_W) 'Lib/Math.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Math.cpp'; fi`; \
	then mv "Lib/$(DEPDIR)/netpanzer-Math.Tpo" "Lib/$(DEPDIR)/netpanzer-Math.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-Math.Tpo"; exit 1; \
	fi
#	source='Lib/Math.cpp' object='Lib/netpanzer-Math.obj' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-Math.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-Math.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-Math.obj `if test -f 'Lib/Math.cpp'; then $(CYGPATH_W) 'Lib/Math.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Math.cpp'; fi`

Lib/netpanzer-Physics.o: Lib/Physics.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-Physics.o -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-Physics.Tpo" \
	  -c -o Lib/netpanzer-Physics.o `test -f 'Lib/Physics.cpp' || echo '$(srcdir)/'`Lib/Physics.cpp; \
	then mv "Lib/$(DEPDIR)/netpanzer-Physics.Tpo" "Lib/$(DEPDIR)/netpanzer-Physics.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-Physics.Tpo"; exit 1; \
	fi
#	source='Lib/Physics.cpp' object='Lib/netpanzer-Physics.o' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-Physics.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-Physics.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-Physics.o `test -f 'Lib/Physics.cpp' || echo '$(srcdir)/'`Lib/Physics.cpp

Lib/netpanzer-Physics.obj: Lib/Physics.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-Physics.obj -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-Physics.Tpo" \
	  -c -o Lib/netpanzer-Physics.obj `if test -f 'Lib/Physics.cpp'; then $(CYGPATH_W) 'Lib/Physics.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Physics.cpp'; fi`; \
	then mv "Lib/$(DEPDIR)/netpanzer-Physics.Tpo" "Lib/$(DEPDIR)/netpanzer-Physics.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-Physics.Tpo"; exit 1; \
	fi
#	source='Lib/Physics.cpp' object='Lib/netpanzer-Physics.obj' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-Physics.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-Physics.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-Physics.obj `if test -f 'Lib/Physics.cpp'; then $(CYGPATH_W) 'Lib/Physics.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Physics.cpp'; fi`

Lib/netpanzer-SplitPath.o: Lib/SplitPath.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-SplitPath.o -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-SplitPath.Tpo" \
	  -c -o Lib/netpanzer-SplitPath.o `test -f 'Lib/SplitPath.cpp' || echo '$(srcdir)/'`Lib/SplitPath.cpp; \
	then mv "Lib/$(DEPDIR)/netpanzer-SplitPath.Tpo" "Lib/$(DEPDIR)/netpanzer-SplitPath.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-SplitPath.Tpo"; exit 1; \
	fi
#	source='Lib/SplitPath.cpp' object='Lib/netpanzer-SplitPath.o' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-SplitPath.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-SplitPath.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-SplitPath.o `test -f 'Lib/SplitPath.cpp' || echo '$(srcdir)/'`Lib/SplitPath.cpp

Lib/netpanzer-SplitPath.obj: Lib/SplitPath.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-SplitPath.obj -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-SplitPath.Tpo" \
	  -c -o Lib/netpanzer-SplitPath.obj `if test -f 'Lib/SplitPath.cpp'; then $(CYGPATH_W) 'Lib/SplitPath.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/SplitPath.cpp'; fi`; \
	then mv "Lib/$(DEPDIR)/netpanzer-SplitPath.Tpo" "Lib/$(DEPDIR)/netpanzer-SplitPath.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-SplitPath.Tpo"; exit 1; \
	fi
#	source='Lib/SplitPath.cpp' object='Lib/netpanzer-SplitPath.obj' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-SplitPath.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-SplitPath.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-SplitPath.obj `if test -f 'Lib/SplitPath.cpp'; then $(CYGPATH_W) 'Lib/SplitPath.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/SplitPath.cpp'; fi`

Lib/netpanzer-cMouse.o: Lib/cMouse.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-cMouse.o -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-cMouse.Tpo" \
	  -c -o Lib/netpanzer-cMouse.o `test -f 'Lib/cMouse.cpp' || echo '$(srcdir)/'`Lib/cMouse.cpp; \
	then mv "Lib/$(DEPDIR)/netpanzer-cMouse.Tpo" "Lib/$(DEPDIR)/netpanzer-cMouse.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-cMouse.Tpo"; exit 1; \
	fi
#	source='Lib/cMouse.cpp' object='Lib/netpanzer-cMouse.o' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-cMouse.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-cMouse.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-cMouse.o `test -f 'Lib/cMouse.cpp' || echo '$(srcdir)/'`Lib/cMouse.cpp

Lib/netpanzer-cMouse.obj: Lib/cMouse.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-cMouse.obj -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-cMouse.Tpo" \
	  -c -o Lib/netpanzer-cMouse.obj `if test -f 'Lib/cMouse.cpp'; then $(CYGPATH_W) 'Lib/cMouse.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/cMouse.cpp'; fi`; \
	then mv "Lib/$(DEPDIR)/netpanzer-cMouse.Tpo" "Lib/$(DEPDIR)/netpanzer-cMouse.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-cMouse.Tpo"; exit 1; \
	fi
#	source='Lib/cMouse.cpp' object='Lib/netpanzer-cMouse.obj' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-cMouse.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-cMouse.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-cMouse.obj `if test -f 'Lib/cMouse.cpp'; then $(CYGPATH_W) 'Lib/cMouse.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/cMouse.cpp'; fi`

Lib/netpanzer-cTimeStamp.o: Lib/cTimeStamp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-cTimeStamp.o -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-cTimeStamp.Tpo" \
	  -c -o Lib/netpanzer-cTimeStamp.o `test -f 'Lib/cTimeStamp.cpp' || echo '$(srcdir)/'`Lib/cTimeStamp.cpp; \
	then mv "Lib/$(DEPDIR)/netpanzer-cTimeStamp.Tpo" "Lib/$(DEPDIR)/netpanzer-cTimeStamp.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-cTimeStamp.Tpo"; exit 1; \
	fi
#	source='Lib/cTimeStamp.cpp' object='Lib/netpanzer-cTimeStamp.o' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-cTimeStamp.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-cTimeStamp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-cTimeStamp.o `test -f 'Lib/cTimeStamp.cpp' || echo '$(srcdir)/'`Lib/cTimeStamp.cpp

Lib/netpanzer-cTimeStamp.obj: Lib/cTimeStamp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/netpanzer-cTimeStamp.obj -MD -MP -MF "Lib/$(DEPDIR)/netpanzer-cTimeStamp.Tpo" \
	  -c -o Lib/netpanzer-cTimeStamp.obj `if test -f 'Lib/cTimeStamp.cpp'; then $(CYGPATH_W) 'Lib/cTimeStamp.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/cTimeStamp.cpp'; fi`; \
	then mv "Lib/$(DEPDIR)/netpanzer-cTimeStamp.Tpo" "Lib/$(DEPDIR)/netpanzer-cTimeStamp.Po"; \
	else rm -f "Lib/$(DEPDIR)/netpanzer-cTimeStamp.Tpo"; exit 1; \
	fi
#	source='Lib/cTimeStamp.cpp' object='Lib/netpanzer-cTimeStamp.obj' libtool=no \
#	depfile='Lib/$(DEPDIR)/netpanzer-cTimeStamp.Po' tmpdepfile='Lib/$(DEPDIR)/netpanzer-cTimeStamp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/netpanzer-cTimeStamp.obj `if test -f 'Lib/cTimeStamp.cpp'; then $(CYGPATH_W) 'Lib/cTimeStamp.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/cTimeStamp.cpp'; fi`

Lib/Interfaces/netpanzer-TimerInterface.o: Lib/Interfaces/TimerInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Interfaces/netpanzer-TimerInterface.o -MD -MP -MF "Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.Tpo" \
	  -c -o Lib/Interfaces/netpanzer-TimerInterface.o `test -f 'Lib/Interfaces/TimerInterface.cpp' || echo '$(srcdir)/'`Lib/Interfaces/TimerInterface.cpp; \
	then mv "Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.Tpo" "Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.Po"; \
	else rm -f "Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.Tpo"; exit 1; \
	fi
#	source='Lib/Interfaces/TimerInterface.cpp' object='Lib/Interfaces/netpanzer-TimerInterface.o' libtool=no \
#	depfile='Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.Po' tmpdepfile='Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Interfaces/netpanzer-TimerInterface.o `test -f 'Lib/Interfaces/TimerInterface.cpp' || echo '$(srcdir)/'`Lib/Interfaces/TimerInterface.cpp

Lib/Interfaces/netpanzer-TimerInterface.obj: Lib/Interfaces/TimerInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Interfaces/netpanzer-TimerInterface.obj -MD -MP -MF "Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.Tpo" \
	  -c -o Lib/Interfaces/netpanzer-TimerInterface.obj `if test -f 'Lib/Interfaces/TimerInterface.cpp'; then $(CYGPATH_W) 'Lib/Interfaces/TimerInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Interfaces/TimerInterface.cpp'; fi`; \
	then mv "Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.Tpo" "Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.Po"; \
	else rm -f "Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.Tpo"; exit 1; \
	fi
#	source='Lib/Interfaces/TimerInterface.cpp' object='Lib/Interfaces/netpanzer-TimerInterface.obj' libtool=no \
#	depfile='Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.Po' tmpdepfile='Lib/Interfaces/$(DEPDIR)/netpanzer-TimerInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Interfaces/netpanzer-TimerInterface.obj `if test -f 'Lib/Interfaces/TimerInterface.cpp'; then $(CYGPATH_W) 'Lib/Interfaces/TimerInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Interfaces/TimerInterface.cpp'; fi`

Lib/Interfaces/netpanzer-UtilInterface.o: Lib/Interfaces/UtilInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Interfaces/netpanzer-UtilInterface.o -MD -MP -MF "Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.Tpo" \
	  -c -o Lib/Interfaces/netpanzer-UtilInterface.o `test -f 'Lib/Interfaces/UtilInterface.cpp' || echo '$(srcdir)/'`Lib/Interfaces/UtilInterface.cpp; \
	then mv "Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.Tpo" "Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.Po"; \
	else rm -f "Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.Tpo"; exit 1; \
	fi
#	source='Lib/Interfaces/UtilInterface.cpp' object='Lib/Interfaces/netpanzer-UtilInterface.o' libtool=no \
#	depfile='Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.Po' tmpdepfile='Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Interfaces/netpanzer-UtilInterface.o `test -f 'Lib/Interfaces/UtilInterface.cpp' || echo '$(srcdir)/'`Lib/Interfaces/UtilInterface.cpp

Lib/Interfaces/netpanzer-UtilInterface.obj: Lib/Interfaces/UtilInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Interfaces/netpanzer-UtilInterface.obj -MD -MP -MF "Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.Tpo" \
	  -c -o Lib/Interfaces/netpanzer-UtilInterface.obj `if test -f 'Lib/Interfaces/UtilInterface.cpp'; then $(CYGPATH_W) 'Lib/Interfaces/UtilInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Interfaces/UtilInterface.cpp'; fi`; \
	then mv "Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.Tpo" "Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.Po"; \
	else rm -f "Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.Tpo"; exit 1; \
	fi
#	source='Lib/Interfaces/UtilInterface.cpp' object='Lib/Interfaces/netpanzer-UtilInterface.obj' libtool=no \
#	depfile='Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.Po' tmpdepfile='Lib/Interfaces/$(DEPDIR)/netpanzer-UtilInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Interfaces/netpanzer-UtilInterface.obj `if test -f 'Lib/Interfaces/UtilInterface.cpp'; then $(CYGPATH_W) 'Lib/Interfaces/UtilInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Interfaces/UtilInterface.cpp'; fi`

Lib/PObject/Classes/netpanzer-Angle.o: Lib/PObject/Classes/Angle.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-Angle.o -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-Angle.o `test -f 'Lib/PObject/Classes/Angle.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/Angle.cpp; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/Angle.cpp' object='Lib/PObject/Classes/netpanzer-Angle.o' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-Angle.o `test -f 'Lib/PObject/Classes/Angle.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/Angle.cpp

Lib/PObject/Classes/netpanzer-Angle.obj: Lib/PObject/Classes/Angle.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-Angle.obj -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-Angle.obj `if test -f 'Lib/PObject/Classes/Angle.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/Angle.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/Angle.cpp'; fi`; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/Angle.cpp' object='Lib/PObject/Classes/netpanzer-Angle.obj' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-Angle.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-Angle.obj `if test -f 'Lib/PObject/Classes/Angle.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/Angle.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/Angle.cpp'; fi`

Lib/PObject/Classes/netpanzer-BitArray.o: Lib/PObject/Classes/BitArray.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-BitArray.o -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-BitArray.o `test -f 'Lib/PObject/Classes/BitArray.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/BitArray.cpp; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/BitArray.cpp' object='Lib/PObject/Classes/netpanzer-BitArray.o' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-BitArray.o `test -f 'Lib/PObject/Classes/BitArray.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/BitArray.cpp

Lib/PObject/Classes/netpanzer-BitArray.obj: Lib/PObject/Classes/BitArray.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-BitArray.obj -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-BitArray.obj `if test -f 'Lib/PObject/Classes/BitArray.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/BitArray.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/BitArray.cpp'; fi`; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/BitArray.cpp' object='Lib/PObject/Classes/netpanzer-BitArray.obj' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-BitArray.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-BitArray.obj `if test -f 'Lib/PObject/Classes/BitArray.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/BitArray.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/BitArray.cpp'; fi`

Lib/PObject/Classes/netpanzer-BoundBox.o: Lib/PObject/Classes/BoundBox.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-BoundBox.o -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-BoundBox.o `test -f 'Lib/PObject/Classes/BoundBox.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/BoundBox.cpp; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/BoundBox.cpp' object='Lib/PObject/Classes/netpanzer-BoundBox.o' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-BoundBox.o `test -f 'Lib/PObject/Classes/BoundBox.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/BoundBox.cpp

Lib/PObject/Classes/netpanzer-BoundBox.obj: Lib/PObject/Classes/BoundBox.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-BoundBox.obj -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-BoundBox.obj `if test -f 'Lib/PObject/Classes/BoundBox.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/BoundBox.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/BoundBox.cpp'; fi`; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/BoundBox.cpp' object='Lib/PObject/Classes/netpanzer-BoundBox.obj' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-BoundBox.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-BoundBox.obj `if test -f 'Lib/PObject/Classes/BoundBox.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/BoundBox.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/BoundBox.cpp'; fi`

Lib/PObject/Classes/netpanzer-BresenhamLine.o: Lib/PObject/Classes/BresenhamLine.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-BresenhamLine.o -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-BresenhamLine.o `test -f 'Lib/PObject/Classes/BresenhamLine.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/BresenhamLine.cpp; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/BresenhamLine.cpp' object='Lib/PObject/Classes/netpanzer-BresenhamLine.o' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-BresenhamLine.o `test -f 'Lib/PObject/Classes/BresenhamLine.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/BresenhamLine.cpp

Lib/PObject/Classes/netpanzer-BresenhamLine.obj: Lib/PObject/Classes/BresenhamLine.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-BresenhamLine.obj -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-BresenhamLine.obj `if test -f 'Lib/PObject/Classes/BresenhamLine.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/BresenhamLine.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/BresenhamLine.cpp'; fi`; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/BresenhamLine.cpp' object='Lib/PObject/Classes/netpanzer-BresenhamLine.obj' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-BresenhamLine.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-BresenhamLine.obj `if test -f 'Lib/PObject/Classes/BresenhamLine.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/BresenhamLine.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/BresenhamLine.cpp'; fi`

Lib/PObject/Classes/netpanzer-FileList.o: Lib/PObject/Classes/FileList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-FileList.o -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-FileList.o `test -f 'Lib/PObject/Classes/FileList.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/FileList.cpp; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/FileList.cpp' object='Lib/PObject/Classes/netpanzer-FileList.o' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-FileList.o `test -f 'Lib/PObject/Classes/FileList.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/FileList.cpp

Lib/PObject/Classes/netpanzer-FileList.obj: Lib/PObject/Classes/FileList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-FileList.obj -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-FileList.obj `if test -f 'Lib/PObject/Classes/FileList.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/FileList.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/FileList.cpp'; fi`; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/FileList.cpp' object='Lib/PObject/Classes/netpanzer-FileList.obj' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-FileList.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-FileList.obj `if test -f 'Lib/PObject/Classes/FileList.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/FileList.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/FileList.cpp'; fi`

Lib/PObject/Classes/netpanzer-PArray.o: Lib/PObject/Classes/PArray.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-PArray.o -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-PArray.o `test -f 'Lib/PObject/Classes/PArray.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/PArray.cpp; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/PArray.cpp' object='Lib/PObject/Classes/netpanzer-PArray.o' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-PArray.o `test -f 'Lib/PObject/Classes/PArray.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/PArray.cpp

Lib/PObject/Classes/netpanzer-PArray.obj: Lib/PObject/Classes/PArray.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-PArray.obj -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-PArray.obj `if test -f 'Lib/PObject/Classes/PArray.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/PArray.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/PArray.cpp'; fi`; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/PArray.cpp' object='Lib/PObject/Classes/netpanzer-PArray.obj' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-PArray.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-PArray.obj `if test -f 'Lib/PObject/Classes/PArray.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/PArray.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/PArray.cpp'; fi`

Lib/PObject/Classes/netpanzer-Timer.o: Lib/PObject/Classes/Timer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-Timer.o -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-Timer.o `test -f 'Lib/PObject/Classes/Timer.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/Timer.cpp; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/Timer.cpp' object='Lib/PObject/Classes/netpanzer-Timer.o' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-Timer.o `test -f 'Lib/PObject/Classes/Timer.cpp' || echo '$(srcdir)/'`Lib/PObject/Classes/Timer.cpp

Lib/PObject/Classes/netpanzer-Timer.obj: Lib/PObject/Classes/Timer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/PObject/Classes/netpanzer-Timer.obj -MD -MP -MF "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.Tpo" \
	  -c -o Lib/PObject/Classes/netpanzer-Timer.obj `if test -f 'Lib/PObject/Classes/Timer.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/Timer.cpp'; fi`; \
	then mv "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.Tpo" "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.Po"; \
	else rm -f "Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.Tpo"; exit 1; \
	fi
#	source='Lib/PObject/Classes/Timer.cpp' object='Lib/PObject/Classes/netpanzer-Timer.obj' libtool=no \
#	depfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.Po' tmpdepfile='Lib/PObject/Classes/$(DEPDIR)/netpanzer-Timer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/PObject/Classes/netpanzer-Timer.obj `if test -f 'Lib/PObject/Classes/Timer.cpp'; then $(CYGPATH_W) 'Lib/PObject/Classes/Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/PObject/Classes/Timer.cpp'; fi`

Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.o: Lib/Particles/ChunkTrajectoryParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.o `test -f 'Lib/Particles/ChunkTrajectoryParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/ChunkTrajectoryParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/ChunkTrajectoryParticle2D.cpp' object='Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.o `test -f 'Lib/Particles/ChunkTrajectoryParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/ChunkTrajectoryParticle2D.cpp

Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.obj: Lib/Particles/ChunkTrajectoryParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.obj `if test -f 'Lib/Particles/ChunkTrajectoryParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/ChunkTrajectoryParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/ChunkTrajectoryParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/ChunkTrajectoryParticle2D.cpp' object='Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-ChunkTrajectoryParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-ChunkTrajectoryParticle2D.obj `if test -f 'Lib/Particles/ChunkTrajectoryParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/ChunkTrajectoryParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/ChunkTrajectoryParticle2D.cpp'; fi`

Lib/Particles/netpanzer-CloudParticle2D.o: Lib/Particles/CloudParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-CloudParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-CloudParticle2D.o `test -f 'Lib/Particles/CloudParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/CloudParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/CloudParticle2D.cpp' object='Lib/Particles/netpanzer-CloudParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-CloudParticle2D.o `test -f 'Lib/Particles/CloudParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/CloudParticle2D.cpp

Lib/Particles/netpanzer-CloudParticle2D.obj: Lib/Particles/CloudParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-CloudParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-CloudParticle2D.obj `if test -f 'Lib/Particles/CloudParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/CloudParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/CloudParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/CloudParticle2D.cpp' object='Lib/Particles/netpanzer-CloudParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-CloudParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-CloudParticle2D.obj `if test -f 'Lib/Particles/CloudParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/CloudParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/CloudParticle2D.cpp'; fi`

Lib/Particles/netpanzer-CraterParticle2D.o: Lib/Particles/CraterParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-CraterParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-CraterParticle2D.o `test -f 'Lib/Particles/CraterParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/CraterParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/CraterParticle2D.cpp' object='Lib/Particles/netpanzer-CraterParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-CraterParticle2D.o `test -f 'Lib/Particles/CraterParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/CraterParticle2D.cpp

Lib/Particles/netpanzer-CraterParticle2D.obj: Lib/Particles/CraterParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-CraterParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-CraterParticle2D.obj `if test -f 'Lib/Particles/CraterParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/CraterParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/CraterParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/CraterParticle2D.cpp' object='Lib/Particles/netpanzer-CraterParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-CraterParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-CraterParticle2D.obj `if test -f 'Lib/Particles/CraterParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/CraterParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/CraterParticle2D.cpp'; fi`

Lib/Particles/netpanzer-DirtKickParticle2D.o: Lib/Particles/DirtKickParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-DirtKickParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-DirtKickParticle2D.o `test -f 'Lib/Particles/DirtKickParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/DirtKickParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/DirtKickParticle2D.cpp' object='Lib/Particles/netpanzer-DirtKickParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-DirtKickParticle2D.o `test -f 'Lib/Particles/DirtKickParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/DirtKickParticle2D.cpp

Lib/Particles/netpanzer-DirtKickParticle2D.obj: Lib/Particles/DirtKickParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-DirtKickParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-DirtKickParticle2D.obj `if test -f 'Lib/Particles/DirtKickParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/DirtKickParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/DirtKickParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/DirtKickParticle2D.cpp' object='Lib/Particles/netpanzer-DirtKickParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-DirtKickParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-DirtKickParticle2D.obj `if test -f 'Lib/Particles/DirtKickParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/DirtKickParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/DirtKickParticle2D.cpp'; fi`

Lib/Particles/netpanzer-FireParticle2D.o: Lib/Particles/FireParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-FireParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-FireParticle2D.o `test -f 'Lib/Particles/FireParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/FireParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/FireParticle2D.cpp' object='Lib/Particles/netpanzer-FireParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-FireParticle2D.o `test -f 'Lib/Particles/FireParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/FireParticle2D.cpp

Lib/Particles/netpanzer-FireParticle2D.obj: Lib/Particles/FireParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-FireParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-FireParticle2D.obj `if test -f 'Lib/Particles/FireParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/FireParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/FireParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/FireParticle2D.cpp' object='Lib/Particles/netpanzer-FireParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-FireParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-FireParticle2D.obj `if test -f 'Lib/Particles/FireParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/FireParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/FireParticle2D.cpp'; fi`

Lib/Particles/netpanzer-FireParticleSystem2D.o: Lib/Particles/FireParticleSystem2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-FireParticleSystem2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-FireParticleSystem2D.o `test -f 'Lib/Particles/FireParticleSystem2D.cpp' || echo '$(srcdir)/'`Lib/Particles/FireParticleSystem2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/FireParticleSystem2D.cpp' object='Lib/Particles/netpanzer-FireParticleSystem2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-FireParticleSystem2D.o `test -f 'Lib/Particles/FireParticleSystem2D.cpp' || echo '$(srcdir)/'`Lib/Particles/FireParticleSystem2D.cpp

Lib/Particles/netpanzer-FireParticleSystem2D.obj: Lib/Particles/FireParticleSystem2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-FireParticleSystem2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-FireParticleSystem2D.obj `if test -f 'Lib/Particles/FireParticleSystem2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/FireParticleSystem2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/FireParticleSystem2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/FireParticleSystem2D.cpp' object='Lib/Particles/netpanzer-FireParticleSystem2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-FireParticleSystem2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-FireParticleSystem2D.obj `if test -f 'Lib/Particles/FireParticleSystem2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/FireParticleSystem2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/FireParticleSystem2D.cpp'; fi`

Lib/Particles/netpanzer-FlameParticle2D.o: Lib/Particles/FlameParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-FlameParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-FlameParticle2D.o `test -f 'Lib/Particles/FlameParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/FlameParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/FlameParticle2D.cpp' object='Lib/Particles/netpanzer-FlameParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-FlameParticle2D.o `test -f 'Lib/Particles/FlameParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/FlameParticle2D.cpp

Lib/Particles/netpanzer-FlameParticle2D.obj: Lib/Particles/FlameParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-FlameParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-FlameParticle2D.obj `if test -f 'Lib/Particles/FlameParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/FlameParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/FlameParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/FlameParticle2D.cpp' object='Lib/Particles/netpanzer-FlameParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-FlameParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-FlameParticle2D.obj `if test -f 'Lib/Particles/FlameParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/FlameParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/FlameParticle2D.cpp'; fi`

Lib/Particles/netpanzer-FlashParticle2D.o: Lib/Particles/FlashParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-FlashParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-FlashParticle2D.o `test -f 'Lib/Particles/FlashParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/FlashParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/FlashParticle2D.cpp' object='Lib/Particles/netpanzer-FlashParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-FlashParticle2D.o `test -f 'Lib/Particles/FlashParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/FlashParticle2D.cpp

Lib/Particles/netpanzer-FlashParticle2D.obj: Lib/Particles/FlashParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-FlashParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-FlashParticle2D.obj `if test -f 'Lib/Particles/FlashParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/FlashParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/FlashParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/FlashParticle2D.cpp' object='Lib/Particles/netpanzer-FlashParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-FlashParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-FlashParticle2D.obj `if test -f 'Lib/Particles/FlashParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/FlashParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/FlashParticle2D.cpp'; fi`

Lib/Particles/netpanzer-GroundExplosionParticle2D.o: Lib/Particles/GroundExplosionParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-GroundExplosionParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-GroundExplosionParticle2D.o `test -f 'Lib/Particles/GroundExplosionParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/GroundExplosionParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/GroundExplosionParticle2D.cpp' object='Lib/Particles/netpanzer-GroundExplosionParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-GroundExplosionParticle2D.o `test -f 'Lib/Particles/GroundExplosionParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/GroundExplosionParticle2D.cpp

Lib/Particles/netpanzer-GroundExplosionParticle2D.obj: Lib/Particles/GroundExplosionParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-GroundExplosionParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-GroundExplosionParticle2D.obj `if test -f 'Lib/Particles/GroundExplosionParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/GroundExplosionParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/GroundExplosionParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/GroundExplosionParticle2D.cpp' object='Lib/Particles/netpanzer-GroundExplosionParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-GroundExplosionParticle2D.obj `if test -f 'Lib/Particles/GroundExplosionParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/GroundExplosionParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/GroundExplosionParticle2D.cpp'; fi`

Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.o: Lib/Particles/GroundExplosionParticleSystem2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.o `test -f 'Lib/Particles/GroundExplosionParticleSystem2D.cpp' || echo '$(srcdir)/'`Lib/Particles/GroundExplosionParticleSystem2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/GroundExplosionParticleSystem2D.cpp' object='Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.o `test -f 'Lib/Particles/GroundExplosionParticleSystem2D.cpp' || echo '$(srcdir)/'`Lib/Particles/GroundExplosionParticleSystem2D.cpp

Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.obj: Lib/Particles/GroundExplosionParticleSystem2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.obj `if test -f 'Lib/Particles/GroundExplosionParticleSystem2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/GroundExplosionParticleSystem2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/GroundExplosionParticleSystem2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/GroundExplosionParticleSystem2D.cpp' object='Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-GroundExplosionParticleSystem2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-GroundExplosionParticleSystem2D.obj `if test -f 'Lib/Particles/GroundExplosionParticleSystem2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/GroundExplosionParticleSystem2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/GroundExplosionParticleSystem2D.cpp'; fi`

Lib/Particles/netpanzer-Particle2D.o: Lib/Particles/Particle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-Particle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-Particle2D.o `test -f 'Lib/Particles/Particle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/Particle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/Particle2D.cpp' object='Lib/Particles/netpanzer-Particle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-Particle2D.o `test -f 'Lib/Particles/Particle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/Particle2D.cpp

Lib/Particles/netpanzer-Particle2D.obj: Lib/Particles/Particle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-Particle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-Particle2D.obj `if test -f 'Lib/Particles/Particle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/Particle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/Particle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/Particle2D.cpp' object='Lib/Particles/netpanzer-Particle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-Particle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-Particle2D.obj `if test -f 'Lib/Particles/Particle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/Particle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/Particle2D.cpp'; fi`

Lib/Particles/netpanzer-ParticleInterface.o: Lib/Particles/ParticleInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-ParticleInterface.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.Tpo" \
	  -c -o Lib/Particles/netpanzer-ParticleInterface.o `test -f 'Lib/Particles/ParticleInterface.cpp' || echo '$(srcdir)/'`Lib/Particles/ParticleInterface.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/ParticleInterface.cpp' object='Lib/Particles/netpanzer-ParticleInterface.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-ParticleInterface.o `test -f 'Lib/Particles/ParticleInterface.cpp' || echo '$(srcdir)/'`Lib/Particles/ParticleInterface.cpp

Lib/Particles/netpanzer-ParticleInterface.obj: Lib/Particles/ParticleInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-ParticleInterface.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.Tpo" \
	  -c -o Lib/Particles/netpanzer-ParticleInterface.obj `if test -f 'Lib/Particles/ParticleInterface.cpp'; then $(CYGPATH_W) 'Lib/Particles/ParticleInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/ParticleInterface.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/ParticleInterface.cpp' object='Lib/Particles/netpanzer-ParticleInterface.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-ParticleInterface.obj `if test -f 'Lib/Particles/ParticleInterface.cpp'; then $(CYGPATH_W) 'Lib/Particles/ParticleInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/ParticleInterface.cpp'; fi`

Lib/Particles/netpanzer-ParticleSystem2D.o: Lib/Particles/ParticleSystem2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-ParticleSystem2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-ParticleSystem2D.o `test -f 'Lib/Particles/ParticleSystem2D.cpp' || echo '$(srcdir)/'`Lib/Particles/ParticleSystem2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/ParticleSystem2D.cpp' object='Lib/Particles/netpanzer-ParticleSystem2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-ParticleSystem2D.o `test -f 'Lib/Particles/ParticleSystem2D.cpp' || echo '$(srcdir)/'`Lib/Particles/ParticleSystem2D.cpp

Lib/Particles/netpanzer-ParticleSystem2D.obj: Lib/Particles/ParticleSystem2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-ParticleSystem2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-ParticleSystem2D.obj `if test -f 'Lib/Particles/ParticleSystem2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/ParticleSystem2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/ParticleSystem2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/ParticleSystem2D.cpp' object='Lib/Particles/netpanzer-ParticleSystem2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystem2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-ParticleSystem2D.obj `if test -f 'Lib/Particles/ParticleSystem2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/ParticleSystem2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/ParticleSystem2D.cpp'; fi`

Lib/Particles/netpanzer-ParticleSystemGlobals.o: Lib/Particles/ParticleSystemGlobals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-ParticleSystemGlobals.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.Tpo" \
	  -c -o Lib/Particles/netpanzer-ParticleSystemGlobals.o `test -f 'Lib/Particles/ParticleSystemGlobals.cpp' || echo '$(srcdir)/'`Lib/Particles/ParticleSystemGlobals.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/ParticleSystemGlobals.cpp' object='Lib/Particles/netpanzer-ParticleSystemGlobals.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-ParticleSystemGlobals.o `test -f 'Lib/Particles/ParticleSystemGlobals.cpp' || echo '$(srcdir)/'`Lib/Particles/ParticleSystemGlobals.cpp

Lib/Particles/netpanzer-ParticleSystemGlobals.obj: Lib/Particles/ParticleSystemGlobals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-ParticleSystemGlobals.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.Tpo" \
	  -c -o Lib/Particles/netpanzer-ParticleSystemGlobals.obj `if test -f 'Lib/Particles/ParticleSystemGlobals.cpp'; then $(CYGPATH_W) 'Lib/Particles/ParticleSystemGlobals.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/ParticleSystemGlobals.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/ParticleSystemGlobals.cpp' object='Lib/Particles/netpanzer-ParticleSystemGlobals.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleSystemGlobals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-ParticleSystemGlobals.obj `if test -f 'Lib/Particles/ParticleSystemGlobals.cpp'; then $(CYGPATH_W) 'Lib/Particles/ParticleSystemGlobals.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/ParticleSystemGlobals.cpp'; fi`

Lib/Particles/netpanzer-ParticleTweakView.o: Lib/Particles/ParticleTweakView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-ParticleTweakView.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.Tpo" \
	  -c -o Lib/Particles/netpanzer-ParticleTweakView.o `test -f 'Lib/Particles/ParticleTweakView.cpp' || echo '$(srcdir)/'`Lib/Particles/ParticleTweakView.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/ParticleTweakView.cpp' object='Lib/Particles/netpanzer-ParticleTweakView.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-ParticleTweakView.o `test -f 'Lib/Particles/ParticleTweakView.cpp' || echo '$(srcdir)/'`Lib/Particles/ParticleTweakView.cpp

Lib/Particles/netpanzer-ParticleTweakView.obj: Lib/Particles/ParticleTweakView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-ParticleTweakView.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.Tpo" \
	  -c -o Lib/Particles/netpanzer-ParticleTweakView.obj `if test -f 'Lib/Particles/ParticleTweakView.cpp'; then $(CYGPATH_W) 'Lib/Particles/ParticleTweakView.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/ParticleTweakView.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/ParticleTweakView.cpp' object='Lib/Particles/netpanzer-ParticleTweakView.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-ParticleTweakView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-ParticleTweakView.obj `if test -f 'Lib/Particles/ParticleTweakView.cpp'; then $(CYGPATH_W) 'Lib/Particles/ParticleTweakView.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/ParticleTweakView.cpp'; fi`

Lib/Particles/netpanzer-PuffParticle2D.o: Lib/Particles/PuffParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-PuffParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-PuffParticle2D.o `test -f 'Lib/Particles/PuffParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/PuffParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/PuffParticle2D.cpp' object='Lib/Particles/netpanzer-PuffParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-PuffParticle2D.o `test -f 'Lib/Particles/PuffParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/PuffParticle2D.cpp

Lib/Particles/netpanzer-PuffParticle2D.obj: Lib/Particles/PuffParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-PuffParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-PuffParticle2D.obj `if test -f 'Lib/Particles/PuffParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/PuffParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/PuffParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/PuffParticle2D.cpp' object='Lib/Particles/netpanzer-PuffParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-PuffParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-PuffParticle2D.obj `if test -f 'Lib/Particles/PuffParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/PuffParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/PuffParticle2D.cpp'; fi`

Lib/Particles/netpanzer-RadarPingParticle2D.o: Lib/Particles/RadarPingParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-RadarPingParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-RadarPingParticle2D.o `test -f 'Lib/Particles/RadarPingParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/RadarPingParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/RadarPingParticle2D.cpp' object='Lib/Particles/netpanzer-RadarPingParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-RadarPingParticle2D.o `test -f 'Lib/Particles/RadarPingParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/RadarPingParticle2D.cpp

Lib/Particles/netpanzer-RadarPingParticle2D.obj: Lib/Particles/RadarPingParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-RadarPingParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-RadarPingParticle2D.obj `if test -f 'Lib/Particles/RadarPingParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/RadarPingParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/RadarPingParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/RadarPingParticle2D.cpp' object='Lib/Particles/netpanzer-RadarPingParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-RadarPingParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-RadarPingParticle2D.obj `if test -f 'Lib/Particles/RadarPingParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/RadarPingParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/RadarPingParticle2D.cpp'; fi`

Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.o: Lib/Particles/SmokingTrajectoryParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.o `test -f 'Lib/Particles/SmokingTrajectoryParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/SmokingTrajectoryParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/SmokingTrajectoryParticle2D.cpp' object='Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.o `test -f 'Lib/Particles/SmokingTrajectoryParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/SmokingTrajectoryParticle2D.cpp

Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.obj: Lib/Particles/SmokingTrajectoryParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.obj `if test -f 'Lib/Particles/SmokingTrajectoryParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/SmokingTrajectoryParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/SmokingTrajectoryParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/SmokingTrajectoryParticle2D.cpp' object='Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-SmokingTrajectoryParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-SmokingTrajectoryParticle2D.obj `if test -f 'Lib/Particles/SmokingTrajectoryParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/SmokingTrajectoryParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/SmokingTrajectoryParticle2D.cpp'; fi`

Lib/Particles/netpanzer-SmolderParticleSystem2D.o: Lib/Particles/SmolderParticleSystem2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-SmolderParticleSystem2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-SmolderParticleSystem2D.o `test -f 'Lib/Particles/SmolderParticleSystem2D.cpp' || echo '$(srcdir)/'`Lib/Particles/SmolderParticleSystem2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/SmolderParticleSystem2D.cpp' object='Lib/Particles/netpanzer-SmolderParticleSystem2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-SmolderParticleSystem2D.o `test -f 'Lib/Particles/SmolderParticleSystem2D.cpp' || echo '$(srcdir)/'`Lib/Particles/SmolderParticleSystem2D.cpp

Lib/Particles/netpanzer-SmolderParticleSystem2D.obj: Lib/Particles/SmolderParticleSystem2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-SmolderParticleSystem2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-SmolderParticleSystem2D.obj `if test -f 'Lib/Particles/SmolderParticleSystem2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/SmolderParticleSystem2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/SmolderParticleSystem2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/SmolderParticleSystem2D.cpp' object='Lib/Particles/netpanzer-SmolderParticleSystem2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-SmolderParticleSystem2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-SmolderParticleSystem2D.obj `if test -f 'Lib/Particles/SmolderParticleSystem2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/SmolderParticleSystem2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/SmolderParticleSystem2D.cpp'; fi`

Lib/Particles/netpanzer-SnowParticle2D.o: Lib/Particles/SnowParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-SnowParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-SnowParticle2D.o `test -f 'Lib/Particles/SnowParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/SnowParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/SnowParticle2D.cpp' object='Lib/Particles/netpanzer-SnowParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-SnowParticle2D.o `test -f 'Lib/Particles/SnowParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/SnowParticle2D.cpp

Lib/Particles/netpanzer-SnowParticle2D.obj: Lib/Particles/SnowParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-SnowParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-SnowParticle2D.obj `if test -f 'Lib/Particles/SnowParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/SnowParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/SnowParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/SnowParticle2D.cpp' object='Lib/Particles/netpanzer-SnowParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-SnowParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-SnowParticle2D.obj `if test -f 'Lib/Particles/SnowParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/SnowParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/SnowParticle2D.cpp'; fi`

Lib/Particles/netpanzer-SnowParticleSystem2D.o: Lib/Particles/SnowParticleSystem2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-SnowParticleSystem2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-SnowParticleSystem2D.o `test -f 'Lib/Particles/SnowParticleSystem2D.cpp' || echo '$(srcdir)/'`Lib/Particles/SnowParticleSystem2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/SnowParticleSystem2D.cpp' object='Lib/Particles/netpanzer-SnowParticleSystem2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-SnowParticleSystem2D.o `test -f 'Lib/Particles/SnowParticleSystem2D.cpp' || echo '$(srcdir)/'`Lib/Particles/SnowParticleSystem2D.cpp

Lib/Particles/netpanzer-SnowParticleSystem2D.obj: Lib/Particles/SnowParticleSystem2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-SnowParticleSystem2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-SnowParticleSystem2D.obj `if test -f 'Lib/Particles/SnowParticleSystem2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/SnowParticleSystem2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/SnowParticleSystem2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/SnowParticleSystem2D.cpp' object='Lib/Particles/netpanzer-SnowParticleSystem2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-SnowParticleSystem2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-SnowParticleSystem2D.obj `if test -f 'Lib/Particles/SnowParticleSystem2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/SnowParticleSystem2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/SnowParticleSystem2D.cpp'; fi`

Lib/Particles/netpanzer-SparkParticle2D.o: Lib/Particles/SparkParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-SparkParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-SparkParticle2D.o `test -f 'Lib/Particles/SparkParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/SparkParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/SparkParticle2D.cpp' object='Lib/Particles/netpanzer-SparkParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-SparkParticle2D.o `test -f 'Lib/Particles/SparkParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/SparkParticle2D.cpp

Lib/Particles/netpanzer-SparkParticle2D.obj: Lib/Particles/SparkParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-SparkParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-SparkParticle2D.obj `if test -f 'Lib/Particles/SparkParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/SparkParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/SparkParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/SparkParticle2D.cpp' object='Lib/Particles/netpanzer-SparkParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-SparkParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-SparkParticle2D.obj `if test -f 'Lib/Particles/SparkParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/SparkParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/SparkParticle2D.cpp'; fi`

Lib/Particles/netpanzer-TemplateExplosionSystem.o: Lib/Particles/TemplateExplosionSystem.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-TemplateExplosionSystem.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.Tpo" \
	  -c -o Lib/Particles/netpanzer-TemplateExplosionSystem.o `test -f 'Lib/Particles/TemplateExplosionSystem.cpp' || echo '$(srcdir)/'`Lib/Particles/TemplateExplosionSystem.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/TemplateExplosionSystem.cpp' object='Lib/Particles/netpanzer-TemplateExplosionSystem.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-TemplateExplosionSystem.o `test -f 'Lib/Particles/TemplateExplosionSystem.cpp' || echo '$(srcdir)/'`Lib/Particles/TemplateExplosionSystem.cpp

Lib/Particles/netpanzer-TemplateExplosionSystem.obj: Lib/Particles/TemplateExplosionSystem.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-TemplateExplosionSystem.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.Tpo" \
	  -c -o Lib/Particles/netpanzer-TemplateExplosionSystem.obj `if test -f 'Lib/Particles/TemplateExplosionSystem.cpp'; then $(CYGPATH_W) 'Lib/Particles/TemplateExplosionSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/TemplateExplosionSystem.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/TemplateExplosionSystem.cpp' object='Lib/Particles/netpanzer-TemplateExplosionSystem.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-TemplateExplosionSystem.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-TemplateExplosionSystem.obj `if test -f 'Lib/Particles/TemplateExplosionSystem.cpp'; then $(CYGPATH_W) 'Lib/Particles/TemplateExplosionSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/TemplateExplosionSystem.cpp'; fi`

Lib/Particles/netpanzer-TemplateMuzzleSystem.o: Lib/Particles/TemplateMuzzleSystem.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-TemplateMuzzleSystem.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.Tpo" \
	  -c -o Lib/Particles/netpanzer-TemplateMuzzleSystem.o `test -f 'Lib/Particles/TemplateMuzzleSystem.cpp' || echo '$(srcdir)/'`Lib/Particles/TemplateMuzzleSystem.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/TemplateMuzzleSystem.cpp' object='Lib/Particles/netpanzer-TemplateMuzzleSystem.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-TemplateMuzzleSystem.o `test -f 'Lib/Particles/TemplateMuzzleSystem.cpp' || echo '$(srcdir)/'`Lib/Particles/TemplateMuzzleSystem.cpp

Lib/Particles/netpanzer-TemplateMuzzleSystem.obj: Lib/Particles/TemplateMuzzleSystem.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-TemplateMuzzleSystem.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.Tpo" \
	  -c -o Lib/Particles/netpanzer-TemplateMuzzleSystem.obj `if test -f 'Lib/Particles/TemplateMuzzleSystem.cpp'; then $(CYGPATH_W) 'Lib/Particles/TemplateMuzzleSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/TemplateMuzzleSystem.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/TemplateMuzzleSystem.cpp' object='Lib/Particles/netpanzer-TemplateMuzzleSystem.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-TemplateMuzzleSystem.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-TemplateMuzzleSystem.obj `if test -f 'Lib/Particles/TemplateMuzzleSystem.cpp'; then $(CYGPATH_W) 'Lib/Particles/TemplateMuzzleSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/TemplateMuzzleSystem.cpp'; fi`

Lib/Particles/netpanzer-TrajectoryParticle2D.o: Lib/Particles/TrajectoryParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-TrajectoryParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-TrajectoryParticle2D.o `test -f 'Lib/Particles/TrajectoryParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/TrajectoryParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/TrajectoryParticle2D.cpp' object='Lib/Particles/netpanzer-TrajectoryParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-TrajectoryParticle2D.o `test -f 'Lib/Particles/TrajectoryParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/TrajectoryParticle2D.cpp

Lib/Particles/netpanzer-TrajectoryParticle2D.obj: Lib/Particles/TrajectoryParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-TrajectoryParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-TrajectoryParticle2D.obj `if test -f 'Lib/Particles/TrajectoryParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/TrajectoryParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/TrajectoryParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/TrajectoryParticle2D.cpp' object='Lib/Particles/netpanzer-TrajectoryParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-TrajectoryParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-TrajectoryParticle2D.obj `if test -f 'Lib/Particles/TrajectoryParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/TrajectoryParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/TrajectoryParticle2D.cpp'; fi`

Lib/Particles/netpanzer-VectorPuffParticle2D.o: Lib/Particles/VectorPuffParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-VectorPuffParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-VectorPuffParticle2D.o `test -f 'Lib/Particles/VectorPuffParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/VectorPuffParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/VectorPuffParticle2D.cpp' object='Lib/Particles/netpanzer-VectorPuffParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-VectorPuffParticle2D.o `test -f 'Lib/Particles/VectorPuffParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/VectorPuffParticle2D.cpp

Lib/Particles/netpanzer-VectorPuffParticle2D.obj: Lib/Particles/VectorPuffParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-VectorPuffParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-VectorPuffParticle2D.obj `if test -f 'Lib/Particles/VectorPuffParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/VectorPuffParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/VectorPuffParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/VectorPuffParticle2D.cpp' object='Lib/Particles/netpanzer-VectorPuffParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-VectorPuffParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-VectorPuffParticle2D.obj `if test -f 'Lib/Particles/VectorPuffParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/VectorPuffParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/VectorPuffParticle2D.cpp'; fi`

Lib/Particles/netpanzer-WindParticle2D.o: Lib/Particles/WindParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-WindParticle2D.o -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-WindParticle2D.o `test -f 'Lib/Particles/WindParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/WindParticle2D.cpp; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/WindParticle2D.cpp' object='Lib/Particles/netpanzer-WindParticle2D.o' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-WindParticle2D.o `test -f 'Lib/Particles/WindParticle2D.cpp' || echo '$(srcdir)/'`Lib/Particles/WindParticle2D.cpp

Lib/Particles/netpanzer-WindParticle2D.obj: Lib/Particles/WindParticle2D.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Particles/netpanzer-WindParticle2D.obj -MD -MP -MF "Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.Tpo" \
	  -c -o Lib/Particles/netpanzer-WindParticle2D.obj `if test -f 'Lib/Particles/WindParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/WindParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/WindParticle2D.cpp'; fi`; \
	then mv "Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.Tpo" "Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.Po"; \
	else rm -f "Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.Tpo"; exit 1; \
	fi
#	source='Lib/Particles/WindParticle2D.cpp' object='Lib/Particles/netpanzer-WindParticle2D.obj' libtool=no \
#	depfile='Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.Po' tmpdepfile='Lib/Particles/$(DEPDIR)/netpanzer-WindParticle2D.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Particles/netpanzer-WindParticle2D.obj `if test -f 'Lib/Particles/WindParticle2D.cpp'; then $(CYGPATH_W) 'Lib/Particles/WindParticle2D.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Particles/WindParticle2D.cpp'; fi`

Lib/Types/netpanzer-fRect.o: Lib/Types/fRect.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Types/netpanzer-fRect.o -MD -MP -MF "Lib/Types/$(DEPDIR)/netpanzer-fRect.Tpo" \
	  -c -o Lib/Types/netpanzer-fRect.o `test -f 'Lib/Types/fRect.cpp' || echo '$(srcdir)/'`Lib/Types/fRect.cpp; \
	then mv "Lib/Types/$(DEPDIR)/netpanzer-fRect.Tpo" "Lib/Types/$(DEPDIR)/netpanzer-fRect.Po"; \
	else rm -f "Lib/Types/$(DEPDIR)/netpanzer-fRect.Tpo"; exit 1; \
	fi
#	source='Lib/Types/fRect.cpp' object='Lib/Types/netpanzer-fRect.o' libtool=no \
#	depfile='Lib/Types/$(DEPDIR)/netpanzer-fRect.Po' tmpdepfile='Lib/Types/$(DEPDIR)/netpanzer-fRect.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Types/netpanzer-fRect.o `test -f 'Lib/Types/fRect.cpp' || echo '$(srcdir)/'`Lib/Types/fRect.cpp

Lib/Types/netpanzer-fRect.obj: Lib/Types/fRect.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Types/netpanzer-fRect.obj -MD -MP -MF "Lib/Types/$(DEPDIR)/netpanzer-fRect.Tpo" \
	  -c -o Lib/Types/netpanzer-fRect.obj `if test -f 'Lib/Types/fRect.cpp'; then $(CYGPATH_W) 'Lib/Types/fRect.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Types/fRect.cpp'; fi`; \
	then mv "Lib/Types/$(DEPDIR)/netpanzer-fRect.Tpo" "Lib/Types/$(DEPDIR)/netpanzer-fRect.Po"; \
	else rm -f "Lib/Types/$(DEPDIR)/netpanzer-fRect.Tpo"; exit 1; \
	fi
#	source='Lib/Types/fRect.cpp' object='Lib/Types/netpanzer-fRect.obj' libtool=no \
#	depfile='Lib/Types/$(DEPDIR)/netpanzer-fRect.Po' tmpdepfile='Lib/Types/$(DEPDIR)/netpanzer-fRect.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Types/netpanzer-fRect.obj `if test -f 'Lib/Types/fRect.cpp'; then $(CYGPATH_W) 'Lib/Types/fRect.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Types/fRect.cpp'; fi`

Lib/Types/netpanzer-fXYZ.o: Lib/Types/fXYZ.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Types/netpanzer-fXYZ.o -MD -MP -MF "Lib/Types/$(DEPDIR)/netpanzer-fXYZ.Tpo" \
	  -c -o Lib/Types/netpanzer-fXYZ.o `test -f 'Lib/Types/fXYZ.cpp' || echo '$(srcdir)/'`Lib/Types/fXYZ.cpp; \
	then mv "Lib/Types/$(DEPDIR)/netpanzer-fXYZ.Tpo" "Lib/Types/$(DEPDIR)/netpanzer-fXYZ.Po"; \
	else rm -f "Lib/Types/$(DEPDIR)/netpanzer-fXYZ.Tpo"; exit 1; \
	fi
#	source='Lib/Types/fXYZ.cpp' object='Lib/Types/netpanzer-fXYZ.o' libtool=no \
#	depfile='Lib/Types/$(DEPDIR)/netpanzer-fXYZ.Po' tmpdepfile='Lib/Types/$(DEPDIR)/netpanzer-fXYZ.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Types/netpanzer-fXYZ.o `test -f 'Lib/Types/fXYZ.cpp' || echo '$(srcdir)/'`Lib/Types/fXYZ.cpp

Lib/Types/netpanzer-fXYZ.obj: Lib/Types/fXYZ.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Types/netpanzer-fXYZ.obj -MD -MP -MF "Lib/Types/$(DEPDIR)/netpanzer-fXYZ.Tpo" \
	  -c -o Lib/Types/netpanzer-fXYZ.obj `if test -f 'Lib/Types/fXYZ.cpp'; then $(CYGPATH_W) 'Lib/Types/fXYZ.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Types/fXYZ.cpp'; fi`; \
	then mv "Lib/Types/$(DEPDIR)/netpanzer-fXYZ.Tpo" "Lib/Types/$(DEPDIR)/netpanzer-fXYZ.Po"; \
	else rm -f "Lib/Types/$(DEPDIR)/netpanzer-fXYZ.Tpo"; exit 1; \
	fi
#	source='Lib/Types/fXYZ.cpp' object='Lib/Types/netpanzer-fXYZ.obj' libtool=no \
#	depfile='Lib/Types/$(DEPDIR)/netpanzer-fXYZ.Po' tmpdepfile='Lib/Types/$(DEPDIR)/netpanzer-fXYZ.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Types/netpanzer-fXYZ.obj `if test -f 'Lib/Types/fXYZ.cpp'; then $(CYGPATH_W) 'Lib/Types/fXYZ.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Types/fXYZ.cpp'; fi`

Lib/Types/netpanzer-iRect.o: Lib/Types/iRect.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Types/netpanzer-iRect.o -MD -MP -MF "Lib/Types/$(DEPDIR)/netpanzer-iRect.Tpo" \
	  -c -o Lib/Types/netpanzer-iRect.o `test -f 'Lib/Types/iRect.cpp' || echo '$(srcdir)/'`Lib/Types/iRect.cpp; \
	then mv "Lib/Types/$(DEPDIR)/netpanzer-iRect.Tpo" "Lib/Types/$(DEPDIR)/netpanzer-iRect.Po"; \
	else rm -f "Lib/Types/$(DEPDIR)/netpanzer-iRect.Tpo"; exit 1; \
	fi
#	source='Lib/Types/iRect.cpp' object='Lib/Types/netpanzer-iRect.o' libtool=no \
#	depfile='Lib/Types/$(DEPDIR)/netpanzer-iRect.Po' tmpdepfile='Lib/Types/$(DEPDIR)/netpanzer-iRect.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Types/netpanzer-iRect.o `test -f 'Lib/Types/iRect.cpp' || echo '$(srcdir)/'`Lib/Types/iRect.cpp

Lib/Types/netpanzer-iRect.obj: Lib/Types/iRect.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Types/netpanzer-iRect.obj -MD -MP -MF "Lib/Types/$(DEPDIR)/netpanzer-iRect.Tpo" \
	  -c -o Lib/Types/netpanzer-iRect.obj `if test -f 'Lib/Types/iRect.cpp'; then $(CYGPATH_W) 'Lib/Types/iRect.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Types/iRect.cpp'; fi`; \
	then mv "Lib/Types/$(DEPDIR)/netpanzer-iRect.Tpo" "Lib/Types/$(DEPDIR)/netpanzer-iRect.Po"; \
	else rm -f "Lib/Types/$(DEPDIR)/netpanzer-iRect.Tpo"; exit 1; \
	fi
#	source='Lib/Types/iRect.cpp' object='Lib/Types/netpanzer-iRect.obj' libtool=no \
#	depfile='Lib/Types/$(DEPDIR)/netpanzer-iRect.Po' tmpdepfile='Lib/Types/$(DEPDIR)/netpanzer-iRect.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Types/netpanzer-iRect.obj `if test -f 'Lib/Types/iRect.cpp'; then $(CYGPATH_W) 'Lib/Types/iRect.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Types/iRect.cpp'; fi`

Lib/Types/netpanzer-iXY.o: Lib/Types/iXY.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Types/netpanzer-iXY.o -MD -MP -MF "Lib/Types/$(DEPDIR)/netpanzer-iXY.Tpo" \
	  -c -o Lib/Types/netpanzer-iXY.o `test -f 'Lib/Types/iXY.cpp' || echo '$(srcdir)/'`Lib/Types/iXY.cpp; \
	then mv "Lib/Types/$(DEPDIR)/netpanzer-iXY.Tpo" "Lib/Types/$(DEPDIR)/netpanzer-iXY.Po"; \
	else rm -f "Lib/Types/$(DEPDIR)/netpanzer-iXY.Tpo"; exit 1; \
	fi
#	source='Lib/Types/iXY.cpp' object='Lib/Types/netpanzer-iXY.o' libtool=no \
#	depfile='Lib/Types/$(DEPDIR)/netpanzer-iXY.Po' tmpdepfile='Lib/Types/$(DEPDIR)/netpanzer-iXY.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Types/netpanzer-iXY.o `test -f 'Lib/Types/iXY.cpp' || echo '$(srcdir)/'`Lib/Types/iXY.cpp

Lib/Types/netpanzer-iXY.obj: Lib/Types/iXY.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Types/netpanzer-iXY.obj -MD -MP -MF "Lib/Types/$(DEPDIR)/netpanzer-iXY.Tpo" \
	  -c -o Lib/Types/netpanzer-iXY.obj `if test -f 'Lib/Types/iXY.cpp'; then $(CYGPATH_W) 'Lib/Types/iXY.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Types/iXY.cpp'; fi`; \
	then mv "Lib/Types/$(DEPDIR)/netpanzer-iXY.Tpo" "Lib/Types/$(DEPDIR)/netpanzer-iXY.Po"; \
	else rm -f "Lib/Types/$(DEPDIR)/netpanzer-iXY.Tpo"; exit 1; \
	fi
#	source='Lib/Types/iXY.cpp' object='Lib/Types/netpanzer-iXY.obj' libtool=no \
#	depfile='Lib/Types/$(DEPDIR)/netpanzer-iXY.Po' tmpdepfile='Lib/Types/$(DEPDIR)/netpanzer-iXY.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Types/netpanzer-iXY.obj `if test -f 'Lib/Types/iXY.cpp'; then $(CYGPATH_W) 'Lib/Types/iXY.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Types/iXY.cpp'; fi`

Lib/optionmm/netpanzer-option.o: Lib/optionmm/option.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/optionmm/netpanzer-option.o -MD -MP -MF "Lib/optionmm/$(DEPDIR)/netpanzer-option.Tpo" \
	  -c -o Lib/optionmm/netpanzer-option.o `test -f 'Lib/optionmm/option.cpp' || echo '$(srcdir)/'`Lib/optionmm/option.cpp; \
	then mv "Lib/optionmm/$(DEPDIR)/netpanzer-option.Tpo" "Lib/optionmm/$(DEPDIR)/netpanzer-option.Po"; \
	else rm -f "Lib/optionmm/$(DEPDIR)/netpanzer-option.Tpo"; exit 1; \
	fi
#	source='Lib/optionmm/option.cpp' object='Lib/optionmm/netpanzer-option.o' libtool=no \
#	depfile='Lib/optionmm/$(DEPDIR)/netpanzer-option.Po' tmpdepfile='Lib/optionmm/$(DEPDIR)/netpanzer-option.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/optionmm/netpanzer-option.o `test -f 'Lib/optionmm/option.cpp' || echo '$(srcdir)/'`Lib/optionmm/option.cpp

Lib/optionmm/netpanzer-option.obj: Lib/optionmm/option.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/optionmm/netpanzer-option.obj -MD -MP -MF "Lib/optionmm/$(DEPDIR)/netpanzer-option.Tpo" \
	  -c -o Lib/optionmm/netpanzer-option.obj `if test -f 'Lib/optionmm/option.cpp'; then $(CYGPATH_W) 'Lib/optionmm/option.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/optionmm/option.cpp'; fi`; \
	then mv "Lib/optionmm/$(DEPDIR)/netpanzer-option.Tpo" "Lib/optionmm/$(DEPDIR)/netpanzer-option.Po"; \
	else rm -f "Lib/optionmm/$(DEPDIR)/netpanzer-option.Tpo"; exit 1; \
	fi
#	source='Lib/optionmm/option.cpp' object='Lib/optionmm/netpanzer-option.obj' libtool=no \
#	depfile='Lib/optionmm/$(DEPDIR)/netpanzer-option.Po' tmpdepfile='Lib/optionmm/$(DEPDIR)/netpanzer-option.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/optionmm/netpanzer-option.obj `if test -f 'Lib/optionmm/option.cpp'; then $(CYGPATH_W) 'Lib/optionmm/option.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/optionmm/option.cpp'; fi`

Lib/optionmm/netpanzer-command_line.o: Lib/optionmm/command_line.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/optionmm/netpanzer-command_line.o -MD -MP -MF "Lib/optionmm/$(DEPDIR)/netpanzer-command_line.Tpo" \
	  -c -o Lib/optionmm/netpanzer-command_line.o `test -f 'Lib/optionmm/command_line.cpp' || echo '$(srcdir)/'`Lib/optionmm/command_line.cpp; \
	then mv "Lib/optionmm/$(DEPDIR)/netpanzer-command_line.Tpo" "Lib/optionmm/$(DEPDIR)/netpanzer-command_line.Po"; \
	else rm -f "Lib/optionmm/$(DEPDIR)/netpanzer-command_line.Tpo"; exit 1; \
	fi
#	source='Lib/optionmm/command_line.cpp' object='Lib/optionmm/netpanzer-command_line.o' libtool=no \
#	depfile='Lib/optionmm/$(DEPDIR)/netpanzer-command_line.Po' tmpdepfile='Lib/optionmm/$(DEPDIR)/netpanzer-command_line.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/optionmm/netpanzer-command_line.o `test -f 'Lib/optionmm/command_line.cpp' || echo '$(srcdir)/'`Lib/optionmm/command_line.cpp

Lib/optionmm/netpanzer-command_line.obj: Lib/optionmm/command_line.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/optionmm/netpanzer-command_line.obj -MD -MP -MF "Lib/optionmm/$(DEPDIR)/netpanzer-command_line.Tpo" \
	  -c -o Lib/optionmm/netpanzer-command_line.obj `if test -f 'Lib/optionmm/command_line.cpp'; then $(CYGPATH_W) 'Lib/optionmm/command_line.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/optionmm/command_line.cpp'; fi`; \
	then mv "Lib/optionmm/$(DEPDIR)/netpanzer-command_line.Tpo" "Lib/optionmm/$(DEPDIR)/netpanzer-command_line.Po"; \
	else rm -f "Lib/optionmm/$(DEPDIR)/netpanzer-command_line.Tpo"; exit 1; \
	fi
#	source='Lib/optionmm/command_line.cpp' object='Lib/optionmm/netpanzer-command_line.obj' libtool=no \
#	depfile='Lib/optionmm/$(DEPDIR)/netpanzer-command_line.Po' tmpdepfile='Lib/optionmm/$(DEPDIR)/netpanzer-command_line.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/optionmm/netpanzer-command_line.obj `if test -f 'Lib/optionmm/command_line.cpp'; then $(CYGPATH_W) 'Lib/optionmm/command_line.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/optionmm/command_line.cpp'; fi`

Lib/Xml/netpanzer-XmlConfig.o: Lib/Xml/XmlConfig.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Xml/netpanzer-XmlConfig.o -MD -MP -MF "Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.Tpo" \
	  -c -o Lib/Xml/netpanzer-XmlConfig.o `test -f 'Lib/Xml/XmlConfig.cpp' || echo '$(srcdir)/'`Lib/Xml/XmlConfig.cpp; \
	then mv "Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.Tpo" "Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.Po"; \
	else rm -f "Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.Tpo"; exit 1; \
	fi
#	source='Lib/Xml/XmlConfig.cpp' object='Lib/Xml/netpanzer-XmlConfig.o' libtool=no \
#	depfile='Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.Po' tmpdepfile='Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Xml/netpanzer-XmlConfig.o `test -f 'Lib/Xml/XmlConfig.cpp' || echo '$(srcdir)/'`Lib/Xml/XmlConfig.cpp

Lib/Xml/netpanzer-XmlConfig.obj: Lib/Xml/XmlConfig.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Xml/netpanzer-XmlConfig.obj -MD -MP -MF "Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.Tpo" \
	  -c -o Lib/Xml/netpanzer-XmlConfig.obj `if test -f 'Lib/Xml/XmlConfig.cpp'; then $(CYGPATH_W) 'Lib/Xml/XmlConfig.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Xml/XmlConfig.cpp'; fi`; \
	then mv "Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.Tpo" "Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.Po"; \
	else rm -f "Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.Tpo"; exit 1; \
	fi
#	source='Lib/Xml/XmlConfig.cpp' object='Lib/Xml/netpanzer-XmlConfig.obj' libtool=no \
#	depfile='Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.Po' tmpdepfile='Lib/Xml/$(DEPDIR)/netpanzer-XmlConfig.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Xml/netpanzer-XmlConfig.obj `if test -f 'Lib/Xml/XmlConfig.cpp'; then $(CYGPATH_W) 'Lib/Xml/XmlConfig.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Xml/XmlConfig.cpp'; fi`

Lib/Xml/netpanzer-XmlParser.o: Lib/Xml/XmlParser.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Xml/netpanzer-XmlParser.o -MD -MP -MF "Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.Tpo" \
	  -c -o Lib/Xml/netpanzer-XmlParser.o `test -f 'Lib/Xml/XmlParser.cpp' || echo '$(srcdir)/'`Lib/Xml/XmlParser.cpp; \
	then mv "Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.Tpo" "Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.Po"; \
	else rm -f "Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.Tpo"; exit 1; \
	fi
#	source='Lib/Xml/XmlParser.cpp' object='Lib/Xml/netpanzer-XmlParser.o' libtool=no \
#	depfile='Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.Po' tmpdepfile='Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Xml/netpanzer-XmlParser.o `test -f 'Lib/Xml/XmlParser.cpp' || echo '$(srcdir)/'`Lib/Xml/XmlParser.cpp

Lib/Xml/netpanzer-XmlParser.obj: Lib/Xml/XmlParser.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Xml/netpanzer-XmlParser.obj -MD -MP -MF "Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.Tpo" \
	  -c -o Lib/Xml/netpanzer-XmlParser.obj `if test -f 'Lib/Xml/XmlParser.cpp'; then $(CYGPATH_W) 'Lib/Xml/XmlParser.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Xml/XmlParser.cpp'; fi`; \
	then mv "Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.Tpo" "Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.Po"; \
	else rm -f "Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.Tpo"; exit 1; \
	fi
#	source='Lib/Xml/XmlParser.cpp' object='Lib/Xml/netpanzer-XmlParser.obj' libtool=no \
#	depfile='Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.Po' tmpdepfile='Lib/Xml/$(DEPDIR)/netpanzer-XmlParser.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Xml/netpanzer-XmlParser.obj `if test -f 'Lib/Xml/XmlParser.cpp'; then $(CYGPATH_W) 'Lib/Xml/XmlParser.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Xml/XmlParser.cpp'; fi`

Lib/Xml/netpanzer-XmlStore.o: Lib/Xml/XmlStore.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Xml/netpanzer-XmlStore.o -MD -MP -MF "Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.Tpo" \
	  -c -o Lib/Xml/netpanzer-XmlStore.o `test -f 'Lib/Xml/XmlStore.cpp' || echo '$(srcdir)/'`Lib/Xml/XmlStore.cpp; \
	then mv "Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.Tpo" "Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.Po"; \
	else rm -f "Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.Tpo"; exit 1; \
	fi
#	source='Lib/Xml/XmlStore.cpp' object='Lib/Xml/netpanzer-XmlStore.o' libtool=no \
#	depfile='Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.Po' tmpdepfile='Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Xml/netpanzer-XmlStore.o `test -f 'Lib/Xml/XmlStore.cpp' || echo '$(srcdir)/'`Lib/Xml/XmlStore.cpp

Lib/Xml/netpanzer-XmlStore.obj: Lib/Xml/XmlStore.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT Lib/Xml/netpanzer-XmlStore.obj -MD -MP -MF "Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.Tpo" \
	  -c -o Lib/Xml/netpanzer-XmlStore.obj `if test -f 'Lib/Xml/XmlStore.cpp'; then $(CYGPATH_W) 'Lib/Xml/XmlStore.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Xml/XmlStore.cpp'; fi`; \
	then mv "Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.Tpo" "Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.Po"; \
	else rm -f "Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.Tpo"; exit 1; \
	fi
#	source='Lib/Xml/XmlStore.cpp' object='Lib/Xml/netpanzer-XmlStore.obj' libtool=no \
#	depfile='Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.Po' tmpdepfile='Lib/Xml/$(DEPDIR)/netpanzer-XmlStore.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o Lib/Xml/netpanzer-XmlStore.obj `if test -f 'Lib/Xml/XmlStore.cpp'; then $(CYGPATH_W) 'Lib/Xml/XmlStore.cpp'; else $(CYGPATH_W) '$(srcdir)/Lib/Xml/XmlStore.cpp'; fi`

NetPanzer/Classes/AI/netpanzer-Astar.o: NetPanzer/Classes/AI/Astar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/AI/netpanzer-Astar.o -MD -MP -MF "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.Tpo" \
	  -c -o NetPanzer/Classes/AI/netpanzer-Astar.o `test -f 'NetPanzer/Classes/AI/Astar.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/AI/Astar.cpp; \
	then mv "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.Tpo" "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.Po"; \
	else rm -f "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/AI/Astar.cpp' object='NetPanzer/Classes/AI/netpanzer-Astar.o' libtool=no \
#	depfile='NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.Po' tmpdepfile='NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/AI/netpanzer-Astar.o `test -f 'NetPanzer/Classes/AI/Astar.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/AI/Astar.cpp

NetPanzer/Classes/AI/netpanzer-Astar.obj: NetPanzer/Classes/AI/Astar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/AI/netpanzer-Astar.obj -MD -MP -MF "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.Tpo" \
	  -c -o NetPanzer/Classes/AI/netpanzer-Astar.obj `if test -f 'NetPanzer/Classes/AI/Astar.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/AI/Astar.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/AI/Astar.cpp'; fi`; \
	then mv "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.Tpo" "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.Po"; \
	else rm -f "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/AI/Astar.cpp' object='NetPanzer/Classes/AI/netpanzer-Astar.obj' libtool=no \
#	depfile='NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.Po' tmpdepfile='NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-Astar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/AI/netpanzer-Astar.obj `if test -f 'NetPanzer/Classes/AI/Astar.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/AI/Astar.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/AI/Astar.cpp'; fi`

NetPanzer/Classes/AI/netpanzer-PathList.o: NetPanzer/Classes/AI/PathList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/AI/netpanzer-PathList.o -MD -MP -MF "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.Tpo" \
	  -c -o NetPanzer/Classes/AI/netpanzer-PathList.o `test -f 'NetPanzer/Classes/AI/PathList.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/AI/PathList.cpp; \
	then mv "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.Tpo" "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.Po"; \
	else rm -f "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/AI/PathList.cpp' object='NetPanzer/Classes/AI/netpanzer-PathList.o' libtool=no \
#	depfile='NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.Po' tmpdepfile='NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/AI/netpanzer-PathList.o `test -f 'NetPanzer/Classes/AI/PathList.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/AI/PathList.cpp

NetPanzer/Classes/AI/netpanzer-PathList.obj: NetPanzer/Classes/AI/PathList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/AI/netpanzer-PathList.obj -MD -MP -MF "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.Tpo" \
	  -c -o NetPanzer/Classes/AI/netpanzer-PathList.obj `if test -f 'NetPanzer/Classes/AI/PathList.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/AI/PathList.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/AI/PathList.cpp'; fi`; \
	then mv "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.Tpo" "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.Po"; \
	else rm -f "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/AI/PathList.cpp' object='NetPanzer/Classes/AI/netpanzer-PathList.obj' libtool=no \
#	depfile='NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.Po' tmpdepfile='NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathList.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/AI/netpanzer-PathList.obj `if test -f 'NetPanzer/Classes/AI/PathList.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/AI/PathList.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/AI/PathList.cpp'; fi`

NetPanzer/Classes/AI/netpanzer-PathingState.o: NetPanzer/Classes/AI/PathingState.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/AI/netpanzer-PathingState.o -MD -MP -MF "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.Tpo" \
	  -c -o NetPanzer/Classes/AI/netpanzer-PathingState.o `test -f 'NetPanzer/Classes/AI/PathingState.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/AI/PathingState.cpp; \
	then mv "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.Tpo" "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.Po"; \
	else rm -f "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/AI/PathingState.cpp' object='NetPanzer/Classes/AI/netpanzer-PathingState.o' libtool=no \
#	depfile='NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.Po' tmpdepfile='NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/AI/netpanzer-PathingState.o `test -f 'NetPanzer/Classes/AI/PathingState.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/AI/PathingState.cpp

NetPanzer/Classes/AI/netpanzer-PathingState.obj: NetPanzer/Classes/AI/PathingState.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/AI/netpanzer-PathingState.obj -MD -MP -MF "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.Tpo" \
	  -c -o NetPanzer/Classes/AI/netpanzer-PathingState.obj `if test -f 'NetPanzer/Classes/AI/PathingState.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/AI/PathingState.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/AI/PathingState.cpp'; fi`; \
	then mv "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.Tpo" "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.Po"; \
	else rm -f "NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/AI/PathingState.cpp' object='NetPanzer/Classes/AI/netpanzer-PathingState.obj' libtool=no \
#	depfile='NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.Po' tmpdepfile='NetPanzer/Classes/AI/$(DEPDIR)/netpanzer-PathingState.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/AI/netpanzer-PathingState.obj `if test -f 'NetPanzer/Classes/AI/PathingState.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/AI/PathingState.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/AI/PathingState.cpp'; fi`

NetPanzer/Classes/netpanzer-BonusUnitPowerUp.o: NetPanzer/Classes/BonusUnitPowerUp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-BonusUnitPowerUp.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-BonusUnitPowerUp.o `test -f 'NetPanzer/Classes/BonusUnitPowerUp.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/BonusUnitPowerUp.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/BonusUnitPowerUp.cpp' object='NetPanzer/Classes/netpanzer-BonusUnitPowerUp.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-BonusUnitPowerUp.o `test -f 'NetPanzer/Classes/BonusUnitPowerUp.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/BonusUnitPowerUp.cpp

NetPanzer/Classes/netpanzer-BonusUnitPowerUp.obj: NetPanzer/Classes/BonusUnitPowerUp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-BonusUnitPowerUp.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-BonusUnitPowerUp.obj `if test -f 'NetPanzer/Classes/BonusUnitPowerUp.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/BonusUnitPowerUp.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/BonusUnitPowerUp.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/BonusUnitPowerUp.cpp' object='NetPanzer/Classes/netpanzer-BonusUnitPowerUp.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-BonusUnitPowerUp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-BonusUnitPowerUp.obj `if test -f 'NetPanzer/Classes/BonusUnitPowerUp.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/BonusUnitPowerUp.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/BonusUnitPowerUp.cpp'; fi`

NetPanzer/Classes/netpanzer-DDHardSurface.o: NetPanzer/Classes/DDHardSurface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-DDHardSurface.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-DDHardSurface.o `test -f 'NetPanzer/Classes/DDHardSurface.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/DDHardSurface.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/DDHardSurface.cpp' object='NetPanzer/Classes/netpanzer-DDHardSurface.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-DDHardSurface.o `test -f 'NetPanzer/Classes/DDHardSurface.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/DDHardSurface.cpp

NetPanzer/Classes/netpanzer-DDHardSurface.obj: NetPanzer/Classes/DDHardSurface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-DDHardSurface.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-DDHardSurface.obj `if test -f 'NetPanzer/Classes/DDHardSurface.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/DDHardSurface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/DDHardSurface.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/DDHardSurface.cpp' object='NetPanzer/Classes/netpanzer-DDHardSurface.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-DDHardSurface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-DDHardSurface.obj `if test -f 'NetPanzer/Classes/DDHardSurface.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/DDHardSurface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/DDHardSurface.cpp'; fi`

NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.o: NetPanzer/Classes/EnemyRadarPowerUp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.o `test -f 'NetPanzer/Classes/EnemyRadarPowerUp.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/EnemyRadarPowerUp.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/EnemyRadarPowerUp.cpp' object='NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.o `test -f 'NetPanzer/Classes/EnemyRadarPowerUp.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/EnemyRadarPowerUp.cpp

NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.obj: NetPanzer/Classes/EnemyRadarPowerUp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.obj `if test -f 'NetPanzer/Classes/EnemyRadarPowerUp.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/EnemyRadarPowerUp.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/EnemyRadarPowerUp.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/EnemyRadarPowerUp.cpp' object='NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-EnemyRadarPowerUp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-EnemyRadarPowerUp.obj `if test -f 'NetPanzer/Classes/EnemyRadarPowerUp.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/EnemyRadarPowerUp.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/EnemyRadarPowerUp.cpp'; fi`

NetPanzer/Classes/netpanzer-Objective.o: NetPanzer/Classes/Objective.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-Objective.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-Objective.o `test -f 'NetPanzer/Classes/Objective.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Objective.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Objective.cpp' object='NetPanzer/Classes/netpanzer-Objective.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-Objective.o `test -f 'NetPanzer/Classes/Objective.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Objective.cpp

NetPanzer/Classes/netpanzer-Objective.obj: NetPanzer/Classes/Objective.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-Objective.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-Objective.obj `if test -f 'NetPanzer/Classes/Objective.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Objective.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Objective.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Objective.cpp' object='NetPanzer/Classes/netpanzer-Objective.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Objective.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-Objective.obj `if test -f 'NetPanzer/Classes/Objective.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Objective.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Objective.cpp'; fi`

NetPanzer/Classes/netpanzer-Outpost.o: NetPanzer/Classes/Outpost.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-Outpost.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-Outpost.o `test -f 'NetPanzer/Classes/Outpost.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Outpost.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Outpost.cpp' object='NetPanzer/Classes/netpanzer-Outpost.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-Outpost.o `test -f 'NetPanzer/Classes/Outpost.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Outpost.cpp

NetPanzer/Classes/netpanzer-Outpost.obj: NetPanzer/Classes/Outpost.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-Outpost.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-Outpost.obj `if test -f 'NetPanzer/Classes/Outpost.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Outpost.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Outpost.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Outpost.cpp' object='NetPanzer/Classes/netpanzer-Outpost.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Outpost.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-Outpost.obj `if test -f 'NetPanzer/Classes/Outpost.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Outpost.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Outpost.cpp'; fi`

NetPanzer/Classes/netpanzer-PlacementMatrix.o: NetPanzer/Classes/PlacementMatrix.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-PlacementMatrix.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-PlacementMatrix.o `test -f 'NetPanzer/Classes/PlacementMatrix.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/PlacementMatrix.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/PlacementMatrix.cpp' object='NetPanzer/Classes/netpanzer-PlacementMatrix.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-PlacementMatrix.o `test -f 'NetPanzer/Classes/PlacementMatrix.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/PlacementMatrix.cpp

NetPanzer/Classes/netpanzer-PlacementMatrix.obj: NetPanzer/Classes/PlacementMatrix.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-PlacementMatrix.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-PlacementMatrix.obj `if test -f 'NetPanzer/Classes/PlacementMatrix.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/PlacementMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/PlacementMatrix.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/PlacementMatrix.cpp' object='NetPanzer/Classes/netpanzer-PlacementMatrix.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlacementMatrix.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-PlacementMatrix.obj `if test -f 'NetPanzer/Classes/PlacementMatrix.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/PlacementMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/PlacementMatrix.cpp'; fi`

NetPanzer/Classes/netpanzer-PlayerID.o: NetPanzer/Classes/PlayerID.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-PlayerID.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-PlayerID.o `test -f 'NetPanzer/Classes/PlayerID.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/PlayerID.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/PlayerID.cpp' object='NetPanzer/Classes/netpanzer-PlayerID.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-PlayerID.o `test -f 'NetPanzer/Classes/PlayerID.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/PlayerID.cpp

NetPanzer/Classes/netpanzer-PlayerID.obj: NetPanzer/Classes/PlayerID.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-PlayerID.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-PlayerID.obj `if test -f 'NetPanzer/Classes/PlayerID.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/PlayerID.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/PlayerID.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/PlayerID.cpp' object='NetPanzer/Classes/netpanzer-PlayerID.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerID.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-PlayerID.obj `if test -f 'NetPanzer/Classes/PlayerID.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/PlayerID.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/PlayerID.cpp'; fi`

NetPanzer/Classes/netpanzer-PlayerState.o: NetPanzer/Classes/PlayerState.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-PlayerState.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-PlayerState.o `test -f 'NetPanzer/Classes/PlayerState.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/PlayerState.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/PlayerState.cpp' object='NetPanzer/Classes/netpanzer-PlayerState.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-PlayerState.o `test -f 'NetPanzer/Classes/PlayerState.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/PlayerState.cpp

NetPanzer/Classes/netpanzer-PlayerState.obj: NetPanzer/Classes/PlayerState.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-PlayerState.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-PlayerState.obj `if test -f 'NetPanzer/Classes/PlayerState.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/PlayerState.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/PlayerState.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/PlayerState.cpp' object='NetPanzer/Classes/netpanzer-PlayerState.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerState.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-PlayerState.obj `if test -f 'NetPanzer/Classes/PlayerState.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/PlayerState.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/PlayerState.cpp'; fi`

NetPanzer/Classes/netpanzer-PlayerUnitConfig.o: NetPanzer/Classes/PlayerUnitConfig.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-PlayerUnitConfig.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-PlayerUnitConfig.o `test -f 'NetPanzer/Classes/PlayerUnitConfig.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/PlayerUnitConfig.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/PlayerUnitConfig.cpp' object='NetPanzer/Classes/netpanzer-PlayerUnitConfig.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-PlayerUnitConfig.o `test -f 'NetPanzer/Classes/PlayerUnitConfig.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/PlayerUnitConfig.cpp

NetPanzer/Classes/netpanzer-PlayerUnitConfig.obj: NetPanzer/Classes/PlayerUnitConfig.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-PlayerUnitConfig.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-PlayerUnitConfig.obj `if test -f 'NetPanzer/Classes/PlayerUnitConfig.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/PlayerUnitConfig.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/PlayerUnitConfig.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/PlayerUnitConfig.cpp' object='NetPanzer/Classes/netpanzer-PlayerUnitConfig.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PlayerUnitConfig.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-PlayerUnitConfig.obj `if test -f 'NetPanzer/Classes/PlayerUnitConfig.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/PlayerUnitConfig.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/PlayerUnitConfig.cpp'; fi`

NetPanzer/Classes/netpanzer-PowerUp.o: NetPanzer/Classes/PowerUp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-PowerUp.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-PowerUp.o `test -f 'NetPanzer/Classes/PowerUp.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/PowerUp.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/PowerUp.cpp' object='NetPanzer/Classes/netpanzer-PowerUp.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-PowerUp.o `test -f 'NetPanzer/Classes/PowerUp.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/PowerUp.cpp

NetPanzer/Classes/netpanzer-PowerUp.obj: NetPanzer/Classes/PowerUp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-PowerUp.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-PowerUp.obj `if test -f 'NetPanzer/Classes/PowerUp.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/PowerUp.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/PowerUp.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/PowerUp.cpp' object='NetPanzer/Classes/netpanzer-PowerUp.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-PowerUp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-PowerUp.obj `if test -f 'NetPanzer/Classes/PowerUp.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/PowerUp.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/PowerUp.cpp'; fi`

NetPanzer/Classes/netpanzer-Projectile.o: NetPanzer/Classes/Projectile.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-Projectile.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-Projectile.o `test -f 'NetPanzer/Classes/Projectile.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Projectile.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Projectile.cpp' object='NetPanzer/Classes/netpanzer-Projectile.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-Projectile.o `test -f 'NetPanzer/Classes/Projectile.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Projectile.cpp

NetPanzer/Classes/netpanzer-Projectile.obj: NetPanzer/Classes/Projectile.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-Projectile.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-Projectile.obj `if test -f 'NetPanzer/Classes/Projectile.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Projectile.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Projectile.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Projectile.cpp' object='NetPanzer/Classes/netpanzer-Projectile.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Projectile.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-Projectile.obj `if test -f 'NetPanzer/Classes/Projectile.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Projectile.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Projectile.cpp'; fi`

NetPanzer/Classes/netpanzer-SelectionBoxSprite.o: NetPanzer/Classes/SelectionBoxSprite.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-SelectionBoxSprite.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-SelectionBoxSprite.o `test -f 'NetPanzer/Classes/SelectionBoxSprite.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/SelectionBoxSprite.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/SelectionBoxSprite.cpp' object='NetPanzer/Classes/netpanzer-SelectionBoxSprite.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-SelectionBoxSprite.o `test -f 'NetPanzer/Classes/SelectionBoxSprite.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/SelectionBoxSprite.cpp

NetPanzer/Classes/netpanzer-SelectionBoxSprite.obj: NetPanzer/Classes/SelectionBoxSprite.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-SelectionBoxSprite.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-SelectionBoxSprite.obj `if test -f 'NetPanzer/Classes/SelectionBoxSprite.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/SelectionBoxSprite.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/SelectionBoxSprite.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/SelectionBoxSprite.cpp' object='NetPanzer/Classes/netpanzer-SelectionBoxSprite.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionBoxSprite.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-SelectionBoxSprite.obj `if test -f 'NetPanzer/Classes/SelectionBoxSprite.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/SelectionBoxSprite.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/SelectionBoxSprite.cpp'; fi`

NetPanzer/Classes/netpanzer-SelectionList.o: NetPanzer/Classes/SelectionList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-SelectionList.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-SelectionList.o `test -f 'NetPanzer/Classes/SelectionList.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/SelectionList.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/SelectionList.cpp' object='NetPanzer/Classes/netpanzer-SelectionList.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-SelectionList.o `test -f 'NetPanzer/Classes/SelectionList.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/SelectionList.cpp

NetPanzer/Classes/netpanzer-SelectionList.obj: NetPanzer/Classes/SelectionList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-SelectionList.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-SelectionList.obj `if test -f 'NetPanzer/Classes/SelectionList.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/SelectionList.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/SelectionList.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/SelectionList.cpp' object='NetPanzer/Classes/netpanzer-SelectionList.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SelectionList.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-SelectionList.obj `if test -f 'NetPanzer/Classes/SelectionList.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/SelectionList.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/SelectionList.cpp'; fi`

NetPanzer/Classes/netpanzer-SpawnList.o: NetPanzer/Classes/SpawnList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-SpawnList.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-SpawnList.o `test -f 'NetPanzer/Classes/SpawnList.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/SpawnList.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/SpawnList.cpp' object='NetPanzer/Classes/netpanzer-SpawnList.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-SpawnList.o `test -f 'NetPanzer/Classes/SpawnList.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/SpawnList.cpp

NetPanzer/Classes/netpanzer-SpawnList.obj: NetPanzer/Classes/SpawnList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-SpawnList.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-SpawnList.obj `if test -f 'NetPanzer/Classes/SpawnList.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/SpawnList.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/SpawnList.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/SpawnList.cpp' object='NetPanzer/Classes/netpanzer-SpawnList.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SpawnList.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-SpawnList.obj `if test -f 'NetPanzer/Classes/SpawnList.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/SpawnList.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/SpawnList.cpp'; fi`

NetPanzer/Classes/netpanzer-Sprite.o: NetPanzer/Classes/Sprite.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-Sprite.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-Sprite.o `test -f 'NetPanzer/Classes/Sprite.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Sprite.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Sprite.cpp' object='NetPanzer/Classes/netpanzer-Sprite.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-Sprite.o `test -f 'NetPanzer/Classes/Sprite.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Sprite.cpp

NetPanzer/Classes/netpanzer-Sprite.obj: NetPanzer/Classes/Sprite.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-Sprite.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-Sprite.obj `if test -f 'NetPanzer/Classes/Sprite.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Sprite.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Sprite.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Sprite.cpp' object='NetPanzer/Classes/netpanzer-Sprite.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Sprite.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-Sprite.obj `if test -f 'NetPanzer/Classes/Sprite.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Sprite.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Sprite.cpp'; fi`

NetPanzer/Classes/netpanzer-SpriteSorter.o: NetPanzer/Classes/SpriteSorter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-SpriteSorter.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-SpriteSorter.o `test -f 'NetPanzer/Classes/SpriteSorter.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/SpriteSorter.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/SpriteSorter.cpp' object='NetPanzer/Classes/netpanzer-SpriteSorter.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-SpriteSorter.o `test -f 'NetPanzer/Classes/SpriteSorter.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/SpriteSorter.cpp

NetPanzer/Classes/netpanzer-SpriteSorter.obj: NetPanzer/Classes/SpriteSorter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-SpriteSorter.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-SpriteSorter.obj `if test -f 'NetPanzer/Classes/SpriteSorter.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/SpriteSorter.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/SpriteSorter.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/SpriteSorter.cpp' object='NetPanzer/Classes/netpanzer-SpriteSorter.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-SpriteSorter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-SpriteSorter.obj `if test -f 'NetPanzer/Classes/SpriteSorter.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/SpriteSorter.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/SpriteSorter.cpp'; fi`

NetPanzer/Classes/netpanzer-TileEngine.o: NetPanzer/Classes/TileEngine.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-TileEngine.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-TileEngine.o `test -f 'NetPanzer/Classes/TileEngine.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/TileEngine.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/TileEngine.cpp' object='NetPanzer/Classes/netpanzer-TileEngine.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-TileEngine.o `test -f 'NetPanzer/Classes/TileEngine.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/TileEngine.cpp

NetPanzer/Classes/netpanzer-TileEngine.obj: NetPanzer/Classes/TileEngine.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-TileEngine.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-TileEngine.obj `if test -f 'NetPanzer/Classes/TileEngine.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/TileEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/TileEngine.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/TileEngine.cpp' object='NetPanzer/Classes/netpanzer-TileEngine.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-TileEngine.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-TileEngine.obj `if test -f 'NetPanzer/Classes/TileEngine.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/TileEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/TileEngine.cpp'; fi`

NetPanzer/Classes/netpanzer-TileSet.o: NetPanzer/Classes/TileSet.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-TileSet.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-TileSet.o `test -f 'NetPanzer/Classes/TileSet.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/TileSet.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/TileSet.cpp' object='NetPanzer/Classes/netpanzer-TileSet.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-TileSet.o `test -f 'NetPanzer/Classes/TileSet.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/TileSet.cpp

NetPanzer/Classes/netpanzer-TileSet.obj: NetPanzer/Classes/TileSet.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-TileSet.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-TileSet.obj `if test -f 'NetPanzer/Classes/TileSet.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/TileSet.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/TileSet.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/TileSet.cpp' object='NetPanzer/Classes/netpanzer-TileSet.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-TileSet.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-TileSet.obj `if test -f 'NetPanzer/Classes/TileSet.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/TileSet.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/TileSet.cpp'; fi`

NetPanzer/Classes/netpanzer-Unit.o: NetPanzer/Classes/Unit.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-Unit.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-Unit.o `test -f 'NetPanzer/Classes/Unit.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Unit.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Unit.cpp' object='NetPanzer/Classes/netpanzer-Unit.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-Unit.o `test -f 'NetPanzer/Classes/Unit.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Unit.cpp

NetPanzer/Classes/netpanzer-Unit.obj: NetPanzer/Classes/Unit.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-Unit.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-Unit.obj `if test -f 'NetPanzer/Classes/Unit.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Unit.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Unit.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Unit.cpp' object='NetPanzer/Classes/netpanzer-Unit.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-Unit.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-Unit.obj `if test -f 'NetPanzer/Classes/Unit.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Unit.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Unit.cpp'; fi`

NetPanzer/Classes/netpanzer-UnitBlackBoard.o: NetPanzer/Classes/UnitBlackBoard.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitBlackBoard.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitBlackBoard.o `test -f 'NetPanzer/Classes/UnitBlackBoard.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitBlackBoard.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitBlackBoard.cpp' object='NetPanzer/Classes/netpanzer-UnitBlackBoard.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitBlackBoard.o `test -f 'NetPanzer/Classes/UnitBlackBoard.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitBlackBoard.cpp

NetPanzer/Classes/netpanzer-UnitBlackBoard.obj: NetPanzer/Classes/UnitBlackBoard.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitBlackBoard.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitBlackBoard.obj `if test -f 'NetPanzer/Classes/UnitBlackBoard.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitBlackBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitBlackBoard.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitBlackBoard.cpp' object='NetPanzer/Classes/netpanzer-UnitBlackBoard.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBlackBoard.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitBlackBoard.obj `if test -f 'NetPanzer/Classes/UnitBlackBoard.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitBlackBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitBlackBoard.cpp'; fi`

NetPanzer/Classes/netpanzer-UnitBucketArray.o: NetPanzer/Classes/UnitBucketArray.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitBucketArray.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitBucketArray.o `test -f 'NetPanzer/Classes/UnitBucketArray.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitBucketArray.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitBucketArray.cpp' object='NetPanzer/Classes/netpanzer-UnitBucketArray.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitBucketArray.o `test -f 'NetPanzer/Classes/UnitBucketArray.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitBucketArray.cpp

NetPanzer/Classes/netpanzer-UnitBucketArray.obj: NetPanzer/Classes/UnitBucketArray.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitBucketArray.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitBucketArray.obj `if test -f 'NetPanzer/Classes/UnitBucketArray.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitBucketArray.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitBucketArray.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitBucketArray.cpp' object='NetPanzer/Classes/netpanzer-UnitBucketArray.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitBucketArray.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitBucketArray.obj `if test -f 'NetPanzer/Classes/UnitBucketArray.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitBucketArray.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitBucketArray.cpp'; fi`

NetPanzer/Classes/netpanzer-UnitList.o: NetPanzer/Classes/UnitList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitList.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitList.o `test -f 'NetPanzer/Classes/UnitList.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitList.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitList.cpp' object='NetPanzer/Classes/netpanzer-UnitList.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitList.o `test -f 'NetPanzer/Classes/UnitList.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitList.cpp

NetPanzer/Classes/netpanzer-UnitList.obj: NetPanzer/Classes/UnitList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitList.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitList.obj `if test -f 'NetPanzer/Classes/UnitList.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitList.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitList.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitList.cpp' object='NetPanzer/Classes/netpanzer-UnitList.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitList.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitList.obj `if test -f 'NetPanzer/Classes/UnitList.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitList.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitList.cpp'; fi`

NetPanzer/Classes/netpanzer-UnitMessage.o: NetPanzer/Classes/UnitMessage.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitMessage.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitMessage.o `test -f 'NetPanzer/Classes/UnitMessage.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitMessage.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitMessage.cpp' object='NetPanzer/Classes/netpanzer-UnitMessage.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitMessage.o `test -f 'NetPanzer/Classes/UnitMessage.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitMessage.cpp

NetPanzer/Classes/netpanzer-UnitMessage.obj: NetPanzer/Classes/UnitMessage.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitMessage.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitMessage.obj `if test -f 'NetPanzer/Classes/UnitMessage.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitMessage.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitMessage.cpp' object='NetPanzer/Classes/netpanzer-UnitMessage.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitMessage.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitMessage.obj `if test -f 'NetPanzer/Classes/UnitMessage.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitMessage.cpp'; fi`

NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.o: NetPanzer/Classes/UnitOpcodeEncoder.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.o `test -f 'NetPanzer/Classes/UnitOpcodeEncoder.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitOpcodeEncoder.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitOpcodeEncoder.cpp' object='NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.o `test -f 'NetPanzer/Classes/UnitOpcodeEncoder.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitOpcodeEncoder.cpp

NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.obj: NetPanzer/Classes/UnitOpcodeEncoder.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.obj `if test -f 'NetPanzer/Classes/UnitOpcodeEncoder.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitOpcodeEncoder.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitOpcodeEncoder.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitOpcodeEncoder.cpp' object='NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitOpcodeEncoder.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitOpcodeEncoder.obj `if test -f 'NetPanzer/Classes/UnitOpcodeEncoder.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitOpcodeEncoder.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitOpcodeEncoder.cpp'; fi`

NetPanzer/Classes/netpanzer-UnitPowerUp.o: NetPanzer/Classes/UnitPowerUp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitPowerUp.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitPowerUp.o `test -f 'NetPanzer/Classes/UnitPowerUp.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitPowerUp.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitPowerUp.cpp' object='NetPanzer/Classes/netpanzer-UnitPowerUp.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitPowerUp.o `test -f 'NetPanzer/Classes/UnitPowerUp.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitPowerUp.cpp

NetPanzer/Classes/netpanzer-UnitPowerUp.obj: NetPanzer/Classes/UnitPowerUp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitPowerUp.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitPowerUp.obj `if test -f 'NetPanzer/Classes/UnitPowerUp.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitPowerUp.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitPowerUp.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitPowerUp.cpp' object='NetPanzer/Classes/netpanzer-UnitPowerUp.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitPowerUp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitPowerUp.obj `if test -f 'NetPanzer/Classes/UnitPowerUp.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitPowerUp.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitPowerUp.cpp'; fi`

NetPanzer/Classes/netpanzer-UnitState.o: NetPanzer/Classes/UnitState.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitState.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitState.o `test -f 'NetPanzer/Classes/UnitState.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitState.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitState.cpp' object='NetPanzer/Classes/netpanzer-UnitState.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitState.o `test -f 'NetPanzer/Classes/UnitState.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/UnitState.cpp

NetPanzer/Classes/netpanzer-UnitState.obj: NetPanzer/Classes/UnitState.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-UnitState.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-UnitState.obj `if test -f 'NetPanzer/Classes/UnitState.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitState.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitState.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/UnitState.cpp' object='NetPanzer/Classes/netpanzer-UnitState.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-UnitState.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-UnitState.obj `if test -f 'NetPanzer/Classes/UnitState.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/UnitState.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/UnitState.cpp'; fi`

NetPanzer/Classes/netpanzer-ViewCamera.o: NetPanzer/Classes/ViewCamera.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-ViewCamera.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-ViewCamera.o `test -f 'NetPanzer/Classes/ViewCamera.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/ViewCamera.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/ViewCamera.cpp' object='NetPanzer/Classes/netpanzer-ViewCamera.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-ViewCamera.o `test -f 'NetPanzer/Classes/ViewCamera.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/ViewCamera.cpp

NetPanzer/Classes/netpanzer-ViewCamera.obj: NetPanzer/Classes/ViewCamera.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-ViewCamera.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-ViewCamera.obj `if test -f 'NetPanzer/Classes/ViewCamera.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/ViewCamera.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/ViewCamera.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/ViewCamera.cpp' object='NetPanzer/Classes/netpanzer-ViewCamera.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-ViewCamera.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-ViewCamera.obj `if test -f 'NetPanzer/Classes/ViewCamera.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/ViewCamera.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/ViewCamera.cpp'; fi`

NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.o: NetPanzer/Classes/WorldInputCmdProcessor.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.o `test -f 'NetPanzer/Classes/WorldInputCmdProcessor.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/WorldInputCmdProcessor.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/WorldInputCmdProcessor.cpp' object='NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.o `test -f 'NetPanzer/Classes/WorldInputCmdProcessor.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/WorldInputCmdProcessor.cpp

NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.obj: NetPanzer/Classes/WorldInputCmdProcessor.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.obj `if test -f 'NetPanzer/Classes/WorldInputCmdProcessor.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/WorldInputCmdProcessor.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/WorldInputCmdProcessor.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/WorldInputCmdProcessor.cpp' object='NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldInputCmdProcessor.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-WorldInputCmdProcessor.obj `if test -f 'NetPanzer/Classes/WorldInputCmdProcessor.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/WorldInputCmdProcessor.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/WorldInputCmdProcessor.cpp'; fi`

NetPanzer/Classes/netpanzer-WorldMap.o: NetPanzer/Classes/WorldMap.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-WorldMap.o -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-WorldMap.o `test -f 'NetPanzer/Classes/WorldMap.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/WorldMap.cpp; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/WorldMap.cpp' object='NetPanzer/Classes/netpanzer-WorldMap.o' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-WorldMap.o `test -f 'NetPanzer/Classes/WorldMap.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/WorldMap.cpp

NetPanzer/Classes/netpanzer-WorldMap.obj: NetPanzer/Classes/WorldMap.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/netpanzer-WorldMap.obj -MD -MP -MF "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.Tpo" \
	  -c -o NetPanzer/Classes/netpanzer-WorldMap.obj `if test -f 'NetPanzer/Classes/WorldMap.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/WorldMap.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/WorldMap.cpp'; fi`; \
	then mv "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.Tpo" "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.Po"; \
	else rm -f "NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/WorldMap.cpp' object='NetPanzer/Classes/netpanzer-WorldMap.obj' libtool=no \
#	depfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.Po' tmpdepfile='NetPanzer/Classes/$(DEPDIR)/netpanzer-WorldMap.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/netpanzer-WorldMap.obj `if test -f 'NetPanzer/Classes/WorldMap.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/WorldMap.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/WorldMap.cpp'; fi`

NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.o: NetPanzer/Classes/Network/ClientConnectDaemon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.o -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.o `test -f 'NetPanzer/Classes/Network/ClientConnectDaemon.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/ClientConnectDaemon.cpp; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/ClientConnectDaemon.cpp' object='NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.o' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.o `test -f 'NetPanzer/Classes/Network/ClientConnectDaemon.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/ClientConnectDaemon.cpp

NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.obj: NetPanzer/Classes/Network/ClientConnectDaemon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.obj -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.obj `if test -f 'NetPanzer/Classes/Network/ClientConnectDaemon.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/ClientConnectDaemon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/ClientConnectDaemon.cpp'; fi`; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/ClientConnectDaemon.cpp' object='NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.obj' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientConnectDaemon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-ClientConnectDaemon.obj `if test -f 'NetPanzer/Classes/Network/ClientConnectDaemon.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/ClientConnectDaemon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/ClientConnectDaemon.cpp'; fi`

NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.o: NetPanzer/Classes/Network/ClientMessageRouter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.o -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.o `test -f 'NetPanzer/Classes/Network/ClientMessageRouter.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/ClientMessageRouter.cpp; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/ClientMessageRouter.cpp' object='NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.o' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.o `test -f 'NetPanzer/Classes/Network/ClientMessageRouter.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/ClientMessageRouter.cpp

NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.obj: NetPanzer/Classes/Network/ClientMessageRouter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.obj -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.obj `if test -f 'NetPanzer/Classes/Network/ClientMessageRouter.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/ClientMessageRouter.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/ClientMessageRouter.cpp'; fi`; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/ClientMessageRouter.cpp' object='NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.obj' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ClientMessageRouter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-ClientMessageRouter.obj `if test -f 'NetPanzer/Classes/Network/ClientMessageRouter.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/ClientMessageRouter.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/ClientMessageRouter.cpp'; fi`

NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.o: NetPanzer/Classes/Network/NetMessageEncoder.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.o -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.o `test -f 'NetPanzer/Classes/Network/NetMessageEncoder.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/NetMessageEncoder.cpp; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/NetMessageEncoder.cpp' object='NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.o' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.o `test -f 'NetPanzer/Classes/Network/NetMessageEncoder.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/NetMessageEncoder.cpp

NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.obj: NetPanzer/Classes/Network/NetMessageEncoder.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.obj -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.obj `if test -f 'NetPanzer/Classes/Network/NetMessageEncoder.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/NetMessageEncoder.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/NetMessageEncoder.cpp'; fi`; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/NetMessageEncoder.cpp' object='NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.obj' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetMessageEncoder.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-NetMessageEncoder.obj `if test -f 'NetPanzer/Classes/Network/NetMessageEncoder.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/NetMessageEncoder.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/NetMessageEncoder.cpp'; fi`

NetPanzer/Classes/Network/netpanzer-NetPacketQueues.o: NetPanzer/Classes/Network/NetPacketQueues.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-NetPacketQueues.o -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-NetPacketQueues.o `test -f 'NetPanzer/Classes/Network/NetPacketQueues.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/NetPacketQueues.cpp; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/NetPacketQueues.cpp' object='NetPanzer/Classes/Network/netpanzer-NetPacketQueues.o' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-NetPacketQueues.o `test -f 'NetPanzer/Classes/Network/NetPacketQueues.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/NetPacketQueues.cpp

NetPanzer/Classes/Network/netpanzer-NetPacketQueues.obj: NetPanzer/Classes/Network/NetPacketQueues.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-NetPacketQueues.obj -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-NetPacketQueues.obj `if test -f 'NetPanzer/Classes/Network/NetPacketQueues.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/NetPacketQueues.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/NetPacketQueues.cpp'; fi`; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/NetPacketQueues.cpp' object='NetPanzer/Classes/Network/netpanzer-NetPacketQueues.obj' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetPacketQueues.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-NetPacketQueues.obj `if test -f 'NetPanzer/Classes/Network/NetPacketQueues.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/NetPacketQueues.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/NetPacketQueues.cpp'; fi`

NetPanzer/Classes/Network/netpanzer-NetworkClient.o: NetPanzer/Classes/Network/NetworkClient.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-NetworkClient.o -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-NetworkClient.o `test -f 'NetPanzer/Classes/Network/NetworkClient.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/NetworkClient.cpp; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/NetworkClient.cpp' object='NetPanzer/Classes/Network/netpanzer-NetworkClient.o' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-NetworkClient.o `test -f 'NetPanzer/Classes/Network/NetworkClient.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/NetworkClient.cpp

NetPanzer/Classes/Network/netpanzer-NetworkClient.obj: NetPanzer/Classes/Network/NetworkClient.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-NetworkClient.obj -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-NetworkClient.obj `if test -f 'NetPanzer/Classes/Network/NetworkClient.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/NetworkClient.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/NetworkClient.cpp'; fi`; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/NetworkClient.cpp' object='NetPanzer/Classes/Network/netpanzer-NetworkClient.obj' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkClient.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-NetworkClient.obj `if test -f 'NetPanzer/Classes/Network/NetworkClient.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/NetworkClient.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/NetworkClient.cpp'; fi`

NetPanzer/Classes/Network/netpanzer-NetworkInterface.o: NetPanzer/Classes/Network/NetworkInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-NetworkInterface.o -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-NetworkInterface.o `test -f 'NetPanzer/Classes/Network/NetworkInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/NetworkInterface.cpp; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/NetworkInterface.cpp' object='NetPanzer/Classes/Network/netpanzer-NetworkInterface.o' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-NetworkInterface.o `test -f 'NetPanzer/Classes/Network/NetworkInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/NetworkInterface.cpp

NetPanzer/Classes/Network/netpanzer-NetworkInterface.obj: NetPanzer/Classes/Network/NetworkInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-NetworkInterface.obj -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-NetworkInterface.obj `if test -f 'NetPanzer/Classes/Network/NetworkInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/NetworkInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/NetworkInterface.cpp'; fi`; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/NetworkInterface.cpp' object='NetPanzer/Classes/Network/netpanzer-NetworkInterface.obj' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-NetworkInterface.obj `if test -f 'NetPanzer/Classes/Network/NetworkInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/NetworkInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/NetworkInterface.cpp'; fi`

NetPanzer/Classes/Network/netpanzer-NetworkServer.o: NetPanzer/Classes/Network/NetworkServer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-NetworkServer.o -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-NetworkServer.o `test -f 'NetPanzer/Classes/Network/NetworkServer.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/NetworkServer.cpp; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/NetworkServer.cpp' object='NetPanzer/Classes/Network/netpanzer-NetworkServer.o' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-NetworkServer.o `test -f 'NetPanzer/Classes/Network/NetworkServer.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/NetworkServer.cpp

NetPanzer/Classes/Network/netpanzer-NetworkServer.obj: NetPanzer/Classes/Network/NetworkServer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-NetworkServer.obj -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-NetworkServer.obj `if test -f 'NetPanzer/Classes/Network/NetworkServer.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/NetworkServer.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/NetworkServer.cpp'; fi`; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/NetworkServer.cpp' object='NetPanzer/Classes/Network/netpanzer-NetworkServer.obj' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkServer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-NetworkServer.obj `if test -f 'NetPanzer/Classes/Network/NetworkServer.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/NetworkServer.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/NetworkServer.cpp'; fi`

NetPanzer/Classes/Network/netpanzer-NetworkState.o: NetPanzer/Classes/Network/NetworkState.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-NetworkState.o -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-NetworkState.o `test -f 'NetPanzer/Classes/Network/NetworkState.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/NetworkState.cpp; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/NetworkState.cpp' object='NetPanzer/Classes/Network/netpanzer-NetworkState.o' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-NetworkState.o `test -f 'NetPanzer/Classes/Network/NetworkState.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/NetworkState.cpp

NetPanzer/Classes/Network/netpanzer-NetworkState.obj: NetPanzer/Classes/Network/NetworkState.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-NetworkState.obj -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-NetworkState.obj `if test -f 'NetPanzer/Classes/Network/NetworkState.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/NetworkState.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/NetworkState.cpp'; fi`; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/NetworkState.cpp' object='NetPanzer/Classes/Network/netpanzer-NetworkState.obj' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-NetworkState.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-NetworkState.obj `if test -f 'NetPanzer/Classes/Network/NetworkState.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/NetworkState.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/NetworkState.cpp'; fi`

NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.o: NetPanzer/Classes/Network/ServerConnectDaemon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.o -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.o `test -f 'NetPanzer/Classes/Network/ServerConnectDaemon.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/ServerConnectDaemon.cpp; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/ServerConnectDaemon.cpp' object='NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.o' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.o `test -f 'NetPanzer/Classes/Network/ServerConnectDaemon.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/ServerConnectDaemon.cpp

NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.obj: NetPanzer/Classes/Network/ServerConnectDaemon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.obj -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.obj `if test -f 'NetPanzer/Classes/Network/ServerConnectDaemon.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/ServerConnectDaemon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/ServerConnectDaemon.cpp'; fi`; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/ServerConnectDaemon.cpp' object='NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.obj' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerConnectDaemon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-ServerConnectDaemon.obj `if test -f 'NetPanzer/Classes/Network/ServerConnectDaemon.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/ServerConnectDaemon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/ServerConnectDaemon.cpp'; fi`

NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.o: NetPanzer/Classes/Network/ServerMessageRouter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.o -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.o `test -f 'NetPanzer/Classes/Network/ServerMessageRouter.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/ServerMessageRouter.cpp; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/ServerMessageRouter.cpp' object='NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.o' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.o `test -f 'NetPanzer/Classes/Network/ServerMessageRouter.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/ServerMessageRouter.cpp

NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.obj: NetPanzer/Classes/Network/ServerMessageRouter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.obj -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.obj `if test -f 'NetPanzer/Classes/Network/ServerMessageRouter.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/ServerMessageRouter.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/ServerMessageRouter.cpp'; fi`; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/ServerMessageRouter.cpp' object='NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.obj' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-ServerMessageRouter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-ServerMessageRouter.obj `if test -f 'NetPanzer/Classes/Network/ServerMessageRouter.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/ServerMessageRouter.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/ServerMessageRouter.cpp'; fi`

NetPanzer/Classes/Network/netpanzer-UnitNetMessage.o: NetPanzer/Classes/Network/UnitNetMessage.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-UnitNetMessage.o -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-UnitNetMessage.o `test -f 'NetPanzer/Classes/Network/UnitNetMessage.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/UnitNetMessage.cpp; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/UnitNetMessage.cpp' object='NetPanzer/Classes/Network/netpanzer-UnitNetMessage.o' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-UnitNetMessage.o `test -f 'NetPanzer/Classes/Network/UnitNetMessage.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Network/UnitNetMessage.cpp

NetPanzer/Classes/Network/netpanzer-UnitNetMessage.obj: NetPanzer/Classes/Network/UnitNetMessage.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Network/netpanzer-UnitNetMessage.obj -MD -MP -MF "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.Tpo" \
	  -c -o NetPanzer/Classes/Network/netpanzer-UnitNetMessage.obj `if test -f 'NetPanzer/Classes/Network/UnitNetMessage.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/UnitNetMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/UnitNetMessage.cpp'; fi`; \
	then mv "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.Tpo" "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.Po"; \
	else rm -f "NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Network/UnitNetMessage.cpp' object='NetPanzer/Classes/Network/netpanzer-UnitNetMessage.obj' libtool=no \
#	depfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.Po' tmpdepfile='NetPanzer/Classes/Network/$(DEPDIR)/netpanzer-UnitNetMessage.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Network/netpanzer-UnitNetMessage.obj `if test -f 'NetPanzer/Classes/Network/UnitNetMessage.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Network/UnitNetMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Network/UnitNetMessage.cpp'; fi`

NetPanzer/Classes/Units/netpanzer-Abrams.o: NetPanzer/Classes/Units/Abrams.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Abrams.o -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Abrams.o `test -f 'NetPanzer/Classes/Units/Abrams.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Abrams.cpp; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Abrams.cpp' object='NetPanzer/Classes/Units/netpanzer-Abrams.o' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Abrams.o `test -f 'NetPanzer/Classes/Units/Abrams.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Abrams.cpp

NetPanzer/Classes/Units/netpanzer-Abrams.obj: NetPanzer/Classes/Units/Abrams.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Abrams.obj -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Abrams.obj `if test -f 'NetPanzer/Classes/Units/Abrams.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Abrams.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Abrams.cpp'; fi`; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Abrams.cpp' object='NetPanzer/Classes/Units/netpanzer-Abrams.obj' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Abrams.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Abrams.obj `if test -f 'NetPanzer/Classes/Units/Abrams.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Abrams.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Abrams.cpp'; fi`

NetPanzer/Classes/Units/netpanzer-Archer.o: NetPanzer/Classes/Units/Archer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Archer.o -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Archer.o `test -f 'NetPanzer/Classes/Units/Archer.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Archer.cpp; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Archer.cpp' object='NetPanzer/Classes/Units/netpanzer-Archer.o' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Archer.o `test -f 'NetPanzer/Classes/Units/Archer.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Archer.cpp

NetPanzer/Classes/Units/netpanzer-Archer.obj: NetPanzer/Classes/Units/Archer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Archer.obj -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Archer.obj `if test -f 'NetPanzer/Classes/Units/Archer.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Archer.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Archer.cpp'; fi`; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Archer.cpp' object='NetPanzer/Classes/Units/netpanzer-Archer.obj' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Archer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Archer.obj `if test -f 'NetPanzer/Classes/Units/Archer.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Archer.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Archer.cpp'; fi`

NetPanzer/Classes/Units/netpanzer-Hammerhead.o: NetPanzer/Classes/Units/Hammerhead.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Hammerhead.o -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Hammerhead.o `test -f 'NetPanzer/Classes/Units/Hammerhead.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Hammerhead.cpp; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Hammerhead.cpp' object='NetPanzer/Classes/Units/netpanzer-Hammerhead.o' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Hammerhead.o `test -f 'NetPanzer/Classes/Units/Hammerhead.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Hammerhead.cpp

NetPanzer/Classes/Units/netpanzer-Hammerhead.obj: NetPanzer/Classes/Units/Hammerhead.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Hammerhead.obj -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Hammerhead.obj `if test -f 'NetPanzer/Classes/Units/Hammerhead.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Hammerhead.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Hammerhead.cpp'; fi`; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Hammerhead.cpp' object='NetPanzer/Classes/Units/netpanzer-Hammerhead.obj' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Hammerhead.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Hammerhead.obj `if test -f 'NetPanzer/Classes/Units/Hammerhead.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Hammerhead.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Hammerhead.cpp'; fi`

NetPanzer/Classes/Units/netpanzer-Humvee.o: NetPanzer/Classes/Units/Humvee.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Humvee.o -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Humvee.o `test -f 'NetPanzer/Classes/Units/Humvee.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Humvee.cpp; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Humvee.cpp' object='NetPanzer/Classes/Units/netpanzer-Humvee.o' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Humvee.o `test -f 'NetPanzer/Classes/Units/Humvee.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Humvee.cpp

NetPanzer/Classes/Units/netpanzer-Humvee.obj: NetPanzer/Classes/Units/Humvee.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Humvee.obj -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Humvee.obj `if test -f 'NetPanzer/Classes/Units/Humvee.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Humvee.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Humvee.cpp'; fi`; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Humvee.cpp' object='NetPanzer/Classes/Units/netpanzer-Humvee.obj' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Humvee.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Humvee.obj `if test -f 'NetPanzer/Classes/Units/Humvee.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Humvee.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Humvee.cpp'; fi`

NetPanzer/Classes/Units/netpanzer-Leopard.o: NetPanzer/Classes/Units/Leopard.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Leopard.o -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Leopard.o `test -f 'NetPanzer/Classes/Units/Leopard.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Leopard.cpp; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Leopard.cpp' object='NetPanzer/Classes/Units/netpanzer-Leopard.o' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Leopard.o `test -f 'NetPanzer/Classes/Units/Leopard.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Leopard.cpp

NetPanzer/Classes/Units/netpanzer-Leopard.obj: NetPanzer/Classes/Units/Leopard.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Leopard.obj -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Leopard.obj `if test -f 'NetPanzer/Classes/Units/Leopard.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Leopard.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Leopard.cpp'; fi`; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Leopard.cpp' object='NetPanzer/Classes/Units/netpanzer-Leopard.obj' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Leopard.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Leopard.obj `if test -f 'NetPanzer/Classes/Units/Leopard.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Leopard.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Leopard.cpp'; fi`

NetPanzer/Classes/Units/netpanzer-Lynx.o: NetPanzer/Classes/Units/Lynx.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Lynx.o -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Lynx.o `test -f 'NetPanzer/Classes/Units/Lynx.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Lynx.cpp; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Lynx.cpp' object='NetPanzer/Classes/Units/netpanzer-Lynx.o' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Lynx.o `test -f 'NetPanzer/Classes/Units/Lynx.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Lynx.cpp

NetPanzer/Classes/Units/netpanzer-Lynx.obj: NetPanzer/Classes/Units/Lynx.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Lynx.obj -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Lynx.obj `if test -f 'NetPanzer/Classes/Units/Lynx.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Lynx.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Lynx.cpp'; fi`; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Lynx.cpp' object='NetPanzer/Classes/Units/netpanzer-Lynx.obj' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Lynx.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Lynx.obj `if test -f 'NetPanzer/Classes/Units/Lynx.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Lynx.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Lynx.cpp'; fi`

NetPanzer/Classes/Units/netpanzer-M109.o: NetPanzer/Classes/Units/M109.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-M109.o -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-M109.o `test -f 'NetPanzer/Classes/Units/M109.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/M109.cpp; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/M109.cpp' object='NetPanzer/Classes/Units/netpanzer-M109.o' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-M109.o `test -f 'NetPanzer/Classes/Units/M109.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/M109.cpp

NetPanzer/Classes/Units/netpanzer-M109.obj: NetPanzer/Classes/Units/M109.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-M109.obj -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-M109.obj `if test -f 'NetPanzer/Classes/Units/M109.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/M109.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/M109.cpp'; fi`; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/M109.cpp' object='NetPanzer/Classes/Units/netpanzer-M109.obj' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-M109.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-M109.obj `if test -f 'NetPanzer/Classes/Units/M109.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/M109.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/M109.cpp'; fi`

NetPanzer/Classes/Units/netpanzer-Scorpion.o: NetPanzer/Classes/Units/Scorpion.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Scorpion.o -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Scorpion.o `test -f 'NetPanzer/Classes/Units/Scorpion.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Scorpion.cpp; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Scorpion.cpp' object='NetPanzer/Classes/Units/netpanzer-Scorpion.o' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Scorpion.o `test -f 'NetPanzer/Classes/Units/Scorpion.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Scorpion.cpp

NetPanzer/Classes/Units/netpanzer-Scorpion.obj: NetPanzer/Classes/Units/Scorpion.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Scorpion.obj -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Scorpion.obj `if test -f 'NetPanzer/Classes/Units/Scorpion.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Scorpion.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Scorpion.cpp'; fi`; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Scorpion.cpp' object='NetPanzer/Classes/Units/netpanzer-Scorpion.obj' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Scorpion.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Scorpion.obj `if test -f 'NetPanzer/Classes/Units/Scorpion.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Scorpion.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Scorpion.cpp'; fi`

NetPanzer/Classes/Units/netpanzer-SpahPanzer.o: NetPanzer/Classes/Units/SpahPanzer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-SpahPanzer.o -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-SpahPanzer.o `test -f 'NetPanzer/Classes/Units/SpahPanzer.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/SpahPanzer.cpp; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/SpahPanzer.cpp' object='NetPanzer/Classes/Units/netpanzer-SpahPanzer.o' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-SpahPanzer.o `test -f 'NetPanzer/Classes/Units/SpahPanzer.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/SpahPanzer.cpp

NetPanzer/Classes/Units/netpanzer-SpahPanzer.obj: NetPanzer/Classes/Units/SpahPanzer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-SpahPanzer.obj -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-SpahPanzer.obj `if test -f 'NetPanzer/Classes/Units/SpahPanzer.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/SpahPanzer.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/SpahPanzer.cpp'; fi`; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/SpahPanzer.cpp' object='NetPanzer/Classes/Units/netpanzer-SpahPanzer.obj' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-SpahPanzer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-SpahPanzer.obj `if test -f 'NetPanzer/Classes/Units/SpahPanzer.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/SpahPanzer.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/SpahPanzer.cpp'; fi`

NetPanzer/Classes/Units/netpanzer-UnitGlobals.o: NetPanzer/Classes/Units/UnitGlobals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-UnitGlobals.o -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-UnitGlobals.o `test -f 'NetPanzer/Classes/Units/UnitGlobals.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/UnitGlobals.cpp; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/UnitGlobals.cpp' object='NetPanzer/Classes/Units/netpanzer-UnitGlobals.o' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-UnitGlobals.o `test -f 'NetPanzer/Classes/Units/UnitGlobals.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/UnitGlobals.cpp

NetPanzer/Classes/Units/netpanzer-UnitGlobals.obj: NetPanzer/Classes/Units/UnitGlobals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-UnitGlobals.obj -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-UnitGlobals.obj `if test -f 'NetPanzer/Classes/Units/UnitGlobals.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/UnitGlobals.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/UnitGlobals.cpp'; fi`; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/UnitGlobals.cpp' object='NetPanzer/Classes/Units/netpanzer-UnitGlobals.obj' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-UnitGlobals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-UnitGlobals.obj `if test -f 'NetPanzer/Classes/Units/UnitGlobals.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/UnitGlobals.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/UnitGlobals.cpp'; fi`

NetPanzer/Classes/Units/netpanzer-Valentine.o: NetPanzer/Classes/Units/Valentine.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Valentine.o -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Valentine.o `test -f 'NetPanzer/Classes/Units/Valentine.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Valentine.cpp; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Valentine.cpp' object='NetPanzer/Classes/Units/netpanzer-Valentine.o' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Valentine.o `test -f 'NetPanzer/Classes/Units/Valentine.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Valentine.cpp

NetPanzer/Classes/Units/netpanzer-Valentine.obj: NetPanzer/Classes/Units/Valentine.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Valentine.obj -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Valentine.obj `if test -f 'NetPanzer/Classes/Units/Valentine.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Valentine.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Valentine.cpp'; fi`; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Valentine.cpp' object='NetPanzer/Classes/Units/netpanzer-Valentine.obj' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Valentine.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Valentine.obj `if test -f 'NetPanzer/Classes/Units/Valentine.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Valentine.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Valentine.cpp'; fi`

NetPanzer/Classes/Units/netpanzer-Vehicle.o: NetPanzer/Classes/Units/Vehicle.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Vehicle.o -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Vehicle.o `test -f 'NetPanzer/Classes/Units/Vehicle.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Vehicle.cpp; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Vehicle.cpp' object='NetPanzer/Classes/Units/netpanzer-Vehicle.o' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Vehicle.o `test -f 'NetPanzer/Classes/Units/Vehicle.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Units/Vehicle.cpp

NetPanzer/Classes/Units/netpanzer-Vehicle.obj: NetPanzer/Classes/Units/Vehicle.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Units/netpanzer-Vehicle.obj -MD -MP -MF "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.Tpo" \
	  -c -o NetPanzer/Classes/Units/netpanzer-Vehicle.obj `if test -f 'NetPanzer/Classes/Units/Vehicle.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Vehicle.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Vehicle.cpp'; fi`; \
	then mv "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.Tpo" "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.Po"; \
	else rm -f "NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Units/Vehicle.cpp' object='NetPanzer/Classes/Units/netpanzer-Vehicle.obj' libtool=no \
#	depfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.Po' tmpdepfile='NetPanzer/Classes/Units/$(DEPDIR)/netpanzer-Vehicle.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Units/netpanzer-Vehicle.obj `if test -f 'NetPanzer/Classes/Units/Vehicle.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Units/Vehicle.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Units/Vehicle.cpp'; fi`

NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.o: NetPanzer/Classes/Weapons/BulletWeapon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.o -MD -MP -MF "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.Tpo" \
	  -c -o NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.o `test -f 'NetPanzer/Classes/Weapons/BulletWeapon.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Weapons/BulletWeapon.cpp; \
	then mv "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.Tpo" "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.Po"; \
	else rm -f "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Weapons/BulletWeapon.cpp' object='NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.o' libtool=no \
#	depfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.Po' tmpdepfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.o `test -f 'NetPanzer/Classes/Weapons/BulletWeapon.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Weapons/BulletWeapon.cpp

NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.obj: NetPanzer/Classes/Weapons/BulletWeapon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.obj -MD -MP -MF "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.Tpo" \
	  -c -o NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.obj `if test -f 'NetPanzer/Classes/Weapons/BulletWeapon.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Weapons/BulletWeapon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Weapons/BulletWeapon.cpp'; fi`; \
	then mv "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.Tpo" "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.Po"; \
	else rm -f "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Weapons/BulletWeapon.cpp' object='NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.obj' libtool=no \
#	depfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.Po' tmpdepfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-BulletWeapon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Weapons/netpanzer-BulletWeapon.obj `if test -f 'NetPanzer/Classes/Weapons/BulletWeapon.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Weapons/BulletWeapon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Weapons/BulletWeapon.cpp'; fi`

NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.o: NetPanzer/Classes/Weapons/MissleWeapon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.o -MD -MP -MF "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.Tpo" \
	  -c -o NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.o `test -f 'NetPanzer/Classes/Weapons/MissleWeapon.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Weapons/MissleWeapon.cpp; \
	then mv "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.Tpo" "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.Po"; \
	else rm -f "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Weapons/MissleWeapon.cpp' object='NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.o' libtool=no \
#	depfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.Po' tmpdepfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.o `test -f 'NetPanzer/Classes/Weapons/MissleWeapon.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Weapons/MissleWeapon.cpp

NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.obj: NetPanzer/Classes/Weapons/MissleWeapon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.obj -MD -MP -MF "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.Tpo" \
	  -c -o NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.obj `if test -f 'NetPanzer/Classes/Weapons/MissleWeapon.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Weapons/MissleWeapon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Weapons/MissleWeapon.cpp'; fi`; \
	then mv "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.Tpo" "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.Po"; \
	else rm -f "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Weapons/MissleWeapon.cpp' object='NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.obj' libtool=no \
#	depfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.Po' tmpdepfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-MissleWeapon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Weapons/netpanzer-MissleWeapon.obj `if test -f 'NetPanzer/Classes/Weapons/MissleWeapon.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Weapons/MissleWeapon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Weapons/MissleWeapon.cpp'; fi`

NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.o: NetPanzer/Classes/Weapons/ShellWeapon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.o -MD -MP -MF "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.Tpo" \
	  -c -o NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.o `test -f 'NetPanzer/Classes/Weapons/ShellWeapon.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Weapons/ShellWeapon.cpp; \
	then mv "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.Tpo" "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.Po"; \
	else rm -f "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Weapons/ShellWeapon.cpp' object='NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.o' libtool=no \
#	depfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.Po' tmpdepfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.o `test -f 'NetPanzer/Classes/Weapons/ShellWeapon.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Weapons/ShellWeapon.cpp

NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.obj: NetPanzer/Classes/Weapons/ShellWeapon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.obj -MD -MP -MF "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.Tpo" \
	  -c -o NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.obj `if test -f 'NetPanzer/Classes/Weapons/ShellWeapon.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Weapons/ShellWeapon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Weapons/ShellWeapon.cpp'; fi`; \
	then mv "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.Tpo" "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.Po"; \
	else rm -f "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Weapons/ShellWeapon.cpp' object='NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.obj' libtool=no \
#	depfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.Po' tmpdepfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-ShellWeapon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Weapons/netpanzer-ShellWeapon.obj `if test -f 'NetPanzer/Classes/Weapons/ShellWeapon.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Weapons/ShellWeapon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Weapons/ShellWeapon.cpp'; fi`

NetPanzer/Classes/Weapons/netpanzer-Weapon.o: NetPanzer/Classes/Weapons/Weapon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Weapons/netpanzer-Weapon.o -MD -MP -MF "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.Tpo" \
	  -c -o NetPanzer/Classes/Weapons/netpanzer-Weapon.o `test -f 'NetPanzer/Classes/Weapons/Weapon.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Weapons/Weapon.cpp; \
	then mv "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.Tpo" "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.Po"; \
	else rm -f "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Weapons/Weapon.cpp' object='NetPanzer/Classes/Weapons/netpanzer-Weapon.o' libtool=no \
#	depfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.Po' tmpdepfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Weapons/netpanzer-Weapon.o `test -f 'NetPanzer/Classes/Weapons/Weapon.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Weapons/Weapon.cpp

NetPanzer/Classes/Weapons/netpanzer-Weapon.obj: NetPanzer/Classes/Weapons/Weapon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Weapons/netpanzer-Weapon.obj -MD -MP -MF "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.Tpo" \
	  -c -o NetPanzer/Classes/Weapons/netpanzer-Weapon.obj `if test -f 'NetPanzer/Classes/Weapons/Weapon.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Weapons/Weapon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Weapons/Weapon.cpp'; fi`; \
	then mv "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.Tpo" "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.Po"; \
	else rm -f "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Weapons/Weapon.cpp' object='NetPanzer/Classes/Weapons/netpanzer-Weapon.obj' libtool=no \
#	depfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.Po' tmpdepfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-Weapon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Weapons/netpanzer-Weapon.obj `if test -f 'NetPanzer/Classes/Weapons/Weapon.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Weapons/Weapon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Weapons/Weapon.cpp'; fi`

NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.o: NetPanzer/Classes/Weapons/WeaponGlobals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.o -MD -MP -MF "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.Tpo" \
	  -c -o NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.o `test -f 'NetPanzer/Classes/Weapons/WeaponGlobals.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Weapons/WeaponGlobals.cpp; \
	then mv "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.Tpo" "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.Po"; \
	else rm -f "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Weapons/WeaponGlobals.cpp' object='NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.o' libtool=no \
#	depfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.Po' tmpdepfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.o `test -f 'NetPanzer/Classes/Weapons/WeaponGlobals.cpp' || echo '$(srcdir)/'`NetPanzer/Classes/Weapons/WeaponGlobals.cpp

NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.obj: NetPanzer/Classes/Weapons/WeaponGlobals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.obj -MD -MP -MF "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.Tpo" \
	  -c -o NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.obj `if test -f 'NetPanzer/Classes/Weapons/WeaponGlobals.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Weapons/WeaponGlobals.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Weapons/WeaponGlobals.cpp'; fi`; \
	then mv "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.Tpo" "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.Po"; \
	else rm -f "NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Classes/Weapons/WeaponGlobals.cpp' object='NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.obj' libtool=no \
#	depfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.Po' tmpdepfile='NetPanzer/Classes/Weapons/$(DEPDIR)/netpanzer-WeaponGlobals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Classes/Weapons/netpanzer-WeaponGlobals.obj `if test -f 'NetPanzer/Classes/Weapons/WeaponGlobals.cpp'; then $(CYGPATH_W) 'NetPanzer/Classes/Weapons/WeaponGlobals.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Classes/Weapons/WeaponGlobals.cpp'; fi`

NetPanzer/Core/netpanzer-NetworkGlobals.o: NetPanzer/Core/NetworkGlobals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Core/netpanzer-NetworkGlobals.o -MD -MP -MF "NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.Tpo" \
	  -c -o NetPanzer/Core/netpanzer-NetworkGlobals.o `test -f 'NetPanzer/Core/NetworkGlobals.cpp' || echo '$(srcdir)/'`NetPanzer/Core/NetworkGlobals.cpp; \
	then mv "NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.Tpo" "NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.Po"; \
	else rm -f "NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Core/NetworkGlobals.cpp' object='NetPanzer/Core/netpanzer-NetworkGlobals.o' libtool=no \
#	depfile='NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.Po' tmpdepfile='NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Core/netpanzer-NetworkGlobals.o `test -f 'NetPanzer/Core/NetworkGlobals.cpp' || echo '$(srcdir)/'`NetPanzer/Core/NetworkGlobals.cpp

NetPanzer/Core/netpanzer-NetworkGlobals.obj: NetPanzer/Core/NetworkGlobals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Core/netpanzer-NetworkGlobals.obj -MD -MP -MF "NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.Tpo" \
	  -c -o NetPanzer/Core/netpanzer-NetworkGlobals.obj `if test -f 'NetPanzer/Core/NetworkGlobals.cpp'; then $(CYGPATH_W) 'NetPanzer/Core/NetworkGlobals.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Core/NetworkGlobals.cpp'; fi`; \
	then mv "NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.Tpo" "NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.Po"; \
	else rm -f "NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Core/NetworkGlobals.cpp' object='NetPanzer/Core/netpanzer-NetworkGlobals.obj' libtool=no \
#	depfile='NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.Po' tmpdepfile='NetPanzer/Core/$(DEPDIR)/netpanzer-NetworkGlobals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Core/netpanzer-NetworkGlobals.obj `if test -f 'NetPanzer/Core/NetworkGlobals.cpp'; then $(CYGPATH_W) 'NetPanzer/Core/NetworkGlobals.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Core/NetworkGlobals.cpp'; fi`

NetPanzer/Core/netpanzer-loadPics.o: NetPanzer/Core/loadPics.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Core/netpanzer-loadPics.o -MD -MP -MF "NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.Tpo" \
	  -c -o NetPanzer/Core/netpanzer-loadPics.o `test -f 'NetPanzer/Core/loadPics.cpp' || echo '$(srcdir)/'`NetPanzer/Core/loadPics.cpp; \
	then mv "NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.Tpo" "NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.Po"; \
	else rm -f "NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Core/loadPics.cpp' object='NetPanzer/Core/netpanzer-loadPics.o' libtool=no \
#	depfile='NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.Po' tmpdepfile='NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Core/netpanzer-loadPics.o `test -f 'NetPanzer/Core/loadPics.cpp' || echo '$(srcdir)/'`NetPanzer/Core/loadPics.cpp

NetPanzer/Core/netpanzer-loadPics.obj: NetPanzer/Core/loadPics.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Core/netpanzer-loadPics.obj -MD -MP -MF "NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.Tpo" \
	  -c -o NetPanzer/Core/netpanzer-loadPics.obj `if test -f 'NetPanzer/Core/loadPics.cpp'; then $(CYGPATH_W) 'NetPanzer/Core/loadPics.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Core/loadPics.cpp'; fi`; \
	then mv "NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.Tpo" "NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.Po"; \
	else rm -f "NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Core/loadPics.cpp' object='NetPanzer/Core/netpanzer-loadPics.obj' libtool=no \
#	depfile='NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.Po' tmpdepfile='NetPanzer/Core/$(DEPDIR)/netpanzer-loadPics.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Core/netpanzer-loadPics.obj `if test -f 'NetPanzer/Core/loadPics.cpp'; then $(CYGPATH_W) 'NetPanzer/Core/loadPics.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Core/loadPics.cpp'; fi`

NetPanzer/Core/netpanzer-main.o: NetPanzer/Core/main.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Core/netpanzer-main.o -MD -MP -MF "NetPanzer/Core/$(DEPDIR)/netpanzer-main.Tpo" \
	  -c -o NetPanzer/Core/netpanzer-main.o `test -f 'NetPanzer/Core/main.cpp' || echo '$(srcdir)/'`NetPanzer/Core/main.cpp; \
	then mv "NetPanzer/Core/$(DEPDIR)/netpanzer-main.Tpo" "NetPanzer/Core/$(DEPDIR)/netpanzer-main.Po"; \
	else rm -f "NetPanzer/Core/$(DEPDIR)/netpanzer-main.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Core/main.cpp' object='NetPanzer/Core/netpanzer-main.o' libtool=no \
#	depfile='NetPanzer/Core/$(DEPDIR)/netpanzer-main.Po' tmpdepfile='NetPanzer/Core/$(DEPDIR)/netpanzer-main.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Core/netpanzer-main.o `test -f 'NetPanzer/Core/main.cpp' || echo '$(srcdir)/'`NetPanzer/Core/main.cpp

NetPanzer/Core/netpanzer-main.obj: NetPanzer/Core/main.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Core/netpanzer-main.obj -MD -MP -MF "NetPanzer/Core/$(DEPDIR)/netpanzer-main.Tpo" \
	  -c -o NetPanzer/Core/netpanzer-main.obj `if test -f 'NetPanzer/Core/main.cpp'; then $(CYGPATH_W) 'NetPanzer/Core/main.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Core/main.cpp'; fi`; \
	then mv "NetPanzer/Core/$(DEPDIR)/netpanzer-main.Tpo" "NetPanzer/Core/$(DEPDIR)/netpanzer-main.Po"; \
	else rm -f "NetPanzer/Core/$(DEPDIR)/netpanzer-main.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Core/main.cpp' object='NetPanzer/Core/netpanzer-main.obj' libtool=no \
#	depfile='NetPanzer/Core/$(DEPDIR)/netpanzer-main.Po' tmpdepfile='NetPanzer/Core/$(DEPDIR)/netpanzer-main.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Core/netpanzer-main.obj `if test -f 'NetPanzer/Core/main.cpp'; then $(CYGPATH_W) 'NetPanzer/Core/main.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Core/main.cpp'; fi`

NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.o: NetPanzer/Interfaces/unix/NetworkClientUnix.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.o -MD -MP -MF "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.Tpo" \
	  -c -o NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.o `test -f 'NetPanzer/Interfaces/unix/NetworkClientUnix.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/unix/NetworkClientUnix.cpp; \
	then mv "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.Tpo" "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.Po"; \
	else rm -f "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/unix/NetworkClientUnix.cpp' object='NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.o' libtool=no \
#	depfile='NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.Po' tmpdepfile='NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.o `test -f 'NetPanzer/Interfaces/unix/NetworkClientUnix.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/unix/NetworkClientUnix.cpp

NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.obj: NetPanzer/Interfaces/unix/NetworkClientUnix.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.obj -MD -MP -MF "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.Tpo" \
	  -c -o NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.obj `if test -f 'NetPanzer/Interfaces/unix/NetworkClientUnix.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/unix/NetworkClientUnix.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/unix/NetworkClientUnix.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.Tpo" "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.Po"; \
	else rm -f "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/unix/NetworkClientUnix.cpp' object='NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.Po' tmpdepfile='NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkClientUnix.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/unix/netpanzer-NetworkClientUnix.obj `if test -f 'NetPanzer/Interfaces/unix/NetworkClientUnix.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/unix/NetworkClientUnix.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/unix/NetworkClientUnix.cpp'; fi`

NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.o: NetPanzer/Interfaces/unix/NetworkServerUnix.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.o -MD -MP -MF "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.Tpo" \
	  -c -o NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.o `test -f 'NetPanzer/Interfaces/unix/NetworkServerUnix.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/unix/NetworkServerUnix.cpp; \
	then mv "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.Tpo" "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.Po"; \
	else rm -f "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/unix/NetworkServerUnix.cpp' object='NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.o' libtool=no \
#	depfile='NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.Po' tmpdepfile='NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.o `test -f 'NetPanzer/Interfaces/unix/NetworkServerUnix.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/unix/NetworkServerUnix.cpp

NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.obj: NetPanzer/Interfaces/unix/NetworkServerUnix.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.obj -MD -MP -MF "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.Tpo" \
	  -c -o NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.obj `if test -f 'NetPanzer/Interfaces/unix/NetworkServerUnix.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/unix/NetworkServerUnix.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/unix/NetworkServerUnix.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.Tpo" "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.Po"; \
	else rm -f "NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/unix/NetworkServerUnix.cpp' object='NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.Po' tmpdepfile='NetPanzer/Interfaces/unix/$(DEPDIR)/netpanzer-NetworkServerUnix.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/unix/netpanzer-NetworkServerUnix.obj `if test -f 'NetPanzer/Interfaces/unix/NetworkServerUnix.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/unix/NetworkServerUnix.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/unix/NetworkServerUnix.cpp'; fi`

NetPanzer/Interfaces/netpanzer-ChatInterface.o: NetPanzer/Interfaces/ChatInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-ChatInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-ChatInterface.o `test -f 'NetPanzer/Interfaces/ChatInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/ChatInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/ChatInterface.cpp' object='NetPanzer/Interfaces/netpanzer-ChatInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-ChatInterface.o `test -f 'NetPanzer/Interfaces/ChatInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/ChatInterface.cpp

NetPanzer/Interfaces/netpanzer-ChatInterface.obj: NetPanzer/Interfaces/ChatInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-ChatInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-ChatInterface.obj `if test -f 'NetPanzer/Interfaces/ChatInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/ChatInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/ChatInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/ChatInterface.cpp' object='NetPanzer/Interfaces/netpanzer-ChatInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ChatInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-ChatInterface.obj `if test -f 'NetPanzer/Interfaces/ChatInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/ChatInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/ChatInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-Client.o: NetPanzer/Interfaces/Client.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-Client.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-Client.o `test -f 'NetPanzer/Interfaces/Client.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/Client.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/Client.cpp' object='NetPanzer/Interfaces/netpanzer-Client.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-Client.o `test -f 'NetPanzer/Interfaces/Client.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/Client.cpp

NetPanzer/Interfaces/netpanzer-Client.obj: NetPanzer/Interfaces/Client.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-Client.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-Client.obj `if test -f 'NetPanzer/Interfaces/Client.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/Client.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/Client.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/Client.cpp' object='NetPanzer/Interfaces/netpanzer-Client.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Client.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-Client.obj `if test -f 'NetPanzer/Interfaces/Client.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/Client.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/Client.cpp'; fi`

NetPanzer/Interfaces/netpanzer-ConsoleInterface.o: NetPanzer/Interfaces/ConsoleInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-ConsoleInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-ConsoleInterface.o `test -f 'NetPanzer/Interfaces/ConsoleInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/ConsoleInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/ConsoleInterface.cpp' object='NetPanzer/Interfaces/netpanzer-ConsoleInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-ConsoleInterface.o `test -f 'NetPanzer/Interfaces/ConsoleInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/ConsoleInterface.cpp

NetPanzer/Interfaces/netpanzer-ConsoleInterface.obj: NetPanzer/Interfaces/ConsoleInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-ConsoleInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-ConsoleInterface.obj `if test -f 'NetPanzer/Interfaces/ConsoleInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/ConsoleInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/ConsoleInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/ConsoleInterface.cpp' object='NetPanzer/Interfaces/netpanzer-ConsoleInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ConsoleInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-ConsoleInterface.obj `if test -f 'NetPanzer/Interfaces/ConsoleInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/ConsoleInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/ConsoleInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-GameConfig.o: NetPanzer/Interfaces/GameConfig.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-GameConfig.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-GameConfig.o `test -f 'NetPanzer/Interfaces/GameConfig.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/GameConfig.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/GameConfig.cpp' object='NetPanzer/Interfaces/netpanzer-GameConfig.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-GameConfig.o `test -f 'NetPanzer/Interfaces/GameConfig.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/GameConfig.cpp

NetPanzer/Interfaces/netpanzer-GameConfig.obj: NetPanzer/Interfaces/GameConfig.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-GameConfig.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-GameConfig.obj `if test -f 'NetPanzer/Interfaces/GameConfig.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/GameConfig.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/GameConfig.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/GameConfig.cpp' object='NetPanzer/Interfaces/netpanzer-GameConfig.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameConfig.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-GameConfig.obj `if test -f 'NetPanzer/Interfaces/GameConfig.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/GameConfig.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/GameConfig.cpp'; fi`

NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.o: NetPanzer/Interfaces/GameControlRulesDaemon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.o `test -f 'NetPanzer/Interfaces/GameControlRulesDaemon.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/GameControlRulesDaemon.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/GameControlRulesDaemon.cpp' object='NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.o `test -f 'NetPanzer/Interfaces/GameControlRulesDaemon.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/GameControlRulesDaemon.cpp

NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.obj: NetPanzer/Interfaces/GameControlRulesDaemon.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.obj `if test -f 'NetPanzer/Interfaces/GameControlRulesDaemon.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/GameControlRulesDaemon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/GameControlRulesDaemon.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/GameControlRulesDaemon.cpp' object='NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameControlRulesDaemon.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-GameControlRulesDaemon.obj `if test -f 'NetPanzer/Interfaces/GameControlRulesDaemon.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/GameControlRulesDaemon.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/GameControlRulesDaemon.cpp'; fi`

NetPanzer/Interfaces/netpanzer-GameManager.o: NetPanzer/Interfaces/GameManager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-GameManager.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-GameManager.o `test -f 'NetPanzer/Interfaces/GameManager.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/GameManager.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/GameManager.cpp' object='NetPanzer/Interfaces/netpanzer-GameManager.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-GameManager.o `test -f 'NetPanzer/Interfaces/GameManager.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/GameManager.cpp

NetPanzer/Interfaces/netpanzer-GameManager.obj: NetPanzer/Interfaces/GameManager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-GameManager.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-GameManager.obj `if test -f 'NetPanzer/Interfaces/GameManager.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/GameManager.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/GameManager.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/GameManager.cpp' object='NetPanzer/Interfaces/netpanzer-GameManager.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-GameManager.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-GameManager.obj `if test -f 'NetPanzer/Interfaces/GameManager.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/GameManager.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/GameManager.cpp'; fi`

NetPanzer/Interfaces/netpanzer-KeyboardInterface.o: NetPanzer/Interfaces/KeyboardInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-KeyboardInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-KeyboardInterface.o `test -f 'NetPanzer/Interfaces/KeyboardInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/KeyboardInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/KeyboardInterface.cpp' object='NetPanzer/Interfaces/netpanzer-KeyboardInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-KeyboardInterface.o `test -f 'NetPanzer/Interfaces/KeyboardInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/KeyboardInterface.cpp

NetPanzer/Interfaces/netpanzer-KeyboardInterface.obj: NetPanzer/Interfaces/KeyboardInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-KeyboardInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-KeyboardInterface.obj `if test -f 'NetPanzer/Interfaces/KeyboardInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/KeyboardInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/KeyboardInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/KeyboardInterface.cpp' object='NetPanzer/Interfaces/netpanzer-KeyboardInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-KeyboardInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-KeyboardInterface.obj `if test -f 'NetPanzer/Interfaces/KeyboardInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/KeyboardInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/KeyboardInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-MapInterface.o: NetPanzer/Interfaces/MapInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-MapInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-MapInterface.o `test -f 'NetPanzer/Interfaces/MapInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/MapInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/MapInterface.cpp' object='NetPanzer/Interfaces/netpanzer-MapInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-MapInterface.o `test -f 'NetPanzer/Interfaces/MapInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/MapInterface.cpp

NetPanzer/Interfaces/netpanzer-MapInterface.obj: NetPanzer/Interfaces/MapInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-MapInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-MapInterface.obj `if test -f 'NetPanzer/Interfaces/MapInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/MapInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/MapInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/MapInterface.cpp' object='NetPanzer/Interfaces/netpanzer-MapInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-MapInterface.obj `if test -f 'NetPanzer/Interfaces/MapInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/MapInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/MapInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-MapsManager.o: NetPanzer/Interfaces/MapsManager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-MapsManager.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-MapsManager.o `test -f 'NetPanzer/Interfaces/MapsManager.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/MapsManager.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/MapsManager.cpp' object='NetPanzer/Interfaces/netpanzer-MapsManager.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-MapsManager.o `test -f 'NetPanzer/Interfaces/MapsManager.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/MapsManager.cpp

NetPanzer/Interfaces/netpanzer-MapsManager.obj: NetPanzer/Interfaces/MapsManager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-MapsManager.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-MapsManager.obj `if test -f 'NetPanzer/Interfaces/MapsManager.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/MapsManager.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/MapsManager.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/MapsManager.cpp' object='NetPanzer/Interfaces/netpanzer-MapsManager.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MapsManager.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-MapsManager.obj `if test -f 'NetPanzer/Interfaces/MapsManager.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/MapsManager.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/MapsManager.cpp'; fi`

NetPanzer/Interfaces/netpanzer-MiniMapInterface.o: NetPanzer/Interfaces/MiniMapInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-MiniMapInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-MiniMapInterface.o `test -f 'NetPanzer/Interfaces/MiniMapInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/MiniMapInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/MiniMapInterface.cpp' object='NetPanzer/Interfaces/netpanzer-MiniMapInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-MiniMapInterface.o `test -f 'NetPanzer/Interfaces/MiniMapInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/MiniMapInterface.cpp

NetPanzer/Interfaces/netpanzer-MiniMapInterface.obj: NetPanzer/Interfaces/MiniMapInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-MiniMapInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-MiniMapInterface.obj `if test -f 'NetPanzer/Interfaces/MiniMapInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/MiniMapInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/MiniMapInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/MiniMapInterface.cpp' object='NetPanzer/Interfaces/netpanzer-MiniMapInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MiniMapInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-MiniMapInterface.obj `if test -f 'NetPanzer/Interfaces/MiniMapInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/MiniMapInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/MiniMapInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-MouseInterface.o: NetPanzer/Interfaces/MouseInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-MouseInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-MouseInterface.o `test -f 'NetPanzer/Interfaces/MouseInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/MouseInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/MouseInterface.cpp' object='NetPanzer/Interfaces/netpanzer-MouseInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-MouseInterface.o `test -f 'NetPanzer/Interfaces/MouseInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/MouseInterface.cpp

NetPanzer/Interfaces/netpanzer-MouseInterface.obj: NetPanzer/Interfaces/MouseInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-MouseInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-MouseInterface.obj `if test -f 'NetPanzer/Interfaces/MouseInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/MouseInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/MouseInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/MouseInterface.cpp' object='NetPanzer/Interfaces/netpanzer-MouseInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-MouseInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-MouseInterface.obj `if test -f 'NetPanzer/Interfaces/MouseInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/MouseInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/MouseInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-ObjectiveInterface.o: NetPanzer/Interfaces/ObjectiveInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-ObjectiveInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-ObjectiveInterface.o `test -f 'NetPanzer/Interfaces/ObjectiveInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/ObjectiveInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/ObjectiveInterface.cpp' object='NetPanzer/Interfaces/netpanzer-ObjectiveInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-ObjectiveInterface.o `test -f 'NetPanzer/Interfaces/ObjectiveInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/ObjectiveInterface.cpp

NetPanzer/Interfaces/netpanzer-ObjectiveInterface.obj: NetPanzer/Interfaces/ObjectiveInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-ObjectiveInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-ObjectiveInterface.obj `if test -f 'NetPanzer/Interfaces/ObjectiveInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/ObjectiveInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/ObjectiveInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/ObjectiveInterface.cpp' object='NetPanzer/Interfaces/netpanzer-ObjectiveInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ObjectiveInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-ObjectiveInterface.obj `if test -f 'NetPanzer/Interfaces/ObjectiveInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/ObjectiveInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/ObjectiveInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-PathScheduler.o: NetPanzer/Interfaces/PathScheduler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-PathScheduler.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-PathScheduler.o `test -f 'NetPanzer/Interfaces/PathScheduler.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/PathScheduler.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/PathScheduler.cpp' object='NetPanzer/Interfaces/netpanzer-PathScheduler.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-PathScheduler.o `test -f 'NetPanzer/Interfaces/PathScheduler.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/PathScheduler.cpp

NetPanzer/Interfaces/netpanzer-PathScheduler.obj: NetPanzer/Interfaces/PathScheduler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-PathScheduler.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-PathScheduler.obj `if test -f 'NetPanzer/Interfaces/PathScheduler.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/PathScheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/PathScheduler.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/PathScheduler.cpp' object='NetPanzer/Interfaces/netpanzer-PathScheduler.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PathScheduler.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-PathScheduler.obj `if test -f 'NetPanzer/Interfaces/PathScheduler.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/PathScheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/PathScheduler.cpp'; fi`

NetPanzer/Interfaces/netpanzer-PlayerInterface.o: NetPanzer/Interfaces/PlayerInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-PlayerInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-PlayerInterface.o `test -f 'NetPanzer/Interfaces/PlayerInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/PlayerInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/PlayerInterface.cpp' object='NetPanzer/Interfaces/netpanzer-PlayerInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-PlayerInterface.o `test -f 'NetPanzer/Interfaces/PlayerInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/PlayerInterface.cpp

NetPanzer/Interfaces/netpanzer-PlayerInterface.obj: NetPanzer/Interfaces/PlayerInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-PlayerInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-PlayerInterface.obj `if test -f 'NetPanzer/Interfaces/PlayerInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/PlayerInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/PlayerInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/PlayerInterface.cpp' object='NetPanzer/Interfaces/netpanzer-PlayerInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PlayerInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-PlayerInterface.obj `if test -f 'NetPanzer/Interfaces/PlayerInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/PlayerInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/PlayerInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-PowerUpInterface.o: NetPanzer/Interfaces/PowerUpInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-PowerUpInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-PowerUpInterface.o `test -f 'NetPanzer/Interfaces/PowerUpInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/PowerUpInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/PowerUpInterface.cpp' object='NetPanzer/Interfaces/netpanzer-PowerUpInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-PowerUpInterface.o `test -f 'NetPanzer/Interfaces/PowerUpInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/PowerUpInterface.cpp

NetPanzer/Interfaces/netpanzer-PowerUpInterface.obj: NetPanzer/Interfaces/PowerUpInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-PowerUpInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-PowerUpInterface.obj `if test -f 'NetPanzer/Interfaces/PowerUpInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/PowerUpInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/PowerUpInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/PowerUpInterface.cpp' object='NetPanzer/Interfaces/netpanzer-PowerUpInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-PowerUpInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-PowerUpInterface.obj `if test -f 'NetPanzer/Interfaces/PowerUpInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/PowerUpInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/PowerUpInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-ProjectileInterface.o: NetPanzer/Interfaces/ProjectileInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-ProjectileInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-ProjectileInterface.o `test -f 'NetPanzer/Interfaces/ProjectileInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/ProjectileInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/ProjectileInterface.cpp' object='NetPanzer/Interfaces/netpanzer-ProjectileInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-ProjectileInterface.o `test -f 'NetPanzer/Interfaces/ProjectileInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/ProjectileInterface.cpp

NetPanzer/Interfaces/netpanzer-ProjectileInterface.obj: NetPanzer/Interfaces/ProjectileInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-ProjectileInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-ProjectileInterface.obj `if test -f 'NetPanzer/Interfaces/ProjectileInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/ProjectileInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/ProjectileInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/ProjectileInterface.cpp' object='NetPanzer/Interfaces/netpanzer-ProjectileInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-ProjectileInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-ProjectileInterface.obj `if test -f 'NetPanzer/Interfaces/ProjectileInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/ProjectileInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/ProjectileInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-Server.o: NetPanzer/Interfaces/Server.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-Server.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-Server.o `test -f 'NetPanzer/Interfaces/Server.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/Server.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/Server.cpp' object='NetPanzer/Interfaces/netpanzer-Server.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-Server.o `test -f 'NetPanzer/Interfaces/Server.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/Server.cpp

NetPanzer/Interfaces/netpanzer-Server.obj: NetPanzer/Interfaces/Server.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-Server.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-Server.obj `if test -f 'NetPanzer/Interfaces/Server.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/Server.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/Server.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/Server.cpp' object='NetPanzer/Interfaces/netpanzer-Server.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Server.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-Server.obj `if test -f 'NetPanzer/Interfaces/Server.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/Server.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/Server.cpp'; fi`

NetPanzer/Interfaces/netpanzer-Stats.o: NetPanzer/Interfaces/Stats.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-Stats.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-Stats.o `test -f 'NetPanzer/Interfaces/Stats.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/Stats.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/Stats.cpp' object='NetPanzer/Interfaces/netpanzer-Stats.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-Stats.o `test -f 'NetPanzer/Interfaces/Stats.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/Stats.cpp

NetPanzer/Interfaces/netpanzer-Stats.obj: NetPanzer/Interfaces/Stats.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-Stats.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-Stats.obj `if test -f 'NetPanzer/Interfaces/Stats.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/Stats.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/Stats.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/Stats.cpp' object='NetPanzer/Interfaces/netpanzer-Stats.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-Stats.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-Stats.obj `if test -f 'NetPanzer/Interfaces/Stats.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/Stats.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/Stats.cpp'; fi`

NetPanzer/Interfaces/netpanzer-TileInterface.o: NetPanzer/Interfaces/TileInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-TileInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-TileInterface.o `test -f 'NetPanzer/Interfaces/TileInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/TileInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/TileInterface.cpp' object='NetPanzer/Interfaces/netpanzer-TileInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-TileInterface.o `test -f 'NetPanzer/Interfaces/TileInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/TileInterface.cpp

NetPanzer/Interfaces/netpanzer-TileInterface.obj: NetPanzer/Interfaces/TileInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-TileInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-TileInterface.obj `if test -f 'NetPanzer/Interfaces/TileInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/TileInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/TileInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/TileInterface.cpp' object='NetPanzer/Interfaces/netpanzer-TileInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-TileInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-TileInterface.obj `if test -f 'NetPanzer/Interfaces/TileInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/TileInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/TileInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-UnitInterface.o: NetPanzer/Interfaces/UnitInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-UnitInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-UnitInterface.o `test -f 'NetPanzer/Interfaces/UnitInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/UnitInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/UnitInterface.cpp' object='NetPanzer/Interfaces/netpanzer-UnitInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-UnitInterface.o `test -f 'NetPanzer/Interfaces/UnitInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/UnitInterface.cpp

NetPanzer/Interfaces/netpanzer-UnitInterface.obj: NetPanzer/Interfaces/UnitInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-UnitInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-UnitInterface.obj `if test -f 'NetPanzer/Interfaces/UnitInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/UnitInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/UnitInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/UnitInterface.cpp' object='NetPanzer/Interfaces/netpanzer-UnitInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-UnitInterface.obj `if test -f 'NetPanzer/Interfaces/UnitInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/UnitInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/UnitInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-UnitProfileInterface.o: NetPanzer/Interfaces/UnitProfileInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-UnitProfileInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-UnitProfileInterface.o `test -f 'NetPanzer/Interfaces/UnitProfileInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/UnitProfileInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/UnitProfileInterface.cpp' object='NetPanzer/Interfaces/netpanzer-UnitProfileInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-UnitProfileInterface.o `test -f 'NetPanzer/Interfaces/UnitProfileInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/UnitProfileInterface.cpp

NetPanzer/Interfaces/netpanzer-UnitProfileInterface.obj: NetPanzer/Interfaces/UnitProfileInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-UnitProfileInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-UnitProfileInterface.obj `if test -f 'NetPanzer/Interfaces/UnitProfileInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/UnitProfileInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/UnitProfileInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/UnitProfileInterface.cpp' object='NetPanzer/Interfaces/netpanzer-UnitProfileInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-UnitProfileInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-UnitProfileInterface.obj `if test -f 'NetPanzer/Interfaces/UnitProfileInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/UnitProfileInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/UnitProfileInterface.cpp'; fi`

NetPanzer/Interfaces/netpanzer-WorldViewInterface.o: NetPanzer/Interfaces/WorldViewInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-WorldViewInterface.o -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-WorldViewInterface.o `test -f 'NetPanzer/Interfaces/WorldViewInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/WorldViewInterface.cpp; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/WorldViewInterface.cpp' object='NetPanzer/Interfaces/netpanzer-WorldViewInterface.o' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-WorldViewInterface.o `test -f 'NetPanzer/Interfaces/WorldViewInterface.cpp' || echo '$(srcdir)/'`NetPanzer/Interfaces/WorldViewInterface.cpp

NetPanzer/Interfaces/netpanzer-WorldViewInterface.obj: NetPanzer/Interfaces/WorldViewInterface.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Interfaces/netpanzer-WorldViewInterface.obj -MD -MP -MF "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.Tpo" \
	  -c -o NetPanzer/Interfaces/netpanzer-WorldViewInterface.obj `if test -f 'NetPanzer/Interfaces/WorldViewInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/WorldViewInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/WorldViewInterface.cpp'; fi`; \
	then mv "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.Tpo" "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.Po"; \
	else rm -f "NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Interfaces/WorldViewInterface.cpp' object='NetPanzer/Interfaces/netpanzer-WorldViewInterface.obj' libtool=no \
#	depfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.Po' tmpdepfile='NetPanzer/Interfaces/$(DEPDIR)/netpanzer-WorldViewInterface.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Interfaces/netpanzer-WorldViewInterface.obj `if test -f 'NetPanzer/Interfaces/WorldViewInterface.cpp'; then $(CYGPATH_W) 'NetPanzer/Interfaces/WorldViewInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Interfaces/WorldViewInterface.cpp'; fi`

NetPanzer/Port/netpanzer-Gdatstct.o: NetPanzer/Port/Gdatstct.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Port/netpanzer-Gdatstct.o -MD -MP -MF "NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.Tpo" \
	  -c -o NetPanzer/Port/netpanzer-Gdatstct.o `test -f 'NetPanzer/Port/Gdatstct.cpp' || echo '$(srcdir)/'`NetPanzer/Port/Gdatstct.cpp; \
	then mv "NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.Tpo" "NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.Po"; \
	else rm -f "NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Port/Gdatstct.cpp' object='NetPanzer/Port/netpanzer-Gdatstct.o' libtool=no \
#	depfile='NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.Po' tmpdepfile='NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Port/netpanzer-Gdatstct.o `test -f 'NetPanzer/Port/Gdatstct.cpp' || echo '$(srcdir)/'`NetPanzer/Port/Gdatstct.cpp

NetPanzer/Port/netpanzer-Gdatstct.obj: NetPanzer/Port/Gdatstct.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Port/netpanzer-Gdatstct.obj -MD -MP -MF "NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.Tpo" \
	  -c -o NetPanzer/Port/netpanzer-Gdatstct.obj `if test -f 'NetPanzer/Port/Gdatstct.cpp'; then $(CYGPATH_W) 'NetPanzer/Port/Gdatstct.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Port/Gdatstct.cpp'; fi`; \
	then mv "NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.Tpo" "NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.Po"; \
	else rm -f "NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Port/Gdatstct.cpp' object='NetPanzer/Port/netpanzer-Gdatstct.obj' libtool=no \
#	depfile='NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.Po' tmpdepfile='NetPanzer/Port/$(DEPDIR)/netpanzer-Gdatstct.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Port/netpanzer-Gdatstct.obj `if test -f 'NetPanzer/Port/Gdatstct.cpp'; then $(CYGPATH_W) 'NetPanzer/Port/Gdatstct.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Port/Gdatstct.cpp'; fi`

NetPanzer/Port/netpanzer-blitters.o: NetPanzer/Port/blitters.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Port/netpanzer-blitters.o -MD -MP -MF "NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.Tpo" \
	  -c -o NetPanzer/Port/netpanzer-blitters.o `test -f 'NetPanzer/Port/blitters.cpp' || echo '$(srcdir)/'`NetPanzer/Port/blitters.cpp; \
	then mv "NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.Tpo" "NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.Po"; \
	else rm -f "NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Port/blitters.cpp' object='NetPanzer/Port/netpanzer-blitters.o' libtool=no \
#	depfile='NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.Po' tmpdepfile='NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Port/netpanzer-blitters.o `test -f 'NetPanzer/Port/blitters.cpp' || echo '$(srcdir)/'`NetPanzer/Port/blitters.cpp

NetPanzer/Port/netpanzer-blitters.obj: NetPanzer/Port/blitters.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Port/netpanzer-blitters.obj -MD -MP -MF "NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.Tpo" \
	  -c -o NetPanzer/Port/netpanzer-blitters.obj `if test -f 'NetPanzer/Port/blitters.cpp'; then $(CYGPATH_W) 'NetPanzer/Port/blitters.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Port/blitters.cpp'; fi`; \
	then mv "NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.Tpo" "NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.Po"; \
	else rm -f "NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Port/blitters.cpp' object='NetPanzer/Port/netpanzer-blitters.obj' libtool=no \
#	depfile='NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.Po' tmpdepfile='NetPanzer/Port/$(DEPDIR)/netpanzer-blitters.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Port/netpanzer-blitters.obj `if test -f 'NetPanzer/Port/blitters.cpp'; then $(CYGPATH_W) 'NetPanzer/Port/blitters.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Port/blitters.cpp'; fi`

NetPanzer/Views/Game/netpanzer-AreYouSureExitView.o: NetPanzer/Views/Game/AreYouSureExitView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-AreYouSureExitView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-AreYouSureExitView.o `test -f 'NetPanzer/Views/Game/AreYouSureExitView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/AreYouSureExitView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/AreYouSureExitView.cpp' object='NetPanzer/Views/Game/netpanzer-AreYouSureExitView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-AreYouSureExitView.o `test -f 'NetPanzer/Views/Game/AreYouSureExitView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/AreYouSureExitView.cpp

NetPanzer/Views/Game/netpanzer-AreYouSureExitView.obj: NetPanzer/Views/Game/AreYouSureExitView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-AreYouSureExitView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-AreYouSureExitView.obj `if test -f 'NetPanzer/Views/Game/AreYouSureExitView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/AreYouSureExitView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/AreYouSureExitView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/AreYouSureExitView.cpp' object='NetPanzer/Views/Game/netpanzer-AreYouSureExitView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureExitView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-AreYouSureExitView.obj `if test -f 'NetPanzer/Views/Game/AreYouSureExitView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/AreYouSureExitView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/AreYouSureExitView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-AreYouSureResignView.o: NetPanzer/Views/Game/AreYouSureResignView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-AreYouSureResignView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-AreYouSureResignView.o `test -f 'NetPanzer/Views/Game/AreYouSureResignView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/AreYouSureResignView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/AreYouSureResignView.cpp' object='NetPanzer/Views/Game/netpanzer-AreYouSureResignView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-AreYouSureResignView.o `test -f 'NetPanzer/Views/Game/AreYouSureResignView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/AreYouSureResignView.cpp

NetPanzer/Views/Game/netpanzer-AreYouSureResignView.obj: NetPanzer/Views/Game/AreYouSureResignView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-AreYouSureResignView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-AreYouSureResignView.obj `if test -f 'NetPanzer/Views/Game/AreYouSureResignView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/AreYouSureResignView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/AreYouSureResignView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/AreYouSureResignView.cpp' object='NetPanzer/Views/Game/netpanzer-AreYouSureResignView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-AreYouSureResignView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-AreYouSureResignView.obj `if test -f 'NetPanzer/Views/Game/AreYouSureResignView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/AreYouSureResignView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/AreYouSureResignView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-ChatView.o: NetPanzer/Views/Game/ChatView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-ChatView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-ChatView.o `test -f 'NetPanzer/Views/Game/ChatView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/ChatView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/ChatView.cpp' object='NetPanzer/Views/Game/netpanzer-ChatView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-ChatView.o `test -f 'NetPanzer/Views/Game/ChatView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/ChatView.cpp

NetPanzer/Views/Game/netpanzer-ChatView.obj: NetPanzer/Views/Game/ChatView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-ChatView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-ChatView.obj `if test -f 'NetPanzer/Views/Game/ChatView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/ChatView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/ChatView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/ChatView.cpp' object='NetPanzer/Views/Game/netpanzer-ChatView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ChatView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-ChatView.obj `if test -f 'NetPanzer/Views/Game/ChatView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/ChatView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/ChatView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-CodeStatsView.o: NetPanzer/Views/Game/CodeStatsView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-CodeStatsView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-CodeStatsView.o `test -f 'NetPanzer/Views/Game/CodeStatsView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/CodeStatsView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/CodeStatsView.cpp' object='NetPanzer/Views/Game/netpanzer-CodeStatsView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-CodeStatsView.o `test -f 'NetPanzer/Views/Game/CodeStatsView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/CodeStatsView.cpp

NetPanzer/Views/Game/netpanzer-CodeStatsView.obj: NetPanzer/Views/Game/CodeStatsView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-CodeStatsView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-CodeStatsView.obj `if test -f 'NetPanzer/Views/Game/CodeStatsView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/CodeStatsView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/CodeStatsView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/CodeStatsView.cpp' object='NetPanzer/Views/Game/netpanzer-CodeStatsView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-CodeStatsView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-CodeStatsView.obj `if test -f 'NetPanzer/Views/Game/CodeStatsView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/CodeStatsView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/CodeStatsView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-ControlPaletteView.o: NetPanzer/Views/Game/ControlPaletteView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-ControlPaletteView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-ControlPaletteView.o `test -f 'NetPanzer/Views/Game/ControlPaletteView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/ControlPaletteView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/ControlPaletteView.cpp' object='NetPanzer/Views/Game/netpanzer-ControlPaletteView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-ControlPaletteView.o `test -f 'NetPanzer/Views/Game/ControlPaletteView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/ControlPaletteView.cpp

NetPanzer/Views/Game/netpanzer-ControlPaletteView.obj: NetPanzer/Views/Game/ControlPaletteView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-ControlPaletteView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-ControlPaletteView.obj `if test -f 'NetPanzer/Views/Game/ControlPaletteView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/ControlPaletteView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/ControlPaletteView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/ControlPaletteView.cpp' object='NetPanzer/Views/Game/netpanzer-ControlPaletteView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlPaletteView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-ControlPaletteView.obj `if test -f 'NetPanzer/Views/Game/ControlPaletteView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/ControlPaletteView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/ControlPaletteView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-ControlView.o: NetPanzer/Views/Game/ControlView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-ControlView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-ControlView.o `test -f 'NetPanzer/Views/Game/ControlView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/ControlView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/ControlView.cpp' object='NetPanzer/Views/Game/netpanzer-ControlView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-ControlView.o `test -f 'NetPanzer/Views/Game/ControlView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/ControlView.cpp

NetPanzer/Views/Game/netpanzer-ControlView.obj: NetPanzer/Views/Game/ControlView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-ControlView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-ControlView.obj `if test -f 'NetPanzer/Views/Game/ControlView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/ControlView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/ControlView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/ControlView.cpp' object='NetPanzer/Views/Game/netpanzer-ControlView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ControlView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-ControlView.obj `if test -f 'NetPanzer/Views/Game/ControlView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/ControlView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/ControlView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-GameInfoView.o: NetPanzer/Views/Game/GameInfoView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-GameInfoView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-GameInfoView.o `test -f 'NetPanzer/Views/Game/GameInfoView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/GameInfoView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/GameInfoView.cpp' object='NetPanzer/Views/Game/netpanzer-GameInfoView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-GameInfoView.o `test -f 'NetPanzer/Views/Game/GameInfoView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/GameInfoView.cpp

NetPanzer/Views/Game/netpanzer-GameInfoView.obj: NetPanzer/Views/Game/GameInfoView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-GameInfoView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-GameInfoView.obj `if test -f 'NetPanzer/Views/Game/GameInfoView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/GameInfoView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/GameInfoView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/GameInfoView.cpp' object='NetPanzer/Views/Game/netpanzer-GameInfoView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameInfoView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-GameInfoView.obj `if test -f 'NetPanzer/Views/Game/GameInfoView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/GameInfoView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/GameInfoView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-GameTemplateView.o: NetPanzer/Views/Game/GameTemplateView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-GameTemplateView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-GameTemplateView.o `test -f 'NetPanzer/Views/Game/GameTemplateView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/GameTemplateView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/GameTemplateView.cpp' object='NetPanzer/Views/Game/netpanzer-GameTemplateView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-GameTemplateView.o `test -f 'NetPanzer/Views/Game/GameTemplateView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/GameTemplateView.cpp

NetPanzer/Views/Game/netpanzer-GameTemplateView.obj: NetPanzer/Views/Game/GameTemplateView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-GameTemplateView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-GameTemplateView.obj `if test -f 'NetPanzer/Views/Game/GameTemplateView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/GameTemplateView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/GameTemplateView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/GameTemplateView.cpp' object='NetPanzer/Views/Game/netpanzer-GameTemplateView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameTemplateView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-GameTemplateView.obj `if test -f 'NetPanzer/Views/Game/GameTemplateView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/GameTemplateView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/GameTemplateView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-GameToolbarView.o: NetPanzer/Views/Game/GameToolbarView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-GameToolbarView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-GameToolbarView.o `test -f 'NetPanzer/Views/Game/GameToolbarView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/GameToolbarView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/GameToolbarView.cpp' object='NetPanzer/Views/Game/netpanzer-GameToolbarView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-GameToolbarView.o `test -f 'NetPanzer/Views/Game/GameToolbarView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/GameToolbarView.cpp

NetPanzer/Views/Game/netpanzer-GameToolbarView.obj: NetPanzer/Views/Game/GameToolbarView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-GameToolbarView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-GameToolbarView.obj `if test -f 'NetPanzer/Views/Game/GameToolbarView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/GameToolbarView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/GameToolbarView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/GameToolbarView.cpp' object='NetPanzer/Views/Game/netpanzer-GameToolbarView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameToolbarView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-GameToolbarView.obj `if test -f 'NetPanzer/Views/Game/GameToolbarView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/GameToolbarView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/GameToolbarView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-GameView.o: NetPanzer/Views/Game/GameView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-GameView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-GameView.o `test -f 'NetPanzer/Views/Game/GameView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/GameView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/GameView.cpp' object='NetPanzer/Views/Game/netpanzer-GameView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-GameView.o `test -f 'NetPanzer/Views/Game/GameView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/GameView.cpp

NetPanzer/Views/Game/netpanzer-GameView.obj: NetPanzer/Views/Game/GameView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-GameView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-GameView.obj `if test -f 'NetPanzer/Views/Game/GameView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/GameView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/GameView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/GameView.cpp' object='NetPanzer/Views/Game/netpanzer-GameView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-GameView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-GameView.obj `if test -f 'NetPanzer/Views/Game/GameView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/GameView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/GameView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-HelpScrollView.o: NetPanzer/Views/Game/HelpScrollView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-HelpScrollView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-HelpScrollView.o `test -f 'NetPanzer/Views/Game/HelpScrollView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/HelpScrollView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/HelpScrollView.cpp' object='NetPanzer/Views/Game/netpanzer-HelpScrollView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-HelpScrollView.o `test -f 'NetPanzer/Views/Game/HelpScrollView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/HelpScrollView.cpp

NetPanzer/Views/Game/netpanzer-HelpScrollView.obj: NetPanzer/Views/Game/HelpScrollView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-HelpScrollView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-HelpScrollView.obj `if test -f 'NetPanzer/Views/Game/HelpScrollView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/HelpScrollView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/HelpScrollView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/HelpScrollView.cpp' object='NetPanzer/Views/Game/netpanzer-HelpScrollView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-HelpScrollView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-HelpScrollView.obj `if test -f 'NetPanzer/Views/Game/HelpScrollView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/HelpScrollView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/HelpScrollView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-LobbyView.o: NetPanzer/Views/Game/LobbyView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-LobbyView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-LobbyView.o `test -f 'NetPanzer/Views/Game/LobbyView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/LobbyView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/LobbyView.cpp' object='NetPanzer/Views/Game/netpanzer-LobbyView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-LobbyView.o `test -f 'NetPanzer/Views/Game/LobbyView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/LobbyView.cpp

NetPanzer/Views/Game/netpanzer-LobbyView.obj: NetPanzer/Views/Game/LobbyView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-LobbyView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-LobbyView.obj `if test -f 'NetPanzer/Views/Game/LobbyView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/LobbyView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/LobbyView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/LobbyView.cpp' object='NetPanzer/Views/Game/netpanzer-LobbyView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-LobbyView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-LobbyView.obj `if test -f 'NetPanzer/Views/Game/LobbyView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/LobbyView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/LobbyView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.o: NetPanzer/Views/Game/MiniMapOptionsView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.o `test -f 'NetPanzer/Views/Game/MiniMapOptionsView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/MiniMapOptionsView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/MiniMapOptionsView.cpp' object='NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.o `test -f 'NetPanzer/Views/Game/MiniMapOptionsView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/MiniMapOptionsView.cpp

NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.obj: NetPanzer/Views/Game/MiniMapOptionsView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.obj `if test -f 'NetPanzer/Views/Game/MiniMapOptionsView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/MiniMapOptionsView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/MiniMapOptionsView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/MiniMapOptionsView.cpp' object='NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapOptionsView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-MiniMapOptionsView.obj `if test -f 'NetPanzer/Views/Game/MiniMapOptionsView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/MiniMapOptionsView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/MiniMapOptionsView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-MiniMapView.o: NetPanzer/Views/Game/MiniMapView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-MiniMapView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-MiniMapView.o `test -f 'NetPanzer/Views/Game/MiniMapView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/MiniMapView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/MiniMapView.cpp' object='NetPanzer/Views/Game/netpanzer-MiniMapView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-MiniMapView.o `test -f 'NetPanzer/Views/Game/MiniMapView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/MiniMapView.cpp

NetPanzer/Views/Game/netpanzer-MiniMapView.obj: NetPanzer/Views/Game/MiniMapView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-MiniMapView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-MiniMapView.obj `if test -f 'NetPanzer/Views/Game/MiniMapView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/MiniMapView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/MiniMapView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/MiniMapView.cpp' object='NetPanzer/Views/Game/netpanzer-MiniMapView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniMapView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-MiniMapView.obj `if test -f 'NetPanzer/Views/Game/MiniMapView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/MiniMapView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/MiniMapView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-MiniRankView.o: NetPanzer/Views/Game/MiniRankView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-MiniRankView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-MiniRankView.o `test -f 'NetPanzer/Views/Game/MiniRankView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/MiniRankView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/MiniRankView.cpp' object='NetPanzer/Views/Game/netpanzer-MiniRankView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-MiniRankView.o `test -f 'NetPanzer/Views/Game/MiniRankView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/MiniRankView.cpp

NetPanzer/Views/Game/netpanzer-MiniRankView.obj: NetPanzer/Views/Game/MiniRankView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-MiniRankView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-MiniRankView.obj `if test -f 'NetPanzer/Views/Game/MiniRankView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/MiniRankView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/MiniRankView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/MiniRankView.cpp' object='NetPanzer/Views/Game/netpanzer-MiniRankView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-MiniRankView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-MiniRankView.obj `if test -f 'NetPanzer/Views/Game/MiniRankView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/MiniRankView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/MiniRankView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-ProgressView.o: NetPanzer/Views/Game/ProgressView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-ProgressView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-ProgressView.o `test -f 'NetPanzer/Views/Game/ProgressView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/ProgressView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/ProgressView.cpp' object='NetPanzer/Views/Game/netpanzer-ProgressView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-ProgressView.o `test -f 'NetPanzer/Views/Game/ProgressView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/ProgressView.cpp

NetPanzer/Views/Game/netpanzer-ProgressView.obj: NetPanzer/Views/Game/ProgressView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-ProgressView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-ProgressView.obj `if test -f 'NetPanzer/Views/Game/ProgressView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/ProgressView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/ProgressView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/ProgressView.cpp' object='NetPanzer/Views/Game/netpanzer-ProgressView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ProgressView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-ProgressView.obj `if test -f 'NetPanzer/Views/Game/ProgressView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/ProgressView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/ProgressView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-RankView.o: NetPanzer/Views/Game/RankView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-RankView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-RankView.o `test -f 'NetPanzer/Views/Game/RankView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/RankView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/RankView.cpp' object='NetPanzer/Views/Game/netpanzer-RankView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-RankView.o `test -f 'NetPanzer/Views/Game/RankView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/RankView.cpp

NetPanzer/Views/Game/netpanzer-RankView.obj: NetPanzer/Views/Game/RankView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-RankView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-RankView.obj `if test -f 'NetPanzer/Views/Game/RankView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/RankView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/RankView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/RankView.cpp' object='NetPanzer/Views/Game/netpanzer-RankView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-RankView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-RankView.obj `if test -f 'NetPanzer/Views/Game/RankView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/RankView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/RankView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-ResignView.o: NetPanzer/Views/Game/ResignView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-ResignView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-ResignView.o `test -f 'NetPanzer/Views/Game/ResignView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/ResignView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/ResignView.cpp' object='NetPanzer/Views/Game/netpanzer-ResignView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-ResignView.o `test -f 'NetPanzer/Views/Game/ResignView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/ResignView.cpp

NetPanzer/Views/Game/netpanzer-ResignView.obj: NetPanzer/Views/Game/ResignView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-ResignView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-ResignView.obj `if test -f 'NetPanzer/Views/Game/ResignView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/ResignView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/ResignView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/ResignView.cpp' object='NetPanzer/Views/Game/netpanzer-ResignView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-ResignView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-ResignView.obj `if test -f 'NetPanzer/Views/Game/ResignView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/ResignView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/ResignView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-VehicleSelectionView.o: NetPanzer/Views/Game/VehicleSelectionView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-VehicleSelectionView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-VehicleSelectionView.o `test -f 'NetPanzer/Views/Game/VehicleSelectionView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/VehicleSelectionView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/VehicleSelectionView.cpp' object='NetPanzer/Views/Game/netpanzer-VehicleSelectionView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-VehicleSelectionView.o `test -f 'NetPanzer/Views/Game/VehicleSelectionView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/VehicleSelectionView.cpp

NetPanzer/Views/Game/netpanzer-VehicleSelectionView.obj: NetPanzer/Views/Game/VehicleSelectionView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-VehicleSelectionView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-VehicleSelectionView.obj `if test -f 'NetPanzer/Views/Game/VehicleSelectionView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/VehicleSelectionView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/VehicleSelectionView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/VehicleSelectionView.cpp' object='NetPanzer/Views/Game/netpanzer-VehicleSelectionView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-VehicleSelectionView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-VehicleSelectionView.obj `if test -f 'NetPanzer/Views/Game/VehicleSelectionView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/VehicleSelectionView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/VehicleSelectionView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-WinnerMesgView.o: NetPanzer/Views/Game/WinnerMesgView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-WinnerMesgView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-WinnerMesgView.o `test -f 'NetPanzer/Views/Game/WinnerMesgView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/WinnerMesgView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/WinnerMesgView.cpp' object='NetPanzer/Views/Game/netpanzer-WinnerMesgView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-WinnerMesgView.o `test -f 'NetPanzer/Views/Game/WinnerMesgView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/WinnerMesgView.cpp

NetPanzer/Views/Game/netpanzer-WinnerMesgView.obj: NetPanzer/Views/Game/WinnerMesgView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-WinnerMesgView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-WinnerMesgView.obj `if test -f 'NetPanzer/Views/Game/WinnerMesgView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/WinnerMesgView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/WinnerMesgView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/WinnerMesgView.cpp' object='NetPanzer/Views/Game/netpanzer-WinnerMesgView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-WinnerMesgView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-WinnerMesgView.obj `if test -f 'NetPanzer/Views/Game/WinnerMesgView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/WinnerMesgView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/WinnerMesgView.cpp'; fi`

NetPanzer/Views/Game/netpanzer-oldCodeStatsView.o: NetPanzer/Views/Game/oldCodeStatsView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-oldCodeStatsView.o -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-oldCodeStatsView.o `test -f 'NetPanzer/Views/Game/oldCodeStatsView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/oldCodeStatsView.cpp; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/oldCodeStatsView.cpp' object='NetPanzer/Views/Game/netpanzer-oldCodeStatsView.o' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-oldCodeStatsView.o `test -f 'NetPanzer/Views/Game/oldCodeStatsView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/Game/oldCodeStatsView.cpp

NetPanzer/Views/Game/netpanzer-oldCodeStatsView.obj: NetPanzer/Views/Game/oldCodeStatsView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/Game/netpanzer-oldCodeStatsView.obj -MD -MP -MF "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.Tpo" \
	  -c -o NetPanzer/Views/Game/netpanzer-oldCodeStatsView.obj `if test -f 'NetPanzer/Views/Game/oldCodeStatsView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/oldCodeStatsView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/oldCodeStatsView.cpp'; fi`; \
	then mv "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.Tpo" "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.Po"; \
	else rm -f "NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/Game/oldCodeStatsView.cpp' object='NetPanzer/Views/Game/netpanzer-oldCodeStatsView.obj' libtool=no \
#	depfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.Po' tmpdepfile='NetPanzer/Views/Game/$(DEPDIR)/netpanzer-oldCodeStatsView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/Game/netpanzer-oldCodeStatsView.obj `if test -f 'NetPanzer/Views/Game/oldCodeStatsView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/Game/oldCodeStatsView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/Game/oldCodeStatsView.cpp'; fi`

NetPanzer/Views/netpanzer-GameViewGlobals.o: NetPanzer/Views/GameViewGlobals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/netpanzer-GameViewGlobals.o -MD -MP -MF "NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.Tpo" \
	  -c -o NetPanzer/Views/netpanzer-GameViewGlobals.o `test -f 'NetPanzer/Views/GameViewGlobals.cpp' || echo '$(srcdir)/'`NetPanzer/Views/GameViewGlobals.cpp; \
	then mv "NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.Tpo" "NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.Po"; \
	else rm -f "NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/GameViewGlobals.cpp' object='NetPanzer/Views/netpanzer-GameViewGlobals.o' libtool=no \
#	depfile='NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.Po' tmpdepfile='NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/netpanzer-GameViewGlobals.o `test -f 'NetPanzer/Views/GameViewGlobals.cpp' || echo '$(srcdir)/'`NetPanzer/Views/GameViewGlobals.cpp

NetPanzer/Views/netpanzer-GameViewGlobals.obj: NetPanzer/Views/GameViewGlobals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/netpanzer-GameViewGlobals.obj -MD -MP -MF "NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.Tpo" \
	  -c -o NetPanzer/Views/netpanzer-GameViewGlobals.obj `if test -f 'NetPanzer/Views/GameViewGlobals.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/GameViewGlobals.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/GameViewGlobals.cpp'; fi`; \
	then mv "NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.Tpo" "NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.Po"; \
	else rm -f "NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/GameViewGlobals.cpp' object='NetPanzer/Views/netpanzer-GameViewGlobals.obj' libtool=no \
#	depfile='NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.Po' tmpdepfile='NetPanzer/Views/$(DEPDIR)/netpanzer-GameViewGlobals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/netpanzer-GameViewGlobals.obj `if test -f 'NetPanzer/Views/GameViewGlobals.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/GameViewGlobals.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/GameViewGlobals.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.o: NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.o `test -f 'NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.o `test -f 'NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.obj: NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-DirectPlayErrorExceptionView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-DirectPlayErrorExceptionView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/DirectPlayErrorExceptionView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.o: NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.o `test -f 'NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.o `test -f 'NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.obj: NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-FlagSelectionView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-FlagSelectionView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/FlagSelectionView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.o: NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.o `test -f 'NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.o `test -f 'NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.obj: NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionHostView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionHostView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/GetSessionHostView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.o: NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.o `test -f 'NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.o `test -f 'NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.obj: NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-GetSessionView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-GetSessionView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/GetSessionView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.o: NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.o `test -f 'NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.o `test -f 'NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.obj: NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostJoinTemplateView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-HostJoinTemplateView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/HostJoinTemplateView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.o: NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.o `test -f 'NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.o `test -f 'NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.obj: NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostOptionsView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-HostOptionsView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/HostOptionsView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.o: NetPanzer/Views/MainMenu/Multi/HostView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.o `test -f 'NetPanzer/Views/MainMenu/Multi/HostView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/HostView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/HostView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.o `test -f 'NetPanzer/Views/MainMenu/Multi/HostView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/HostView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.obj: NetPanzer/Views/MainMenu/Multi/HostView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/HostView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/HostView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/HostView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/HostView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-HostView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-HostView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/HostView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/HostView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/HostView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.o: NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.o `test -f 'NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.o `test -f 'NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.obj: NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-IPAddressView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-IPAddressView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/IPAddressView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.o: NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.o `test -f 'NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.o `test -f 'NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.obj: NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-ImageSelectorView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-ImageSelectorView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/ImageSelectorView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.o: NetPanzer/Views/MainMenu/Multi/JoinView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.o `test -f 'NetPanzer/Views/MainMenu/Multi/JoinView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/JoinView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/JoinView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.o `test -f 'NetPanzer/Views/MainMenu/Multi/JoinView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/JoinView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.obj: NetPanzer/Views/MainMenu/Multi/JoinView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/JoinView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/JoinView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/JoinView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/JoinView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-JoinView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-JoinView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/JoinView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/JoinView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/JoinView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.o: NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.o `test -f 'NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.o `test -f 'NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.obj: NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MapSelectionView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-MapSelectionView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/MapSelectionView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.o: NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.o `test -f 'NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.o `test -f 'NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.obj: NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiMapSelectorView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-MultiMapSelectorView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/MultiMapSelectorView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.o: NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.o `test -f 'NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.o `test -f 'NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.obj: NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-MultiVehicleSelectorView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-MultiVehicleSelectorView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/MultiVehicleSelectorView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.o: NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.o `test -f 'NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.o `test -f 'NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.obj: NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-PlayerNameView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-PlayerNameView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/PlayerNameView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.o: NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.o `test -f 'NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.o `test -f 'NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.obj: NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitColorView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-UnitColorView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/UnitColorView.cpp'; fi`

NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.o: NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.o `test -f 'NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.o `test -f 'NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp

NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.obj: NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.Tpo" "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp' object='NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/netpanzer-UnitSelectionView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Multi/netpanzer-UnitSelectionView.obj `if test -f 'NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Multi/UnitSelectionView.cpp'; fi`

NetPanzer/Views/MainMenu/netpanzer-HelpView.o: NetPanzer/Views/MainMenu/HelpView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-HelpView.o -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-HelpView.o `test -f 'NetPanzer/Views/MainMenu/HelpView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/HelpView.cpp; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/HelpView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-HelpView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-HelpView.o `test -f 'NetPanzer/Views/MainMenu/HelpView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/HelpView.cpp

NetPanzer/Views/MainMenu/netpanzer-HelpView.obj: NetPanzer/Views/MainMenu/HelpView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-HelpView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-HelpView.obj `if test -f 'NetPanzer/Views/MainMenu/HelpView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/HelpView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/HelpView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/HelpView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-HelpView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-HelpView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-HelpView.obj `if test -f 'NetPanzer/Views/MainMenu/HelpView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/HelpView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/HelpView.cpp'; fi`

NetPanzer/Views/MainMenu/netpanzer-MainMenuView.o: NetPanzer/Views/MainMenu/MainMenuView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-MainMenuView.o -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-MainMenuView.o `test -f 'NetPanzer/Views/MainMenu/MainMenuView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/MainMenuView.cpp; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/MainMenuView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-MainMenuView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-MainMenuView.o `test -f 'NetPanzer/Views/MainMenu/MainMenuView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/MainMenuView.cpp

NetPanzer/Views/MainMenu/netpanzer-MainMenuView.obj: NetPanzer/Views/MainMenu/MainMenuView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-MainMenuView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-MainMenuView.obj `if test -f 'NetPanzer/Views/MainMenu/MainMenuView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/MainMenuView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/MainMenuView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/MainMenuView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-MainMenuView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MainMenuView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-MainMenuView.obj `if test -f 'NetPanzer/Views/MainMenu/MainMenuView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/MainMenuView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/MainMenuView.cpp'; fi`

NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.o: NetPanzer/Views/MainMenu/MenuTemplateView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.o -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.o `test -f 'NetPanzer/Views/MainMenu/MenuTemplateView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/MenuTemplateView.cpp; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/MenuTemplateView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.o `test -f 'NetPanzer/Views/MainMenu/MenuTemplateView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/MenuTemplateView.cpp

NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.obj: NetPanzer/Views/MainMenu/MenuTemplateView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.obj `if test -f 'NetPanzer/Views/MainMenu/MenuTemplateView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/MenuTemplateView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/MenuTemplateView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/MenuTemplateView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-MenuTemplateView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-MenuTemplateView.obj `if test -f 'NetPanzer/Views/MainMenu/MenuTemplateView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/MenuTemplateView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/MenuTemplateView.cpp'; fi`

NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.o: NetPanzer/Views/MainMenu/OptionsTemplateView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.o -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.o `test -f 'NetPanzer/Views/MainMenu/OptionsTemplateView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/OptionsTemplateView.cpp; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/OptionsTemplateView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.o `test -f 'NetPanzer/Views/MainMenu/OptionsTemplateView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/OptionsTemplateView.cpp

NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.obj: NetPanzer/Views/MainMenu/OptionsTemplateView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.obj `if test -f 'NetPanzer/Views/MainMenu/OptionsTemplateView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/OptionsTemplateView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/OptionsTemplateView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/OptionsTemplateView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OptionsTemplateView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-OptionsTemplateView.obj `if test -f 'NetPanzer/Views/MainMenu/OptionsTemplateView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/OptionsTemplateView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/OptionsTemplateView.cpp'; fi`

NetPanzer/Views/MainMenu/netpanzer-OrderingView.o: NetPanzer/Views/MainMenu/OrderingView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-OrderingView.o -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-OrderingView.o `test -f 'NetPanzer/Views/MainMenu/OrderingView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/OrderingView.cpp; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/OrderingView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-OrderingView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-OrderingView.o `test -f 'NetPanzer/Views/MainMenu/OrderingView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/OrderingView.cpp

NetPanzer/Views/MainMenu/netpanzer-OrderingView.obj: NetPanzer/Views/MainMenu/OrderingView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-OrderingView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-OrderingView.obj `if test -f 'NetPanzer/Views/MainMenu/OrderingView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/OrderingView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/OrderingView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/OrderingView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-OrderingView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-OrderingView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-OrderingView.obj `if test -f 'NetPanzer/Views/MainMenu/OrderingView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/OrderingView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/OrderingView.cpp'; fi`

NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.o: NetPanzer/Views/MainMenu/RMouseHackView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.o -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.o `test -f 'NetPanzer/Views/MainMenu/RMouseHackView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/RMouseHackView.cpp; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/RMouseHackView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.o `test -f 'NetPanzer/Views/MainMenu/RMouseHackView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/RMouseHackView.cpp

NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.obj: NetPanzer/Views/MainMenu/RMouseHackView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.obj `if test -f 'NetPanzer/Views/MainMenu/RMouseHackView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/RMouseHackView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/RMouseHackView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/RMouseHackView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-RMouseHackView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-RMouseHackView.obj `if test -f 'NetPanzer/Views/MainMenu/RMouseHackView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/RMouseHackView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/RMouseHackView.cpp'; fi`

NetPanzer/Views/MainMenu/netpanzer-SkirmishView.o: NetPanzer/Views/MainMenu/SkirmishView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-SkirmishView.o -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-SkirmishView.o `test -f 'NetPanzer/Views/MainMenu/SkirmishView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/SkirmishView.cpp; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/SkirmishView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-SkirmishView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-SkirmishView.o `test -f 'NetPanzer/Views/MainMenu/SkirmishView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/SkirmishView.cpp

NetPanzer/Views/MainMenu/netpanzer-SkirmishView.obj: NetPanzer/Views/MainMenu/SkirmishView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-SkirmishView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-SkirmishView.obj `if test -f 'NetPanzer/Views/MainMenu/SkirmishView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/SkirmishView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/SkirmishView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/SkirmishView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-SkirmishView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SkirmishView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-SkirmishView.obj `if test -f 'NetPanzer/Views/MainMenu/SkirmishView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/SkirmishView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/SkirmishView.cpp'; fi`

NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.o: NetPanzer/Views/MainMenu/SpecialButtonView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.o -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.o `test -f 'NetPanzer/Views/MainMenu/SpecialButtonView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/SpecialButtonView.cpp; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/SpecialButtonView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.o `test -f 'NetPanzer/Views/MainMenu/SpecialButtonView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/SpecialButtonView.cpp

NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.obj: NetPanzer/Views/MainMenu/SpecialButtonView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.obj `if test -f 'NetPanzer/Views/MainMenu/SpecialButtonView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/SpecialButtonView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/SpecialButtonView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.Tpo" "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/SpecialButtonView.cpp' object='NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.Po' tmpdepfile='NetPanzer/Views/MainMenu/$(DEPDIR)/netpanzer-SpecialButtonView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/netpanzer-SpecialButtonView.obj `if test -f 'NetPanzer/Views/MainMenu/SpecialButtonView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/SpecialButtonView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/SpecialButtonView.cpp'; fi`

NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.o: NetPanzer/Views/MainMenu/Options/ControlsView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.o `test -f 'NetPanzer/Views/MainMenu/Options/ControlsView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Options/ControlsView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.Tpo" "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Options/ControlsView.cpp' object='NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.o `test -f 'NetPanzer/Views/MainMenu/Options/ControlsView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Options/ControlsView.cpp

NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.obj: NetPanzer/Views/MainMenu/Options/ControlsView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.obj `if test -f 'NetPanzer/Views/MainMenu/Options/ControlsView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Options/ControlsView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Options/ControlsView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.Tpo" "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Options/ControlsView.cpp' object='NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-ControlsView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Options/netpanzer-ControlsView.obj `if test -f 'NetPanzer/Views/MainMenu/Options/ControlsView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Options/ControlsView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Options/ControlsView.cpp'; fi`

NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.o: NetPanzer/Views/MainMenu/Options/InterfaceView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.o `test -f 'NetPanzer/Views/MainMenu/Options/InterfaceView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Options/InterfaceView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.Tpo" "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Options/InterfaceView.cpp' object='NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.o `test -f 'NetPanzer/Views/MainMenu/Options/InterfaceView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Options/InterfaceView.cpp

NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.obj: NetPanzer/Views/MainMenu/Options/InterfaceView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.obj `if test -f 'NetPanzer/Views/MainMenu/Options/InterfaceView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Options/InterfaceView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Options/InterfaceView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.Tpo" "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Options/InterfaceView.cpp' object='NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-InterfaceView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Options/netpanzer-InterfaceView.obj `if test -f 'NetPanzer/Views/MainMenu/Options/InterfaceView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Options/InterfaceView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Options/InterfaceView.cpp'; fi`

NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.o: NetPanzer/Views/MainMenu/Options/SoundView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.o `test -f 'NetPanzer/Views/MainMenu/Options/SoundView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Options/SoundView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.Tpo" "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Options/SoundView.cpp' object='NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.o `test -f 'NetPanzer/Views/MainMenu/Options/SoundView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Options/SoundView.cpp

NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.obj: NetPanzer/Views/MainMenu/Options/SoundView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.obj `if test -f 'NetPanzer/Views/MainMenu/Options/SoundView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Options/SoundView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Options/SoundView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.Tpo" "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Options/SoundView.cpp' object='NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-SoundView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Options/netpanzer-SoundView.obj `if test -f 'NetPanzer/Views/MainMenu/Options/SoundView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Options/SoundView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Options/SoundView.cpp'; fi`

NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.o: NetPanzer/Views/MainMenu/Options/VisualsView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.o -MD -MP -MF "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.o `test -f 'NetPanzer/Views/MainMenu/Options/VisualsView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Options/VisualsView.cpp; \
	then mv "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.Tpo" "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Options/VisualsView.cpp' object='NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.o' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.o `test -f 'NetPanzer/Views/MainMenu/Options/VisualsView.cpp' || echo '$(srcdir)/'`NetPanzer/Views/MainMenu/Options/VisualsView.cpp

NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.obj: NetPanzer/Views/MainMenu/Options/VisualsView.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.obj -MD -MP -MF "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.Tpo" \
	  -c -o NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.obj `if test -f 'NetPanzer/Views/MainMenu/Options/VisualsView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Options/VisualsView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Options/VisualsView.cpp'; fi`; \
	then mv "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.Tpo" "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.Po"; \
	else rm -f "NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.Tpo"; exit 1; \
	fi
#	source='NetPanzer/Views/MainMenu/Options/VisualsView.cpp' object='NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.obj' libtool=no \
#	depfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.Po' tmpdepfile='NetPanzer/Views/MainMenu/Options/$(DEPDIR)/netpanzer-VisualsView.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o NetPanzer/Views/MainMenu/Options/netpanzer-VisualsView.obj `if test -f 'NetPanzer/Views/MainMenu/Options/VisualsView.cpp'; then $(CYGPATH_W) 'NetPanzer/Views/MainMenu/Options/VisualsView.cpp'; else $(CYGPATH_W) '$(srcdir)/NetPanzer/Views/MainMenu/Options/VisualsView.cpp'; fi`

UILib/Network/netpanzer-Client.o: UILib/Network/Client.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/Network/netpanzer-Client.o -MD -MP -MF "UILib/Network/$(DEPDIR)/netpanzer-Client.Tpo" \
	  -c -o UILib/Network/netpanzer-Client.o `test -f 'UILib/Network/Client.cpp' || echo '$(srcdir)/'`UILib/Network/Client.cpp; \
	then mv "UILib/Network/$(DEPDIR)/netpanzer-Client.Tpo" "UILib/Network/$(DEPDIR)/netpanzer-Client.Po"; \
	else rm -f "UILib/Network/$(DEPDIR)/netpanzer-Client.Tpo"; exit 1; \
	fi
#	source='UILib/Network/Client.cpp' object='UILib/Network/netpanzer-Client.o' libtool=no \
#	depfile='UILib/Network/$(DEPDIR)/netpanzer-Client.Po' tmpdepfile='UILib/Network/$(DEPDIR)/netpanzer-Client.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/Network/netpanzer-Client.o `test -f 'UILib/Network/Client.cpp' || echo '$(srcdir)/'`UILib/Network/Client.cpp

UILib/Network/netpanzer-Client.obj: UILib/Network/Client.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/Network/netpanzer-Client.obj -MD -MP -MF "UILib/Network/$(DEPDIR)/netpanzer-Client.Tpo" \
	  -c -o UILib/Network/netpanzer-Client.obj `if test -f 'UILib/Network/Client.cpp'; then $(CYGPATH_W) 'UILib/Network/Client.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Network/Client.cpp'; fi`; \
	then mv "UILib/Network/$(DEPDIR)/netpanzer-Client.Tpo" "UILib/Network/$(DEPDIR)/netpanzer-Client.Po"; \
	else rm -f "UILib/Network/$(DEPDIR)/netpanzer-Client.Tpo"; exit 1; \
	fi
#	source='UILib/Network/Client.cpp' object='UILib/Network/netpanzer-Client.obj' libtool=no \
#	depfile='UILib/Network/$(DEPDIR)/netpanzer-Client.Po' tmpdepfile='UILib/Network/$(DEPDIR)/netpanzer-Client.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/Network/netpanzer-Client.obj `if test -f 'UILib/Network/Client.cpp'; then $(CYGPATH_W) 'UILib/Network/Client.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Network/Client.cpp'; fi`

UILib/Network/netpanzer-ClientList.o: UILib/Network/ClientList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/Network/netpanzer-ClientList.o -MD -MP -MF "UILib/Network/$(DEPDIR)/netpanzer-ClientList.Tpo" \
	  -c -o UILib/Network/netpanzer-ClientList.o `test -f 'UILib/Network/ClientList.cpp' || echo '$(srcdir)/'`UILib/Network/ClientList.cpp; \
	then mv "UILib/Network/$(DEPDIR)/netpanzer-ClientList.Tpo" "UILib/Network/$(DEPDIR)/netpanzer-ClientList.Po"; \
	else rm -f "UILib/Network/$(DEPDIR)/netpanzer-ClientList.Tpo"; exit 1; \
	fi
#	source='UILib/Network/ClientList.cpp' object='UILib/Network/netpanzer-ClientList.o' libtool=no \
#	depfile='UILib/Network/$(DEPDIR)/netpanzer-ClientList.Po' tmpdepfile='UILib/Network/$(DEPDIR)/netpanzer-ClientList.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/Network/netpanzer-ClientList.o `test -f 'UILib/Network/ClientList.cpp' || echo '$(srcdir)/'`UILib/Network/ClientList.cpp

UILib/Network/netpanzer-ClientList.obj: UILib/Network/ClientList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/Network/netpanzer-ClientList.obj -MD -MP -MF "UILib/Network/$(DEPDIR)/netpanzer-ClientList.Tpo" \
	  -c -o UILib/Network/netpanzer-ClientList.obj `if test -f 'UILib/Network/ClientList.cpp'; then $(CYGPATH_W) 'UILib/Network/ClientList.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Network/ClientList.cpp'; fi`; \
	then mv "UILib/Network/$(DEPDIR)/netpanzer-ClientList.Tpo" "UILib/Network/$(DEPDIR)/netpanzer-ClientList.Po"; \
	else rm -f "UILib/Network/$(DEPDIR)/netpanzer-ClientList.Tpo"; exit 1; \
	fi
#	source='UILib/Network/ClientList.cpp' object='UILib/Network/netpanzer-ClientList.obj' libtool=no \
#	depfile='UILib/Network/$(DEPDIR)/netpanzer-ClientList.Po' tmpdepfile='UILib/Network/$(DEPDIR)/netpanzer-ClientList.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/Network/netpanzer-ClientList.obj `if test -f 'UILib/Network/ClientList.cpp'; then $(CYGPATH_W) 'UILib/Network/ClientList.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Network/ClientList.cpp'; fi`

UILib/Network/netpanzer-ClientSocket.o: UILib/Network/ClientSocket.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/Network/netpanzer-ClientSocket.o -MD -MP -MF "UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.Tpo" \
	  -c -o UILib/Network/netpanzer-ClientSocket.o `test -f 'UILib/Network/ClientSocket.cpp' || echo '$(srcdir)/'`UILib/Network/ClientSocket.cpp; \
	then mv "UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.Tpo" "UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.Po"; \
	else rm -f "UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.Tpo"; exit 1; \
	fi
#	source='UILib/Network/ClientSocket.cpp' object='UILib/Network/netpanzer-ClientSocket.o' libtool=no \
#	depfile='UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.Po' tmpdepfile='UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/Network/netpanzer-ClientSocket.o `test -f 'UILib/Network/ClientSocket.cpp' || echo '$(srcdir)/'`UILib/Network/ClientSocket.cpp

UILib/Network/netpanzer-ClientSocket.obj: UILib/Network/ClientSocket.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/Network/netpanzer-ClientSocket.obj -MD -MP -MF "UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.Tpo" \
	  -c -o UILib/Network/netpanzer-ClientSocket.obj `if test -f 'UILib/Network/ClientSocket.cpp'; then $(CYGPATH_W) 'UILib/Network/ClientSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Network/ClientSocket.cpp'; fi`; \
	then mv "UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.Tpo" "UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.Po"; \
	else rm -f "UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.Tpo"; exit 1; \
	fi
#	source='UILib/Network/ClientSocket.cpp' object='UILib/Network/netpanzer-ClientSocket.obj' libtool=no \
#	depfile='UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.Po' tmpdepfile='UILib/Network/$(DEPDIR)/netpanzer-ClientSocket.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/Network/netpanzer-ClientSocket.obj `if test -f 'UILib/Network/ClientSocket.cpp'; then $(CYGPATH_W) 'UILib/Network/ClientSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Network/ClientSocket.cpp'; fi`

UILib/Network/netpanzer-ServerSocket.o: UILib/Network/ServerSocket.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/Network/netpanzer-ServerSocket.o -MD -MP -MF "UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.Tpo" \
	  -c -o UILib/Network/netpanzer-ServerSocket.o `test -f 'UILib/Network/ServerSocket.cpp' || echo '$(srcdir)/'`UILib/Network/ServerSocket.cpp; \
	then mv "UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.Tpo" "UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.Po"; \
	else rm -f "UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.Tpo"; exit 1; \
	fi
#	source='UILib/Network/ServerSocket.cpp' object='UILib/Network/netpanzer-ServerSocket.o' libtool=no \
#	depfile='UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.Po' tmpdepfile='UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/Network/netpanzer-ServerSocket.o `test -f 'UILib/Network/ServerSocket.cpp' || echo '$(srcdir)/'`UILib/Network/ServerSocket.cpp

UILib/Network/netpanzer-ServerSocket.obj: UILib/Network/ServerSocket.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/Network/netpanzer-ServerSocket.obj -MD -MP -MF "UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.Tpo" \
	  -c -o UILib/Network/netpanzer-ServerSocket.obj `if test -f 'UILib/Network/ServerSocket.cpp'; then $(CYGPATH_W) 'UILib/Network/ServerSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Network/ServerSocket.cpp'; fi`; \
	then mv "UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.Tpo" "UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.Po"; \
	else rm -f "UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.Tpo"; exit 1; \
	fi
#	source='UILib/Network/ServerSocket.cpp' object='UILib/Network/netpanzer-ServerSocket.obj' libtool=no \
#	depfile='UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.Po' tmpdepfile='UILib/Network/$(DEPDIR)/netpanzer-ServerSocket.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/Network/netpanzer-ServerSocket.obj `if test -f 'UILib/Network/ServerSocket.cpp'; then $(CYGPATH_W) 'UILib/Network/ServerSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Network/ServerSocket.cpp'; fi`

UILib/Network/netpanzer-SocketMessage.o: UILib/Network/SocketMessage.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/Network/netpanzer-SocketMessage.o -MD -MP -MF "UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.Tpo" \
	  -c -o UILib/Network/netpanzer-SocketMessage.o `test -f 'UILib/Network/SocketMessage.cpp' || echo '$(srcdir)/'`UILib/Network/SocketMessage.cpp; \
	then mv "UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.Tpo" "UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.Po"; \
	else rm -f "UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.Tpo"; exit 1; \
	fi
#	source='UILib/Network/SocketMessage.cpp' object='UILib/Network/netpanzer-SocketMessage.o' libtool=no \
#	depfile='UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.Po' tmpdepfile='UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/Network/netpanzer-SocketMessage.o `test -f 'UILib/Network/SocketMessage.cpp' || echo '$(srcdir)/'`UILib/Network/SocketMessage.cpp

UILib/Network/netpanzer-SocketMessage.obj: UILib/Network/SocketMessage.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/Network/netpanzer-SocketMessage.obj -MD -MP -MF "UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.Tpo" \
	  -c -o UILib/Network/netpanzer-SocketMessage.obj `if test -f 'UILib/Network/SocketMessage.cpp'; then $(CYGPATH_W) 'UILib/Network/SocketMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Network/SocketMessage.cpp'; fi`; \
	then mv "UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.Tpo" "UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.Po"; \
	else rm -f "UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.Tpo"; exit 1; \
	fi
#	source='UILib/Network/SocketMessage.cpp' object='UILib/Network/netpanzer-SocketMessage.obj' libtool=no \
#	depfile='UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.Po' tmpdepfile='UILib/Network/$(DEPDIR)/netpanzer-SocketMessage.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/Network/netpanzer-SocketMessage.obj `if test -f 'UILib/Network/SocketMessage.cpp'; then $(CYGPATH_W) 'UILib/Network/SocketMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Network/SocketMessage.cpp'; fi`

UILib/Network/netpanzer-SDLNet.o: UILib/Network/SDLNet.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/Network/netpanzer-SDLNet.o -MD -MP -MF "UILib/Network/$(DEPDIR)/netpanzer-SDLNet.Tpo" \
	  -c -o UILib/Network/netpanzer-SDLNet.o `test -f 'UILib/Network/SDLNet.cpp' || echo '$(srcdir)/'`UILib/Network/SDLNet.cpp; \
	then mv "UILib/Network/$(DEPDIR)/netpanzer-SDLNet.Tpo" "UILib/Network/$(DEPDIR)/netpanzer-SDLNet.Po"; \
	else rm -f "UILib/Network/$(DEPDIR)/netpanzer-SDLNet.Tpo"; exit 1; \
	fi
#	source='UILib/Network/SDLNet.cpp' object='UILib/Network/netpanzer-SDLNet.o' libtool=no \
#	depfile='UILib/Network/$(DEPDIR)/netpanzer-SDLNet.Po' tmpdepfile='UILib/Network/$(DEPDIR)/netpanzer-SDLNet.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/Network/netpanzer-SDLNet.o `test -f 'UILib/Network/SDLNet.cpp' || echo '$(srcdir)/'`UILib/Network/SDLNet.cpp

UILib/Network/netpanzer-SDLNet.obj: UILib/Network/SDLNet.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/Network/netpanzer-SDLNet.obj -MD -MP -MF "UILib/Network/$(DEPDIR)/netpanzer-SDLNet.Tpo" \
	  -c -o UILib/Network/netpanzer-SDLNet.obj `if test -f 'UILib/Network/SDLNet.cpp'; then $(CYGPATH_W) 'UILib/Network/SDLNet.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Network/SDLNet.cpp'; fi`; \
	then mv "UILib/Network/$(DEPDIR)/netpanzer-SDLNet.Tpo" "UILib/Network/$(DEPDIR)/netpanzer-SDLNet.Po"; \
	else rm -f "UILib/Network/$(DEPDIR)/netpanzer-SDLNet.Tpo"; exit 1; \
	fi
#	source='UILib/Network/SDLNet.cpp' object='UILib/Network/netpanzer-SDLNet.obj' libtool=no \
#	depfile='UILib/Network/$(DEPDIR)/netpanzer-SDLNet.Po' tmpdepfile='UILib/Network/$(DEPDIR)/netpanzer-SDLNet.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/Network/netpanzer-SDLNet.obj `if test -f 'UILib/Network/SDLNet.cpp'; then $(CYGPATH_W) 'UILib/Network/SDLNet.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Network/SDLNet.cpp'; fi`

UILib/netpanzer-DummySound.o: UILib/DummySound.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/netpanzer-DummySound.o -MD -MP -MF "UILib/$(DEPDIR)/netpanzer-DummySound.Tpo" \
	  -c -o UILib/netpanzer-DummySound.o `test -f 'UILib/DummySound.cpp' || echo '$(srcdir)/'`UILib/DummySound.cpp; \
	then mv "UILib/$(DEPDIR)/netpanzer-DummySound.Tpo" "UILib/$(DEPDIR)/netpanzer-DummySound.Po"; \
	else rm -f "UILib/$(DEPDIR)/netpanzer-DummySound.Tpo"; exit 1; \
	fi
#	source='UILib/DummySound.cpp' object='UILib/netpanzer-DummySound.o' libtool=no \
#	depfile='UILib/$(DEPDIR)/netpanzer-DummySound.Po' tmpdepfile='UILib/$(DEPDIR)/netpanzer-DummySound.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/netpanzer-DummySound.o `test -f 'UILib/DummySound.cpp' || echo '$(srcdir)/'`UILib/DummySound.cpp

UILib/netpanzer-DummySound.obj: UILib/DummySound.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/netpanzer-DummySound.obj -MD -MP -MF "UILib/$(DEPDIR)/netpanzer-DummySound.Tpo" \
	  -c -o UILib/netpanzer-DummySound.obj `if test -f 'UILib/DummySound.cpp'; then $(CYGPATH_W) 'UILib/DummySound.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/DummySound.cpp'; fi`; \
	then mv "UILib/$(DEPDIR)/netpanzer-DummySound.Tpo" "UILib/$(DEPDIR)/netpanzer-DummySound.Po"; \
	else rm -f "UILib/$(DEPDIR)/netpanzer-DummySound.Tpo"; exit 1; \
	fi
#	source='UILib/DummySound.cpp' object='UILib/netpanzer-DummySound.obj' libtool=no \
#	depfile='UILib/$(DEPDIR)/netpanzer-DummySound.Po' tmpdepfile='UILib/$(DEPDIR)/netpanzer-DummySound.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/netpanzer-DummySound.obj `if test -f 'UILib/DummySound.cpp'; then $(CYGPATH_W) 'UILib/DummySound.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/DummySound.cpp'; fi`

UILib/netpanzer-Sound.o: UILib/Sound.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/netpanzer-Sound.o -MD -MP -MF "UILib/$(DEPDIR)/netpanzer-Sound.Tpo" \
	  -c -o UILib/netpanzer-Sound.o `test -f 'UILib/Sound.cpp' || echo '$(srcdir)/'`UILib/Sound.cpp; \
	then mv "UILib/$(DEPDIR)/netpanzer-Sound.Tpo" "UILib/$(DEPDIR)/netpanzer-Sound.Po"; \
	else rm -f "UILib/$(DEPDIR)/netpanzer-Sound.Tpo"; exit 1; \
	fi
#	source='UILib/Sound.cpp' object='UILib/netpanzer-Sound.o' libtool=no \
#	depfile='UILib/$(DEPDIR)/netpanzer-Sound.Po' tmpdepfile='UILib/$(DEPDIR)/netpanzer-Sound.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/netpanzer-Sound.o `test -f 'UILib/Sound.cpp' || echo '$(srcdir)/'`UILib/Sound.cpp

UILib/netpanzer-Sound.obj: UILib/Sound.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/netpanzer-Sound.obj -MD -MP -MF "UILib/$(DEPDIR)/netpanzer-Sound.Tpo" \
	  -c -o UILib/netpanzer-Sound.obj `if test -f 'UILib/Sound.cpp'; then $(CYGPATH_W) 'UILib/Sound.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Sound.cpp'; fi`; \
	then mv "UILib/$(DEPDIR)/netpanzer-Sound.Tpo" "UILib/$(DEPDIR)/netpanzer-Sound.Po"; \
	else rm -f "UILib/$(DEPDIR)/netpanzer-Sound.Tpo"; exit 1; \
	fi
#	source='UILib/Sound.cpp' object='UILib/netpanzer-Sound.obj' libtool=no \
#	depfile='UILib/$(DEPDIR)/netpanzer-Sound.Po' tmpdepfile='UILib/$(DEPDIR)/netpanzer-Sound.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/netpanzer-Sound.obj `if test -f 'UILib/Sound.cpp'; then $(CYGPATH_W) 'UILib/Sound.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/Sound.cpp'; fi`

UILib/netpanzer-UIDraw.o: UILib/UIDraw.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/netpanzer-UIDraw.o -MD -MP -MF "UILib/$(DEPDIR)/netpanzer-UIDraw.Tpo" \
	  -c -o UILib/netpanzer-UIDraw.o `test -f 'UILib/UIDraw.cpp' || echo '$(srcdir)/'`UILib/UIDraw.cpp; \
	then mv "UILib/$(DEPDIR)/netpanzer-UIDraw.Tpo" "UILib/$(DEPDIR)/netpanzer-UIDraw.Po"; \
	else rm -f "UILib/$(DEPDIR)/netpanzer-UIDraw.Tpo"; exit 1; \
	fi
#	source='UILib/UIDraw.cpp' object='UILib/netpanzer-UIDraw.o' libtool=no \
#	depfile='UILib/$(DEPDIR)/netpanzer-UIDraw.Po' tmpdepfile='UILib/$(DEPDIR)/netpanzer-UIDraw.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/netpanzer-UIDraw.o `test -f 'UILib/UIDraw.cpp' || echo '$(srcdir)/'`UILib/UIDraw.cpp

UILib/netpanzer-UIDraw.obj: UILib/UIDraw.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/netpanzer-UIDraw.obj -MD -MP -MF "UILib/$(DEPDIR)/netpanzer-UIDraw.Tpo" \
	  -c -o UILib/netpanzer-UIDraw.obj `if test -f 'UILib/UIDraw.cpp'; then $(CYGPATH_W) 'UILib/UIDraw.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/UIDraw.cpp'; fi`; \
	then mv "UILib/$(DEPDIR)/netpanzer-UIDraw.Tpo" "UILib/$(DEPDIR)/netpanzer-UIDraw.Po"; \
	else rm -f "UILib/$(DEPDIR)/netpanzer-UIDraw.Tpo"; exit 1; \
	fi
#	source='UILib/UIDraw.cpp' object='UILib/netpanzer-UIDraw.obj' libtool=no \
#	depfile='UILib/$(DEPDIR)/netpanzer-UIDraw.Po' tmpdepfile='UILib/$(DEPDIR)/netpanzer-UIDraw.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/netpanzer-UIDraw.obj `if test -f 'UILib/UIDraw.cpp'; then $(CYGPATH_W) 'UILib/UIDraw.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/UIDraw.cpp'; fi`

UILib/SDL/netpanzer-SDLDraw.o: UILib/SDL/SDLDraw.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/SDL/netpanzer-SDLDraw.o -MD -MP -MF "UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.Tpo" \
	  -c -o UILib/SDL/netpanzer-SDLDraw.o `test -f 'UILib/SDL/SDLDraw.cpp' || echo '$(srcdir)/'`UILib/SDL/SDLDraw.cpp; \
	then mv "UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.Tpo" "UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.Po"; \
	else rm -f "UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.Tpo"; exit 1; \
	fi
#	source='UILib/SDL/SDLDraw.cpp' object='UILib/SDL/netpanzer-SDLDraw.o' libtool=no \
#	depfile='UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.Po' tmpdepfile='UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/SDL/netpanzer-SDLDraw.o `test -f 'UILib/SDL/SDLDraw.cpp' || echo '$(srcdir)/'`UILib/SDL/SDLDraw.cpp

UILib/SDL/netpanzer-SDLDraw.obj: UILib/SDL/SDLDraw.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/SDL/netpanzer-SDLDraw.obj -MD -MP -MF "UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.Tpo" \
	  -c -o UILib/SDL/netpanzer-SDLDraw.obj `if test -f 'UILib/SDL/SDLDraw.cpp'; then $(CYGPATH_W) 'UILib/SDL/SDLDraw.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/SDL/SDLDraw.cpp'; fi`; \
	then mv "UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.Tpo" "UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.Po"; \
	else rm -f "UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.Tpo"; exit 1; \
	fi
#	source='UILib/SDL/SDLDraw.cpp' object='UILib/SDL/netpanzer-SDLDraw.obj' libtool=no \
#	depfile='UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.Po' tmpdepfile='UILib/SDL/$(DEPDIR)/netpanzer-SDLDraw.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/SDL/netpanzer-SDLDraw.obj `if test -f 'UILib/SDL/SDLDraw.cpp'; then $(CYGPATH_W) 'UILib/SDL/SDLDraw.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/SDL/SDLDraw.cpp'; fi`

UILib/SDL/netpanzer-SDLSound.o: UILib/SDL/SDLSound.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/SDL/netpanzer-SDLSound.o -MD -MP -MF "UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.Tpo" \
	  -c -o UILib/SDL/netpanzer-SDLSound.o `test -f 'UILib/SDL/SDLSound.cpp' || echo '$(srcdir)/'`UILib/SDL/SDLSound.cpp; \
	then mv "UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.Tpo" "UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.Po"; \
	else rm -f "UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.Tpo"; exit 1; \
	fi
#	source='UILib/SDL/SDLSound.cpp' object='UILib/SDL/netpanzer-SDLSound.o' libtool=no \
#	depfile='UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.Po' tmpdepfile='UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/SDL/netpanzer-SDLSound.o `test -f 'UILib/SDL/SDLSound.cpp' || echo '$(srcdir)/'`UILib/SDL/SDLSound.cpp

UILib/SDL/netpanzer-SDLSound.obj: UILib/SDL/SDLSound.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -MT UILib/SDL/netpanzer-SDLSound.obj -MD -MP -MF "UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.Tpo" \
	  -c -o UILib/SDL/netpanzer-SDLSound.obj `if test -f 'UILib/SDL/SDLSound.cpp'; then $(CYGPATH_W) 'UILib/SDL/SDLSound.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/SDL/SDLSound.cpp'; fi`; \
	then mv "UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.Tpo" "UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.Po"; \
	else rm -f "UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.Tpo"; exit 1; \
	fi
#	source='UILib/SDL/SDLSound.cpp' object='UILib/SDL/netpanzer-SDLSound.obj' libtool=no \
#	depfile='UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.Po' tmpdepfile='UILib/SDL/$(DEPDIR)/netpanzer-SDLSound.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netpanzer_CPPFLAGS) $(CPPFLAGS) $(netpanzer_CXXFLAGS) $(CXXFLAGS) -c -o UILib/SDL/netpanzer-SDLSound.obj `if test -f 'UILib/SDL/SDLSound.cpp'; then $(CYGPATH_W) 'UILib/SDL/SDLSound.cpp'; else $(CYGPATH_W) '$(srcdir)/UILib/SDL/SDLSound.cpp'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f NetPanzer/Views/.dirstamp
	-rm -f NetPanzer/Views/MainMenu/.dirstamp
	-rm -f NetPanzer/Views/MainMenu/Multi/$(DEPDIR)/.dirstamp
	-rm -f Lib/Types/.dirstamp
	-rm -f Lib/View/.dirstamp
	-rm -f Lib/Types/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Views/MainMenu/Multi/.dirstamp
	-rm -f NetPanzer/Core/$(DEPDIR)/.dirstamp
	-rm -f Lib/.dirstamp
	-rm -f NetPanzer/Interfaces/unix/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Classes/.dirstamp
	-rm -f NetPanzer/Views/$(DEPDIR)/.dirstamp
	-rm -f Lib/2D/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Port/.dirstamp
	-rm -f NetPanzer/Classes/Network/.dirstamp
	-rm -f UILib/Network/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Interfaces/unix/.dirstamp
	-rm -f Lib/optionmm/$(DEPDIR)/.dirstamp
	-rm -f UILib/SDL/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Classes/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Core/.dirstamp
	-rm -f NetPanzer/Classes/Weapons/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Views/MainMenu/$(DEPDIR)/.dirstamp
	-rm -f Lib/Particles/.dirstamp
	-rm -f NetPanzer/Classes/Network/$(DEPDIR)/.dirstamp
	-rm -f Lib/PObject/Classes/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Views/Game/$(DEPDIR)/.dirstamp
	-rm -f UILib/SDL/.dirstamp
	-rm -f Lib/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Classes/AI/.dirstamp
	-rm -f NetPanzer/Views/MainMenu/Options/$(DEPDIR)/.dirstamp
	-rm -f Lib/Xml/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Classes/Units/.dirstamp
	-rm -f NetPanzer/Classes/Weapons/.dirstamp
	-rm -f NetPanzer/Classes/AI/$(DEPDIR)/.dirstamp
	-rm -f Lib/Particles/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Classes/Units/$(DEPDIR)/.dirstamp
	-rm -f UILib/$(DEPDIR)/.dirstamp
	-rm -f Lib/2D/.dirstamp
	-rm -f Lib/Xml/.dirstamp
	-rm -f Lib/View/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Interfaces/.dirstamp
	-rm -f UILib/Network/.dirstamp
	-rm -f NetPanzer/Interfaces/$(DEPDIR)/.dirstamp
	-rm -f UILib/.dirstamp
	-rm -f Lib/Interfaces/.dirstamp
	-rm -f Lib/PObject/Classes/.dirstamp
	-rm -f NetPanzer/Views/MainMenu/Options/.dirstamp
	-rm -f Lib/Interfaces/$(DEPDIR)/.dirstamp
	-rm -f Lib/optionmm/.dirstamp
	-rm -f NetPanzer/Port/$(DEPDIR)/.dirstamp
	-rm -f NetPanzer/Views/Game/.dirstamp

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
