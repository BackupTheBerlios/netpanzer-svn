#============================================================================
# Rules for installation
#============================================================================

COPYDIRS ?= "cp -R" ;

# set some paths
appdatadir ?= [ ConcatDirs $(datadir) $(PACKAGE_NAME) ] ;
appdocdir ?= [ ConcatDirs $(datadir) doc $(PACKAGE_NAME) ] ;
appconfdir ?= [ ConcatDirs $(sysconfdir) $(PACKAGE_NAME) ] ;
appicondir ?= [ ConcatDirs $(datadir) pixmaps $(PACKAGE_NAME) ] ;
plugindir ?= [ ConcatDirs $(libdir) $(PACKAGE_NAME) ] ;

##  InstallHeader headername [ : subdir ]
##    DoInstall a headerfile into the includedir directory. A subdirectory
##    relative to the includedir can be specified.
rule InstallHeader
{
    LOCATE on $(<) = $(SUBDIR) ;
    Depends install_include : [ DoInstall $(<) : $(includedir) $(2) ] ;
}

##  InstallShellScript scriptname [ : subdir ]
##    Installs a shell script into the bindir directory. A subdirectory
##    relative to the bindir can be specified.
rule InstallShellScript
{
    LOCATE on $(<) = $(SUBDIR) ;
    Depends install_shellscript 
        : [ DoInstall $(<) : $(bindir) $(2) : $(INSTALL_SCRIPT) ]
    ;
}

##  InstallIcon files [ : subdir ]
##    Installs an icon
rule InstallIcon
{
    LOCATE on $(<) = $(SUBDIR) ;
    Depends install_data : [ DoInstall $(<) : $(appicondir) $(2) ] ;
}

##  InstallData files [ : subdir ]
##    Installs data files
rule InstallData
{
    LOCATE on $(<) = $(SUBDIR) ;
    Depends install_data : [ DoInstall $(<) : $(appdatadir) $(2) ] ;
}

##  InstallConfig files [ : subdir ]
##    Installs configuration files
rule InstallConfig
{
    LOCATE on $(<) = $(SUBDIR) ;
    Depends install_config : [ DoInstall $(<) : $(appconfdir) $(2) ] ;
}

##  InstallDoc files [ : subdir ]
##    Installs documentation files
rule InstallDoc
{
    LOCATE on $(<) = $(SUBDIR) ;
    Depends install_doc : [ DoInstall $(<) : $(appdocdir) $(2) ] ;
}

##  InstallMan files
##    DoInstall man files
rule InstallMan
{
    local dir i ;
    
    LOCATE on $(<) = $(SUBDIR) ;
    for i in $(<) {
        dir = $(mandir) ;
        switch $(i) {
            case *.1 : dir += man1 ;
            case *.2 : dir += man2 ;
            case *.3 : dir += man3 ;
            case *.4 : dir += man4 ;
            case *.5 : dir += man5 ;
            case *.6 : dir += man6 ;
            case *.7 : dir += man7 ;
            case *.8 : dir += man8 ;
            case *.9 : dir += man9 ;
            case * :
                echo "WARNING: manfile has no *.[0-9] ending." ;
        }
        Depends install_man : [ DoInstall $(i) : $(dir) ] ;
    }
}

##  InstallDocu files [ : subdir ]
##    DoInstall documentation files
rule InstallDocu
{
    LOCATE on $(<) = $(SUBDIR) ;
    Depends install_doc : [ DoInstall $(<) : $(appdocdir) $(2) ] ; 
}

##  DoDoInstall sourcename : directories [ : installapp ]
##    Creates a new installtarget for the given sources. The target(s) are
##    returned as function result.
##    (note: we can't name this rule Install, because Jambase already defines an
##     action for DoInstall :-/)
rule DoInstall
{
    local targets target i dir gdir ;
    dir = [ ConcatDirs $(DESTDIR) $(2) ] ;

    gdir = $(dir:G=dir) ;
    MkDir $(gdir) ;
  
    for i in $(1) {
        target = $(i:R=$(dir):G=install) ;
        targets += $(target) ;
        Depends $(target) : $(gdir) $(i) ;
        Install1 $(target) : $(i) ;

        if $(3) {
            INSTALL_APP on $(target) = $(3) ;
        } else {
            INSTALL_APP on $(target) = $(INSTALL_DATA) ;
        }
    }

    Always $(targets) ;
    return $(targets) ;
}

#----------------------------------------------------------------------------

INSTALLTARGETS = install_app install_plugin install_lib install_header
		 install_shellscript install_data install_config
                 install_doc ;

Always install $(INSTALLTARGETS) ;
NotFile install $(INSTALLTARGETS) ;
Depends install : $(INSTALLTARGETS) ;

actions Install1
{
  $(INSTALL_APP) $(>) $(<) $(INSTALLFLAGS) ;
}

actions CopyDirs
{
  $(COPYDIRS) $(>) $(<)
}

