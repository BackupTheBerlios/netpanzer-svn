#============================================================================
# Rules for installation
#============================================================================

# Override Jam defaults.
EXEMODE = 0755 ;
FILEMODE = 0644 ;

##  InstallApplication applicationname [ : subdir [ : options ] ]
##    Install an application into the bindir directory.  A subdirectory
##    relative to the bindir can be specified.  Possible options are "console"
##    if this is a console application (as opposed to a GUI application).  This
##    rule is already invoked by the Application rule, so usually there's no
##    need to call it manually.
rule InstallApplication
{
  local dir = [ FDirName $(bindir) $(2) ] ;
  local target = $(<:R=$(dir):G=install) ;

  CheckOptions console : $(3) : $(<) ;
  Install $(target) : $(<) ;
  MODE on $(target) = $(EXEMODE) ;
  Depends install_apps : $(target) ;
}

##  InstallLibrary libraryname [ : subdir ]
##    Install a library into the libdir directory. A subdirectory relative to
##    the libdar may be specified.
##    This rule is already invoked by the Library rule, so usually there's no
##    need to call it manually.
rule InstallLibrary
{
  local dir = [ FDirName $(libdir) $(2) ] ;
  local target = $(<:R=$(dir):G=install) ;
  
  Install $(target) : $(<) ;
  MODE on $(target) = $(FILEMODE) ;
  Depends install_libs : $(target) ;
}

##  InstallHeader headername [ : subdir ]
##    Install a headerfile into the includedir directory. A subdirectory
##    relative to the includedir can be specified.
rule InstallHeader
{
  local dir = [ FDirName $(includedir) $(2) ] ;
  local target = $(<:R=$(dir):G=install) ;
    
  Install $(target) : $(<) ;
  MODE on $(target) = $(FILEMODE) ;
  Depends install_headers : $(target) ;
}

##  InstallShellScript scriptname [ : subdir ]
##    Install a shell script into the bindir directory. A subdirectory
##    relative to the bindir can be specified.
rule InstallShellScript
{
  local dir = [ FDirName $(bindir) $(2) ] ;
  local target = $(<:R=$(dir):G=install) ;
  
  Install $(target) : $(<) ;
  MODE on $(target) = $(EXEMODE) ;
  Depends install_shellscripts : $(target) ;
}

##  InstallData datafiles [ : subdir ]
##    Installs files into the datadir directory. A subdirectory realtively
##    to the datadir can be specified.
rule InstallData
{
  local dir = [ FDirName $(datadir) $(2) ] ;

  local target i ;
  for i in $(<) {
      LOCATE on $(i) = $(SUBDIR) ;
      target = $(i:R=$(dir):G=install) ;
  
      Install $(target) : $(i) ;
      MODE on $(target) = $(FILEMODE) ;
      Depends install_shellscripts : $(target) ;
  }
}

##  Install Targetname : sourcename : directory
##    Install a file. The filemode of the file has to be specified with the
##    MODE variable for the target.
##    Normally the InstallApplication/Plugin/Header... rules should be enough
##    so that there's no need to call this rule.
rule Install
{
  Depends $(<) : $(>) ;
  Always $(<) ;

  #Make sure the target directory exists
  Depends $(<) : $(<:D:G=dir) ;
  MkDir $(<:D:G=dir) ;
}

#----------------------------------------------------------------------------

INSTALLTARGETS = install_apps install_libs install_headers
		 install_shellscripts ;

Always install $(INSTALLTARGETS) ;
NotFile install $(INSTALLTARGETS) ;

Depends install : $(INSTALLTARGETS) ;

actions Install
{
  $(INSTALL) -m$(MODE) "$(>)" "$(<)" $(INSTALLFLAGS) ;
}

actions CopyDirs
{
  cp -R "$(>)" "$(<)"
}
